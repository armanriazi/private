{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"I prefer to create a knowledge base for myself and then share it. The philosophy of creating this page is to solve this issue. Video Guide-Website Through to my experiences. Go Surfing On...","title":"Index"},{"location":"about/","tags":["about","me","i","armanriazi","riazi","experience","skills","career","recuit"],"text":"About Me \u00b6 Arman Riazi knows how to move your business, developing on Blockchain 4.0. Getting Luxary services that you can afford. I'm ArmanRiazi. I work with companies to realize the benefits and business outcomes of Blockchain and ITIL. I want to kind of give you a menu of every type of investment and solutions on the Blockchain. I learned the hard way over the years and I try to make it really simplistic on the website. It took me ages to learn the programming and found knowledge of IT. I have been working on the Blockchain ecosystem as a CryptoTrader and Blockchain developer for about 2 years. I've always influence by dr.Ravenwood. His works are so creative. I am sure he will impressive much more in the future. Following the table is my recent experiences \ud83d\ude0b for access to archive before 2020 you can click on it. Blockchain Experience \u00b6 Exprt: Experience Prd: Period Desc: Description Priority: My Interest priority for keep in continue Exprt Prd Priority Desc CryptoTrading 1 Y Experience losts liquid because of trading crypto in 2021 \ud83e\udd15 - Archived Cryptocurrency Solidity 2 M It seems to me that there would be better languages for developing so in the near furure we need to low-level lang for improve performance hardware resources IBM HyperLedger 1 M HyperLedger is suited for organizations especially. Hyperledger has got good community and uses cloud-native tools but I think it is not a real decentralized blockchain framework for scalability and giving governance so I used to decide a little bit work on it Rust-Lang 4 M Fantastic, complex language for decentralized/distributed Substrate 2 M Awsome work of \ud83d\ude4fDr.Gavin and parity.io community Polkadot & Kusuma 1 M Crowdloan, tokenization\ud83d\udcb2, parachain and parathreads Blockchain research 6 M It is always included in my routine activity during a day About 8-month trading, 2 months solidity, 4 months rust-lang, 2 months substrate, 2 months research on Polkadot ecosystem, 6 month scholar research on blockchain. There is not exactly the time to estimate spend time since developing and learning would go with each other. In my opinion, developers who had a kind of skills like Frontend, Backend, or Database have been forced into the Blockchain ecosystem because of the charm of the subject and the rapid growth and evolution of the Technology. I wonder to let you know I am big on Substrate and WASM Substrate, WASM to apply for mixing experiences and technologies that lead to #Defi2.0 & #Web3.0 . It is the only chance I get to find out what's been going on in the technology world and catch up with the current affairs. Proof of Knowledge \u00b6 Knowledgement-Tags Hands-On Experience With Blockchain Developing. Knowledge Of Blockchain Structure. Experienced With Software Development Lifecycle. Experienced With Cloud-Computing And DevOps/ Link CloudNative Tools. Expert In Modern Programming Languages. Have Technical Conscience To Define The Right Blockchain Solutions. Understand Decentralized Ledgers and Configure Full/Master Node. Technical Knowledge of Standards and Ecosystems. Cryptocurrency #trading and using financial services. Graduated M.Sc [[master]] In The Field Of Information Technology. Birthday: 11/11/1989 Over 10 years of experience in designing, developing, deploying, analyzing, and implementing [[Cloud]]-native, web, and software engineers. Expertise in the architecture of #Microservices and distributed systems, and modifying related application code. Capable of learning new programming languages and technologies. Good communication, problem-solving, documentation, and analytical. Capable of learning new skills and concepts quickly. Maintain effective relationships with others. General features including Research, Creative, Analyze, Self-Developing. Highly organized, motivated, confident. Resume \u00b6 Favourites \u00b6 Read fundamental blockchain whitepapers. and new taxonomy articles. Personal interests Footbal, Running, Body-Building, Motorcycles and Reading Books. 1> Live Concert and (Music Video)[fun.md] Call Me-Preferred Channels \u00b6 Skype: armanriazi (Video Call) Telegram: @arman_riazi(Instant Message, Call) Instagram: arman_soc_riazi(Instant Message, Call) Twitter: arman_soc_riazi(Message, Shared links) Channel: Blockchain-Aramisit, Discord ID: ArmanRiazi I recommend signing up channels to keep in connect.","title":"About"},{"location":"about/#about-me","text":"Arman Riazi knows how to move your business, developing on Blockchain 4.0. Getting Luxary services that you can afford. I'm ArmanRiazi. I work with companies to realize the benefits and business outcomes of Blockchain and ITIL. I want to kind of give you a menu of every type of investment and solutions on the Blockchain. I learned the hard way over the years and I try to make it really simplistic on the website. It took me ages to learn the programming and found knowledge of IT. I have been working on the Blockchain ecosystem as a CryptoTrader and Blockchain developer for about 2 years. I've always influence by dr.Ravenwood. His works are so creative. I am sure he will impressive much more in the future. Following the table is my recent experiences \ud83d\ude0b for access to archive before 2020 you can click on it.","title":"About Me"},{"location":"about/#blockchain-experience","text":"Exprt: Experience Prd: Period Desc: Description Priority: My Interest priority for keep in continue Exprt Prd Priority Desc CryptoTrading 1 Y Experience losts liquid because of trading crypto in 2021 \ud83e\udd15 - Archived Cryptocurrency Solidity 2 M It seems to me that there would be better languages for developing so in the near furure we need to low-level lang for improve performance hardware resources IBM HyperLedger 1 M HyperLedger is suited for organizations especially. Hyperledger has got good community and uses cloud-native tools but I think it is not a real decentralized blockchain framework for scalability and giving governance so I used to decide a little bit work on it Rust-Lang 4 M Fantastic, complex language for decentralized/distributed Substrate 2 M Awsome work of \ud83d\ude4fDr.Gavin and parity.io community Polkadot & Kusuma 1 M Crowdloan, tokenization\ud83d\udcb2, parachain and parathreads Blockchain research 6 M It is always included in my routine activity during a day About 8-month trading, 2 months solidity, 4 months rust-lang, 2 months substrate, 2 months research on Polkadot ecosystem, 6 month scholar research on blockchain. There is not exactly the time to estimate spend time since developing and learning would go with each other. In my opinion, developers who had a kind of skills like Frontend, Backend, or Database have been forced into the Blockchain ecosystem because of the charm of the subject and the rapid growth and evolution of the Technology. I wonder to let you know I am big on Substrate and WASM Substrate, WASM to apply for mixing experiences and technologies that lead to #Defi2.0 & #Web3.0 . It is the only chance I get to find out what's been going on in the technology world and catch up with the current affairs.","title":"Blockchain Experience"},{"location":"about/#proof-of-knowledge","text":"Knowledgement-Tags Hands-On Experience With Blockchain Developing. Knowledge Of Blockchain Structure. Experienced With Software Development Lifecycle. Experienced With Cloud-Computing And DevOps/ Link CloudNative Tools. Expert In Modern Programming Languages. Have Technical Conscience To Define The Right Blockchain Solutions. Understand Decentralized Ledgers and Configure Full/Master Node. Technical Knowledge of Standards and Ecosystems. Cryptocurrency #trading and using financial services. Graduated M.Sc [[master]] In The Field Of Information Technology. Birthday: 11/11/1989 Over 10 years of experience in designing, developing, deploying, analyzing, and implementing [[Cloud]]-native, web, and software engineers. Expertise in the architecture of #Microservices and distributed systems, and modifying related application code. Capable of learning new programming languages and technologies. Good communication, problem-solving, documentation, and analytical. Capable of learning new skills and concepts quickly. Maintain effective relationships with others. General features including Research, Creative, Analyze, Self-Developing. Highly organized, motivated, confident.","title":"Proof of Knowledge"},{"location":"about/#resume","text":"","title":"Resume"},{"location":"about/#favourites","text":"Read fundamental blockchain whitepapers. and new taxonomy articles. Personal interests Footbal, Running, Body-Building, Motorcycles and Reading Books. 1> Live Concert and (Music Video)[fun.md]","title":"Favourites"},{"location":"about/#call-me-preferred-channels","text":"Skype: armanriazi (Video Call) Telegram: @arman_riazi(Instant Message, Call) Instagram: arman_soc_riazi(Instant Message, Call) Twitter: arman_soc_riazi(Message, Shared links) Channel: Blockchain-Aramisit, Discord ID: ArmanRiazi I recommend signing up channels to keep in connect.","title":"Call Me-Preferred Channels"},{"location":"fun/","text":"Entertainment \u00b6 Music-Video","title":"Entertainment"},{"location":"fun/#entertainment","text":"Music-Video","title":"Entertainment"},{"location":"links/","text":"Links Papers On Blockchain Personal WebSite(Archived) Personal WebSite(Archived) Email addresses Links \u00b6 English Resume Youtube Channel Blockchain Youtube Channel-Archived Papers On Blockchain \u00b6 Read.Cash Medium Ecency Repo-Doc-Blockchain Github Gitlab Aparat Channel Linux foundation Linkedin ResearchGate Dev.to Stackoverflow CodeGrepper Linktr.ee Personal WebSite(Archived) \u00b6 Arazhit Aramisit ArmanRiazi Personal WebSite(Archived) \u00b6 ArmanRiazi-Doc Email addresses \u00b6 *Job Developer Scholar * Skype ID * armanriazi","title":"Links"},{"location":"links/#links","text":"English Resume Youtube Channel Blockchain Youtube Channel-Archived","title":"Links"},{"location":"links/#papers-on-blockchain","text":"Read.Cash Medium Ecency Repo-Doc-Blockchain Github Gitlab Aparat Channel Linux foundation Linkedin ResearchGate Dev.to Stackoverflow CodeGrepper Linktr.ee","title":"Papers On Blockchain"},{"location":"links/#personal-websitearchived","text":"Arazhit Aramisit ArmanRiazi","title":"Personal WebSite(Archived)"},{"location":"links/#personal-websitearchived_1","text":"ArmanRiazi-Doc","title":"Personal WebSite(Archived)"},{"location":"links/#email-addresses","text":"*Job Developer Scholar * Skype ID * armanriazi","title":"Email addresses"},{"location":"tags/","text":"Tags \u00b6 Following is a list of relevant tags: about \u00b6 About Me api \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api armanriazi \u00b6 About Me Master Thesis--Arman Riazi caas \u00b6 Rancher Master Thesis--Arman Riazi career \u00b6 About Me cicd \u00b6 CICD Kubernetes armanriazi-movies-reactjs armanriazi-vidly-api cloud \u00b6 Cloud Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi codebase \u00b6 Programming container \u00b6 Docker Rancher Master Thesis--Arman Riazi corda \u00b6 Corda-R3 couchdb \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api crowdloan \u00b6 Crowdloan research intro cryprocurrency \u00b6 Cryptocurrency Trading-Technical-Fundamental devops \u00b6 Hyperledger CICD Cloud DevOps Docker Elastic-Search Kubernetes Rancher Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi docker \u00b6 Docker elastic \u00b6 Elastic-Search esxi \u00b6 Virualization ethereum_ecosystem \u00b6 Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract ewasm \u00b6 ParaState WASM experience \u00b6 About Me expressjs \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api faucet \u00b6 Arman Riazi github \u00b6 Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api Programming Master Thesis--Arman Riazi hyperledger \u00b6 Hyperledger i \u00b6 About Me ibm \u00b6 Hyperledger armanriazi-movies-reactjs armanriazi-vidly-api iot \u00b6 Secondstate research intro java \u00b6 Corda-R3 Master Thesis--Arman Riazi kovan \u00b6 Arman Riazi kubernetes \u00b6 Kubernetes Rancher kusama \u00b6 Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro llvm \u00b6 Ewasm research intro master \u00b6 Master Thesis--Arman Riazi me \u00b6 About Me node \u00b6 Substrate setup research intro nodejs \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api parastate \u00b6 Parastate research intro polkadot \u00b6 Polka research intro Substrate framework research intro polkadot_ecosystem \u00b6 ParaState Polkadot Substrate Parastate research intro Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro pos \u00b6 Parastate research intro programming \u00b6 Programming project \u00b6 ParaState Polkadot Substrate rancher \u00b6 Rancher reactjs \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api recuit \u00b6 About Me research \u00b6 ParaState Polkadot restapi \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api riazi \u00b6 About Me rpc \u00b6 Substrate setup research intro rust \u00b6 Substrate setup research intro Programming sample \u00b6 ParaState Polkadot Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api science \u00b6 Master Thesis--Arman Riazi search \u00b6 Elastic-Search secondstate \u00b6 Secondstate research intro simulation \u00b6 Corda-R3 skills \u00b6 About Me smartcontract \u00b6 Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract substrate \u00b6 ParaState Polkadot Substrate Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro trade \u00b6 Cryptocurrency Trading-Technical-Fundamental university \u00b6 Master Thesis--Arman Riazi virtualization \u00b6 Virualization Master Thesis--Arman Riazi vsphere \u00b6 Virualization wasm \u00b6 SecondState WASM Ewasm research intro webassembly \u00b6 Ewasm research intro whitepapaer \u00b6 Polka research intro If you want to get updated-graph image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ Graph) If you want to get updated-mind-mapping image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ MindMapping)","title":"Tags"},{"location":"tags/#tags","text":"Following is a list of relevant tags:","title":"Tags"},{"location":"tags/#about","text":"About Me","title":"about"},{"location":"tags/#api","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"api"},{"location":"tags/#armanriazi","text":"About Me Master Thesis--Arman Riazi","title":"armanriazi"},{"location":"tags/#caas","text":"Rancher Master Thesis--Arman Riazi","title":"caas"},{"location":"tags/#career","text":"About Me","title":"career"},{"location":"tags/#cicd","text":"CICD Kubernetes armanriazi-movies-reactjs armanriazi-vidly-api","title":"cicd"},{"location":"tags/#cloud","text":"Cloud Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi","title":"cloud"},{"location":"tags/#codebase","text":"Programming","title":"codebase"},{"location":"tags/#container","text":"Docker Rancher Master Thesis--Arman Riazi","title":"container"},{"location":"tags/#corda","text":"Corda-R3","title":"corda"},{"location":"tags/#couchdb","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"couchdb"},{"location":"tags/#crowdloan","text":"Crowdloan research intro","title":"crowdloan"},{"location":"tags/#cryprocurrency","text":"Cryptocurrency Trading-Technical-Fundamental","title":"cryprocurrency"},{"location":"tags/#devops","text":"Hyperledger CICD Cloud DevOps Docker Elastic-Search Kubernetes Rancher Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi","title":"devops"},{"location":"tags/#docker","text":"Docker","title":"docker"},{"location":"tags/#elastic","text":"Elastic-Search","title":"elastic"},{"location":"tags/#esxi","text":"Virualization","title":"esxi"},{"location":"tags/#ethereum_ecosystem","text":"Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract","title":"ethereum_ecosystem"},{"location":"tags/#ewasm","text":"ParaState WASM","title":"ewasm"},{"location":"tags/#experience","text":"About Me","title":"experience"},{"location":"tags/#expressjs","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"expressjs"},{"location":"tags/#faucet","text":"Arman Riazi","title":"faucet"},{"location":"tags/#github","text":"Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api Programming Master Thesis--Arman Riazi","title":"github"},{"location":"tags/#hyperledger","text":"Hyperledger","title":"hyperledger"},{"location":"tags/#i","text":"About Me","title":"i"},{"location":"tags/#ibm","text":"Hyperledger armanriazi-movies-reactjs armanriazi-vidly-api","title":"ibm"},{"location":"tags/#iot","text":"Secondstate research intro","title":"iot"},{"location":"tags/#java","text":"Corda-R3 Master Thesis--Arman Riazi","title":"java"},{"location":"tags/#kovan","text":"Arman Riazi","title":"kovan"},{"location":"tags/#kubernetes","text":"Kubernetes Rancher","title":"kubernetes"},{"location":"tags/#kusama","text":"Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro","title":"kusama"},{"location":"tags/#llvm","text":"Ewasm research intro","title":"llvm"},{"location":"tags/#master","text":"Master Thesis--Arman Riazi","title":"master"},{"location":"tags/#me","text":"About Me","title":"me"},{"location":"tags/#node","text":"Substrate setup research intro","title":"node"},{"location":"tags/#nodejs","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"nodejs"},{"location":"tags/#parastate","text":"Parastate research intro","title":"parastate"},{"location":"tags/#polkadot","text":"Polka research intro Substrate framework research intro","title":"polkadot"},{"location":"tags/#polkadot_ecosystem","text":"ParaState Polkadot Substrate Parastate research intro Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro","title":"polkadot_ecosystem"},{"location":"tags/#pos","text":"Parastate research intro","title":"pos"},{"location":"tags/#programming","text":"Programming","title":"programming"},{"location":"tags/#project","text":"ParaState Polkadot Substrate","title":"project"},{"location":"tags/#rancher","text":"Rancher","title":"rancher"},{"location":"tags/#reactjs","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"reactjs"},{"location":"tags/#recuit","text":"About Me","title":"recuit"},{"location":"tags/#research","text":"ParaState Polkadot","title":"research"},{"location":"tags/#restapi","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"restapi"},{"location":"tags/#riazi","text":"About Me","title":"riazi"},{"location":"tags/#rpc","text":"Substrate setup research intro","title":"rpc"},{"location":"tags/#rust","text":"Substrate setup research intro Programming","title":"rust"},{"location":"tags/#sample","text":"ParaState Polkadot Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api","title":"sample"},{"location":"tags/#science","text":"Master Thesis--Arman Riazi","title":"science"},{"location":"tags/#search","text":"Elastic-Search","title":"search"},{"location":"tags/#secondstate","text":"Secondstate research intro","title":"secondstate"},{"location":"tags/#simulation","text":"Corda-R3","title":"simulation"},{"location":"tags/#skills","text":"About Me","title":"skills"},{"location":"tags/#smartcontract","text":"Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract","title":"smartcontract"},{"location":"tags/#substrate","text":"ParaState Polkadot Substrate Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro","title":"substrate"},{"location":"tags/#trade","text":"Cryptocurrency Trading-Technical-Fundamental","title":"trade"},{"location":"tags/#university","text":"Master Thesis--Arman Riazi","title":"university"},{"location":"tags/#virtualization","text":"Virualization Master Thesis--Arman Riazi","title":"virtualization"},{"location":"tags/#vsphere","text":"Virualization","title":"vsphere"},{"location":"tags/#wasm","text":"SecondState WASM Ewasm research intro","title":"wasm"},{"location":"tags/#webassembly","text":"Ewasm research intro","title":"webassembly"},{"location":"tags/#whitepapaer","text":"Polka research intro If you want to get updated-graph image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ Graph) If you want to get updated-mind-mapping image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ MindMapping)","title":"whitepapaer"},{"location":"private/commands/","text":"[[private-docker-commands]] [[private-substrate-double-node-running-commands]] [[private-ubuntu-commands]]","title":"Commands"},{"location":"private/private/","text":" English Slide-Until-2019","title":"private"},{"location":"private/todo/","text":" ToDo \u00b6 IMF \u06cc\u0648\u0644 \u0628\u0647 \u06a9\u0634\u0648\u0631 \u0647\u0627 \u0642\u0631\u0636 \u0645\u06cc\u062f\u0647\u0646\u062f GDP \u0646\u0627\u062e\u0627\u0644\u0635 \u0645\u0644\u06cc","title":"Todo"},{"location":"private/todo/#todo","text":"IMF \u06cc\u0648\u0644 \u0628\u0647 \u06a9\u0634\u0648\u0631 \u0647\u0627 \u0642\u0631\u0636 \u0645\u06cc\u062f\u0647\u0646\u062f GDP \u0646\u0627\u062e\u0627\u0644\u0635 \u0645\u0644\u06cc","title":"ToDo"},{"location":"private/commands/private-docker-commands/","text":"docker run -it --rm -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material build docker tag local-image:tagname new-repo:tagname docker push armanriazi2blockchain/armanriazi2blockchain:tagname docker exec -it -u root node-docker /bin/bash docker run -it autodevops.dynv6.net:5000/mongo:4 chmod 777 /home/user/.docker","title":"Private docker commands"},{"location":"private/commands/private-substrate-double-node-running-commands/","text":"Node-Setup1 \u00b6 ./target/release/node-template \\ --base-path /tmp/alice \\ --chain local \\ --alice \\ --port 30333 \\ --ws-port 9945 \\ --rpc-port 9933 \\ --unsafe-rpc-external \\ --rpc-methods=unsafe \\ --validator \\ --ws-external \\ --rpc-cors all \\ --no-mdns \\ --name \"Arman Riazi\" \\ --node-key 0000000000000000000000000000000000000000000000000000000000000001 Node-Setup2 \u00b6 ./target/release/node-template \\ --base-path /tmp/bob \\ --chain local \\ --bob \\ --port 30334 \\ --ws-port 9946 \\ --unsafe-rpc-external \\ --rpc-methods=unsafe \\ --rpc-port 9934 \\ --validator \\ --ws-external \\ --rpc-cors all \\ --no-mdns \\ --name \"Arman Riazi 2\" \\ --bootnodes /ip4/192.168.8.110/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp Node-Setup-Other-Commands \u00b6 --enable-offchain-indexing true \\ --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' \\ --enable-offchain-indexing true \\ --chain ./customSpecRaw.json --rpc-methods Unsafe \\ subkey restore Alice ./target/release/node-template purge-chain --base-path /tmp/alice --chain local /home/u2004zero/u2004zero/app/substrate/substrate-node-template cargo build --release && ./target/release/node-template --ws-external --rpc-cors all --name \"Arman Riazi\" --pruning archive --prometheus-external --chain local --tmp --dev (fir) (--base-path ./my-chain-state --enable-offchain-indexing true) /scripts/docker_run.sh cargo build --release && ./target/release/node-template --dev --ws-external --base-path ./my-chain-state SKIP_WASM_BUILD=1 cargo check -p node-template-runtime","title":"Private substrate double node running commands"},{"location":"private/commands/private-substrate-double-node-running-commands/#node-setup1","text":"./target/release/node-template \\ --base-path /tmp/alice \\ --chain local \\ --alice \\ --port 30333 \\ --ws-port 9945 \\ --rpc-port 9933 \\ --unsafe-rpc-external \\ --rpc-methods=unsafe \\ --validator \\ --ws-external \\ --rpc-cors all \\ --no-mdns \\ --name \"Arman Riazi\" \\ --node-key 0000000000000000000000000000000000000000000000000000000000000001","title":"Node-Setup1"},{"location":"private/commands/private-substrate-double-node-running-commands/#node-setup2","text":"./target/release/node-template \\ --base-path /tmp/bob \\ --chain local \\ --bob \\ --port 30334 \\ --ws-port 9946 \\ --unsafe-rpc-external \\ --rpc-methods=unsafe \\ --rpc-port 9934 \\ --validator \\ --ws-external \\ --rpc-cors all \\ --no-mdns \\ --name \"Arman Riazi 2\" \\ --bootnodes /ip4/192.168.8.110/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp","title":"Node-Setup2"},{"location":"private/commands/private-substrate-double-node-running-commands/#node-setup-other-commands","text":"--enable-offchain-indexing true \\ --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' \\ --enable-offchain-indexing true \\ --chain ./customSpecRaw.json --rpc-methods Unsafe \\ subkey restore Alice ./target/release/node-template purge-chain --base-path /tmp/alice --chain local /home/u2004zero/u2004zero/app/substrate/substrate-node-template cargo build --release && ./target/release/node-template --ws-external --rpc-cors all --name \"Arman Riazi\" --pruning archive --prometheus-external --chain local --tmp --dev (fir) (--base-path ./my-chain-state --enable-offchain-indexing true) /scripts/docker_run.sh cargo build --release && ./target/release/node-template --dev --ws-external --base-path ./my-chain-state SKIP_WASM_BUILD=1 cargo check -p node-template-runtime","title":"Node-Setup-Other-Commands"},{"location":"private/commands/private-ubuntu-commands/","text":"Network \u00b6 echo \"1\" > /proc/sys/net/ipv4/ip__forward sudo iptables -t nat -A PREROUTING -p tcp --dport 22 -j REDIRECT --to-port 2222 netsh interface portproxy add v4tov4 listenport=35999 listenaddress=0.0.0.0 connectport=80 connectaddress=0.0.0.0 netsh http delete urlacl url=http://*:35999/ user=Everyone","title":"Private ubuntu commands"},{"location":"private/commands/private-ubuntu-commands/#network","text":"echo \"1\" > /proc/sys/net/ipv4/ip__forward sudo iptables -t nat -A PREROUTING -p tcp --dport 22 -j REDIRECT --to-port 2222 netsh interface portproxy add v4tov4 listenport=35999 listenaddress=0.0.0.0 connectport=80 connectaddress=0.0.0.0 netsh http delete urlacl url=http://*:35999/ user=Everyone","title":"Network"},{"location":"private/english/en-about/","text":" Hello first name is Arman and Last name is Riazi I hope you have a good time Let me explain about my self to into to you I have been working on the Blockchain ecosystem as a CryptoTrader and Blockchain developer. I work with companies to realize the benefits and business outcomes of Blockchain and ITIL. Over 10 years of experience in developing, deploying, analyzing, and implementing [[Cloud]]-native, web, and software engineers. I graduated M.Sc [[master]] In the Field Of Information Technology. It took me ages to learn. I learned the hard way over the years and I try to make it really simplistic on my personal website. I've always influence by dr.Ravenwood. Her works are so creative. I am sure he will impressive much more in the future so I would like to give you a menu of solutions for investment and development based on the Blockchain. it will be nice to meet you Good luck","title":"English"},{"location":"private/english/en-bbc/","text":" I can't work it out. I can't get my head round this. I'm having difficulty getting to grips with this. This isn't sinking in. It's time to knock off. You've done enough. I think that's enough for now. Let's leave it there. Let's call it a day. Let's wrap it up there. Let's look at the backstory\u2026 The reason we're in this situation in the first place is\u2026 Let me just fill you in with the background\u2026. Let's just remind ourselves how we got here in the first place\u2026 I'm really sorry to let you down. Sorry to disappoint you but\u2026 It's not how we planned it but... It would be great if you could... I'd really appreciate it if you would... Would you mind...? I'd really appreciate it if... We're operating in tough economic conditions. We need to meet our sales targets. Pull your socks up! You shouldn't mix business with pleasure. I'll be advertising for a replacement for Tom today. I want to make some changes in the office. I need to turn this business round. I'm keen to hear your ideas. I have had some head space and a chance to chew things over. I've come to a final decision. I'll give it a go. You won't regret your decision. Don't be too hasty. Don't rush into making a decision. We can work this out. This promotion recognises your achievements at the company. It's an opportunity of a lifetime. You would be my right-hand man/woman. I've been doing a strategic review of the company. I need to downsize. I need you to step aside. The company needs new direction and more dynamic leadership. You are surplus to requirement. Could I check availability for your venue please? What business facilities do you have? How many people can the room or venue hold? Can you provide hospitality? How much does it cost? I've got to prioritise. This task is the most important so I'm going to concentrate on this first. It would be a great help if you could do this for me please. I'm going to have to put that off until tomorrow, I'm afraid. Let me show you the ropes. Watch what I do for a while. Why don't you make a start on this? I'm here to help, so please ask me if you need to know what to do. You're the boss and I think the news is better coming from you. It was your decision in the first place so you need to explain that the situation has changed. This is your responsibility. And here are some phrases your boss might use to apologise: I've been rethinking our staffing situation in the office. Sorry, I made a mistake. I miscalculated my staffing numbers. I would love to have you back in the office. We're a bit busy at the moment; could I take your name and we'll call you back? When would be a convenient time to call you? Could I take a message please and I'll make sure he/she calls you back? You need to think positively. Try looking in the job section in the newspaper. There are loads of job-finding websites you could sign up for. What about ringing some of the people you know? You could register with a recruitment agency. I have a specific idea in mind. I'm interested in hearing your thoughts on how to improve my idea. I'd like to use your design skills to produce a fantastic product. I need to sign off your designs before they go into production. We've got to move the furniture around. I'm afraid I've got to let you go. I'm giving you seven days' notice. Ladies and gentlemen, on behalf of everyone at Tip Top Trading, thank you for our award. Our company is at the forefront of plastic innovation. This award is a real boost for everyone working at the company. This award really means a lot to us. Excuse me, hello, I'm Anna. I work as a Sales Executive at Tip Top Trading. Can you tell me about your company? Can I briefly tell you about what our company does? I think we might be able to help you. Here's my business card should you want to call.","title":"English"},{"location":"private/english/en-forgraph/","text":" [[influence]] influence [[rather]] rather [[thanks]] thanks [[conflict]] conflict [[approach]] approach [[situation]] situation [[history]] history [[as]] as [[abilities]] abilities [[dueto]] dueto [[continue]] continue [[conjunctions]] conjunctions [[before]] before [[organize]] organize [[if]] if [[mean]] mean [[understand]] understand [[advice]] advice [[got]] got [[getting]] getting [[going]] going [[call]] call [[know]] know [[try]] try [[think]] think [[relevent]] relevent [[time]] time [[whichis]] which [[way]] way [[practise]] practise [[interupt]] interupt [[let]] let [[decision]] decision [[ask]] ask [[talk]] talk [[like]] like [[interest]] interest [[take]] take [[look-see]] take [[recommend]] recommend [[feel]] feel [[insist]] insist [[issue]] issue [[wonder]] wonder [[meet]] meet [[permission]] permission [[be]] be [[right]] right [[work]] work [[decision]] decision [[define_name]] define_name [[do]] do [[goal]] goal [[point]] point","title":"English For Graph"},{"location":"private/english/english/","text":" ForGraph BBC Seminar BBC EnglishGrammarHere","title":"English"},{"location":"private/english/category/abilities/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[I can't face myself]] [[I don't think of myself as a hero person]] [[I tend to work at office it gives me etc]] [[I never gained any information except self study]]","title":"Abilities"},{"location":"private/english/category/advice/","text":" [[You need to exercise more often]] [[Without doubt, it's the must-see clip of this toturial. The whole clip blends together well]] [[On this side here you can move onto the next lesson]] [[You have the option of clicking here]] [[Whatever works best for you]] [[It's a different way to teach it]] [[This is crucial for]] [[It'll be a competition advantage for you]] [[You gotta keep an eye on some of these factors]] [[Always look at the source and then the source of the source If you want to drill down]]","title":"Advice"},{"location":"private/english/category/agree/","text":" [[I agree whole heartly]] [[You're probably right]] [[Me too]] [[So do I]] [[Front End doesn't agree with me]]","title":"English"},{"location":"private/english/category/approach/","text":" [[It's another way of looking at things and it's a lot more positive]]","title":"English"},{"location":"private/english/category/as/","text":" [[Most programmers see themselves as an intelligence]] [[As you know from your own experience]] [[When demand is rising for products in a country and the supply of these products dosen't increase as much as the demand does, the prices rise]] [[aslongas]] aslongas","title":"English"},{"location":"private/english/category/ask/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[It couldn't hurt to ask someone]] [[I was wondering if you could etc]]","title":"Ask"},{"location":"private/english/category/aslongas/","text":" [[We will do anything as long as it is legal]]","title":"English"},{"location":"private/english/category/be/","text":" [[canbe]] canbe [[willbe]] willbe","title":"English"},{"location":"private/english/category/before/","text":" [[We should do that before we continue]]","title":"English"},{"location":"private/english/category/call/","text":" [[I was going to call you]] [[I missed your call]] [[The reason I am asking]] [[Can you put your boss on the phone-Q]]","title":"English"},{"location":"private/english/category/canbe/","text":" [[It can be realistic]] [[You can click on each one of these buttons here]] [[we don't know how to ..., so you just need to be aware of the fact that given a Cert]]","title":"English"},{"location":"private/english/category/conflict/","text":" [[On the one hand, I would want to tell the truth. On the other hand, I wouldn't want to get in trouble]] [[Actually, I don't think either of us did. We only got it because we couldn't agree on a selected type of smart contract]] [[But complications arise when it etc]]","title":"English"},{"location":"private/english/category/conjunctions/","text":" [[More over]] [[Further more]] [[In terms of why why are we starting]]","title":"Conjunctions"},{"location":"private/english/category/continue/","text":" [[As previously discussed]] [[As mention earlier in the course]] [[We'll get into that in more details]] [[We'll get there soon later]] [[We'll talk about how to do that]] [[Before we go on I want to put some finance concepts on your radar screen that we're going to go into much more details]] [[During our session before the your eyes opened would often start the session with relaxing]] [[Remember that revenue for a company is the same thing kind of as GFP for a country ]] [[After this section we're going to jump right into investment banking as such]] [[This page assume you're investing in banks]] [[This course is base on my real life practical exp]] [[I'll explain in the next lecture]] [[I want to show you these things in a second here]] [[I forgot to sth so I would dclick, and I would go here]]","title":"English"},{"location":"private/english/category/decision/","text":" [[I think you should consider decision]]","title":"English"},{"location":"private/english/category/define_name/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[Which is called revenue]] [[When price increase it's called revenue]] [[When the economy are not doing well we refer to this as a bear market]] [[A ... is actually defined by at least two params]] [[Satosh was quoted as saying etc]] [[Which stand for noun]] [[One of the most powerfull tools that you can have]] [[The smart contracts written in Solidity need to be compiled and deployed to the blockchain This can be achieved by using a development environment for Ethereum called Truffle]]","title":"Define name"},{"location":"private/english/category/do/","text":" [[question_do]]","title":"Do"},{"location":"private/english/category/dueto/","text":" [[Are these changes due to etc]] [[It's primarily due to high prices]]","title":"English"},{"location":"private/english/category/expire/","text":" [[My passport has two years left on its expired date]]","title":"English"},{"location":"private/english/category/feel-bad/","text":" [[We are degrising]] [[Snap in the face]] [[We get fooled by]]","title":"Feel bad"},{"location":"private/english/category/feel/","text":" [[This will all make much more sense to you]] [[feel-bad]]","title":"English"},{"location":"private/english/category/getting/","text":" [[The migration is getting harder]]","title":"English"},{"location":"private/english/category/goal/","text":" [[The goal of the ... is actually to make sure that... while...]]","title":"English"},{"location":"private/english/category/going/","text":" [[I'm gonna cover any boring theory]] [[I'm going to be hired]] [[You're actually going to be able to etc]]","title":"English"},{"location":"private/english/category/got/","text":" [[I've got some good news to deliver]] [[Have you got that-Q]]","title":"English"},{"location":"private/english/category/happen/","text":" [[High prices can occur for many reasons]] [[So what is going to happen]] [[The market tries to anticipate what will happen]] [[It can help me predict what might happen from a perspective in the future]]","title":"English"},{"location":"private/english/category/history/","text":" [[You're standing on the exact site where Dr.gavin founded 2018]]","title":"History"},{"location":"private/english/category/if/","text":" [[If you don't understand ..., then it can be catastrophic,right]] [[If I understand you correctly, you think our investment has been mistake]] [[If you want I could change it]] [[The point here is that if you got the course wrong, then course is meaning less, okey-Q]] [[If the price of gold goes up a lot it can be seen as a flight to quality investments or a feer investment indicators]] [[If we select ... and then ... we can ...]] [[If there were other ... here, we'd use other ones]] [[If you or me were to get a loan from a bank we would pay interest on that loan until we pay it all back to the bank]] [[If I told you I was going to give you a dollar in a year and the interest rate then was ten percent you can do math and figure out]] [[If a country make more money than it spends that it has a deficities]] [[question_if]]","title":"English"},{"location":"private/english/category/influence/","text":" [[Believe it or not I've always influence by dr.gavinwood . Her works are so creative]] [[We work on are significantly influence by etc]] [[They rely on what other people tell them and they influenced by other people's opinions]] [[Price of commedites affect almost all companies in the world regardless of what industry they're in]]","title":"English"},{"location":"private/english/category/insist/","text":" [[you have to do sth]] [[You can't except me to work]] [[I really must insist that you etc]] [[When buildling a model of the company you are analyzing uses a lot of debt, you have to analyze interest rate]]","title":"English"},{"location":"private/english/category/interest/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[I'm interested in knowing what kind of etc]]","title":"Interest"},{"location":"private/english/category/interupt/","text":" [[I'd rather to let me finish it that is all right]] [[wait]] wait","title":"English"},{"location":"private/english/category/issue/","text":" [[I maybe wrong, but etc]] [[We are on the wrong track]] [[Sometimes that takes care of it]] [[To see if that does the trick]] [[Fixes the problem]] [[I've got a bit of a problem in the project. the noun not working]] [[After a while I realized it wasn't working]] [[It takes a little while to work]] [[She is lack of opinion]] [[So I had a look at the ...thinking It might be that]] [[I was wondering if you could etc]] [[But that seems to be ok]] [[If you want I could change it]] [[It's been working fine]] [[It would be good if I could get it fix]] [[I don't know if it works but we try it]] [[It can get you into trouble if you don't use unit test]] [[The situation is getting out of control]] [[I'm looking forward to this trip]] [[It is cause by etc]] [[I think it must be a fault with your OS]] [[I've got problem with etc]] [[The problem should go in a minute]] [[depending on what sector you cover]] [[Sometimes those .. impacts on a ... don't worry at all]] [[That's one of the reason why there was a bit of commedity]] [[question_issue]]","title":"English"},{"location":"private/english/category/know/","text":" [[question_know]]","title":"English"},{"location":"private/english/category/let/","text":" [[Let's talk about the what, why, and how of the...]] [[let me kick it off with the what]] [[Let's work on with together]] [[Let me continue]] [[Let\u2019s go back to our original example]] [[Let me explain one more time]] [[Let's called a Day]] [[Let's get to the point]] [[Let me have everone for attention please]] [[Let me try to answer your question like this]] [[Let me get a closer look at this first]] [[Let's head over to -.org and take a look etc]] [[Let's take a look at the following exp]] [[Let's take a few minutes to discuss the difference between these two type of setups]] [[I hope you enjoy. If you have any question please let me know]] [[question_let]]","title":"English"},{"location":"private/english/category/like/","text":" [[I'd like to ask when you should talk etc]]","title":"English"},{"location":"private/english/category/look-see/","text":" [[So take a look here]] [[So back to noun]] [[We look at it the same way]] [[We look at it howmuch money they make]]","title":"English"},{"location":"private/english/category/mean/","text":" [[It's saying, it means to make etc]] [[I've been meaning to speak to you all evening]] [[I know what you mean , but etc]] [[If I understand you correctly, you think our investment has been mistake]]","title":"English"},{"location":"private/english/category/meet/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[We need to move on]] [[I think we are drifting off the point a bit]] [[Etc for the same reason that peter has just given]] [[I'm afraid we've run out of time]] [[We'll have to cut this meeting short]] [[Who am I meeting-Q]]","title":"Meet"},{"location":"private/english/category/need/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[You need to determine the price of GAS]] [[You need to familiar with the etc]]","title":"Need"},{"location":"private/english/category/opinion/","text":" [[To each his own. Everyone has a different opinion]] [[In my opinion...or I find it]] [[It's basically common sense]] [[agree]]","title":"English"},{"location":"private/english/category/organize/","text":" [[I just need to sort it out with you]]","title":"English"},{"location":"private/english/category/permission/","text":" [[Am I allowed to use my mobile phone-Q]]","title":"English"},{"location":"private/english/category/point/","text":" [[Good point]] [[Keeping to the point]] [[From my point of view]]","title":"English"},{"location":"private/english/category/practise/","text":" [[You'll have to do better than that- I'm afraid]] [[I'm not gonna cover any boring theory this will be practical staff you can use]] [[This will all make much more Sense to you after we're done with whole of this course]] [[Read the answer after you've tried to complete the exercise]]","title":"English"},{"location":"private/english/category/question/","text":" [[question_think]] [[question_try]] [[question_know]] [[question_much]] [[question_could]] [[question_do]] [[question_can]] [[question_time]] [[question_details]] [[question_would]] [[question_let]] [[question_issue]] [[One more question]] [[Pardon-Q]] [[Which is the best way encoding-Q]] [[did you catch the process photos I posted-Q]] [[Please clarifying what you mean-Q]] [[Which task do you associate with current plan-Q]] [[Is there anyway to get a cheaper fare]] [[What is this module made of-Q]] [[Where were these products made-Q]] [[How were those modules manufactured-Q]] [[How are they taken-Q]] [[What are they used for-Q]] [[Will there be an opportunity to do some getting advice-Q]] [[I was just wondering how many people there are-Q]] [[May I ask you for your attention-Q]] [[What else we have to do now-Q]] [[Which will walk you through the answers]] [[Isn't is cool?]] [[What's that about-Q]] [[What is expected for GDP-Q]] [[What a company worth today]] [[How they change interest rates]] [[How are we gonna learn these concepts]]","title":"English"},{"location":"private/english/category/question_can/","text":" [[Can you just make sure you send it to him asap-Q]] [[Can you question wait until finish-Q]] [[Can we take a break]] [[Can we reach conclusion here-Q]]","title":"English"},{"location":"private/english/category/question_could/","text":" [[Could you take a look at this-Q]] [[Could you please send message on Whatsapp-Q]] [[Could you please rephrase your question-Q]]","title":"English"},{"location":"private/english/category/question_details/","text":" [[Why is this the case-Q]] [[Could you be more precise-Q]] [[Do you anticipate any deficulty-Q]] [[How many people are attending the meating]] [[I'd be interested to hear more about etc]] [[Can you say a bit more about-Q]] [[Is insurance Included-Q]] [[How should we deal with...-Q]] [[How much notice must I give if I want to leave early-Q]] [[Who do I contact if there is a question-Q]] [[Do you think that's going to do any good-Q]] [[What is one problem caused by compiler.]] [[What seems to the trouble-Q]] [[What's the difference in type of frameworks-Q]] [[How all the difference sectors work together in different roles work together and we'll have a case study later]]","title":"Question details"},{"location":"private/english/category/question_do/","text":" [[What would you do first-Q]] [[Which of the following would you do-Q]] [[Is your team doing well-Q]]","title":"English"},{"location":"private/english/category/question_if/","text":" [[If we can not trust the participants in the sys, how do we address the data-Q]]","title":"English"},{"location":"private/english/category/question_issue/","text":" [[Can we have focus on the matter please-Q]] [[What's causing all this-Q]]","title":"English"},{"location":"private/english/category/question_know/","text":" [[Do you feel comfortable telling me what you know-Q]] [[You know what-Q]]","title":"English"},{"location":"private/english/category/question_let/","text":" [[Let me try to answer your question like this]] [[Let's bring this to a close, shall we-Q]] [[Let's get down to business shall we-Q]] [[Let's move on shall we-Q]] [[Let's get started shall we-Q]]","title":"English"},{"location":"private/english/category/question_much/","text":" [[How much are we talking about-Q]] [[The first point is about how much you spend for your Blockchain positions-Q Is there any range for specifying it-Q]] [[Was there much bug-Q]]","title":"English"},{"location":"private/english/category/question_think/","text":" [[Would you mind give me more time think about it-Q]] [[What do you think of it-Q]]","title":"English"},{"location":"private/english/category/question_time/","text":" [[What about a meeting sometime later last week-Q]] [[Why don't we take a short break-Q]] [[When is due-Q]] [[How long will it take-Q ]] [[When was this app released-Q]] [[Have you got a minute-Q]] [[How long is the career contact-Q]] [[Do you mind waiting-Q]] [[Shall we say 10 o'clock-Q]] [[Don't you have anything a bit earlier-Q]] [[What time in the afternoon would be most convenient for you-Q]] [[What Anytime in the afternoon would suit you best for you-Q]] [[What Anytime in the afternoon is good for you-Q]] [[What time in the afternoon would be fine for you-Q]]","title":"English"},{"location":"private/english/category/question_try/","text":" [[Why don't you give that a try first-Q]] [[Why don't you try restarting-Q]]","title":"English"},{"location":"private/english/category/question_wonder/","text":" [[Would it be possible to get someone come at the airport-Q]]","title":"English"},{"location":"private/english/category/question_would/","text":" [[Would you like to put this on your wallet-Q]]","title":"English"},{"location":"private/english/category/rather/","text":" [[There should be learning rather than coding]] [[Compared to etc]] [[This is opposite of noun]] [[The 'move' closure is often used alongside 'thread:: spawn']] [[I haven't seen a framework as good as substrate]] [[We can compare every ... to each other]]","title":"English"},{"location":"private/english/category/recommend/","text":" [[We're gonna be recommending hopefully to website]] [[Please, do your own research always and don't take the media's world for it]] [[Best investors on the planet always do their own research]] [[Best way to learn finance is to just play around and change params]] [[I'll recommend signing up for this video]]","title":"English"},{"location":"private/english/category/relevent/","text":" [[I'm not sure that's relevant]] [[I am not sure this module would go with it]] [[All major economics are connected to one another]]","title":"English"},{"location":"private/english/category/right/","text":" [[[You may be right, but etc]] [[you're right]]","title":"English"},{"location":"private/english/category/situation/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[It's the only chance I get to find out what's been going on in the Tech world and catch up with the current affairs]]","title":"Situation"},{"location":"private/english/category/take/","text":" [[The bills take seven working days to go through, is that all right-Q]] [[You are through to the my experiences]]","title":"English"},{"location":"private/english/category/talk/","text":" [[You talked about etc]]","title":"English"},{"location":"private/english/category/thanks/","text":" [[I proud of you for that]]","title":"English"},{"location":"private/english/category/think/","text":" [[Do you think it's etc-Q]] [[I think I will pass]] [[I noticed that etc]] [[It seems to me that]] [[I have no Idea]] [[So keep in mind that etc]] [[It's sth to keep in mind in the long term]] [[I'm afraid that not how I see it]] [[I need some time to think this over]] [[I think btc is gonna be the defacto currency for many countries. It's more stable way to get paid. It won't be as volatile as other currencies in the long run]] [[It's simply not acceptable to etc]] [[That's not good at all]] [[I dunno]] [[point]] [[right]] [[opinion]]","title":"English"},{"location":"private/english/category/time/","text":" [[You've notice .... Is falling as a result of the time lost]] [[To me, it's just total waste of time]] [[I will just be a minute]] [[It took me ages to learn to develop substrate]] [[All the services are out at the moment]] [[I need some time to think this over]] [[Anytime/Sometime after three would be fine]] [[It's time for you to rotate in to the etc]] [[expire]] [[question_time]]","title":"English"},{"location":"private/english/category/try/","text":" [[I am just tried of the same old grind]] [[I try to study English between the other activities of the day]] [[Ok.I'll give that a try]] [[The more you try, the easier it will get]] [[Do it and then as soon as you finish try another solution one after the other]] [[Try to understand why economic statistics are going up or down]] [[question_try]]","title":"English"},{"location":"private/english/category/understand/","text":" [[Does that make sense-Q]] [[You'll notice that when interest rates are unusually high you might say , Arman..How because etc]]","title":"English"},{"location":"private/english/category/wait/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[Just a second please I almost done]] [[Sorry to interrupt ,but etc]] [[Could I interrupt for a moment-Q]] [[Not just yet]]","title":"Wait"},{"location":"private/english/category/way/","text":" [[There is many diff ways to do]]","title":"English"},{"location":"private/english/category/whichis/","text":" [[Which is what we will focuse on actually for the etc]] [[Which is why we're covering in the course first is etc]]","title":"English"},{"location":"private/english/category/willbe/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[Due to my interest and my experience to Blockchain these things will still be worth something when I have finished paying off the debt because I used to trade cryptocurrency]] [[You'll be amazed how a few of etc]] [[This will be practical stuff you can use]]","title":"Willbe"},{"location":"private/english/category/wonder/","text":" [[I wonder what challenges next month will bring for the team]] [[I just wonder to let you know]] [[At this point you're probably wondering, what is ...-Q]]","title":"English"},{"location":"private/english/category/work/","text":"search: exclude: true type: English keywords: English feature: English title: \"English\" author: \"ArmanRiazi\"  [[I'm just fooling around online]] [[I've been working at the computer all day]] [[I work on substrate in the last few months]] [[It's fascinating how it's works]] [[They work for you as you elected them]]","title":"Work"},{"location":"private/english/category/details/%20Do%20you%20mind%20waiting-Q/","text":"Waiting [[mind]] [[interupt]] \u00b6","title":" Do you mind waiting Q"},{"location":"private/english/category/details/%20Do%20you%20mind%20waiting-Q/#waiting-mind-interupt","text":"","title":"Waiting [[mind]] [[interupt]]"},{"location":"private/english/category/details/%20Have%20you%20got%20a%20minute-Q/","text":"[[time]]","title":" Have you got a minute Q"},{"location":"private/english/category/details/%20How%20long%20is%20the%20career%20contact-Q/","text":"[[long]]","title":" How long is the career contact Q"},{"location":"private/english/category/details/%20How%20long%20will%20it%20take-Q%20/","text":"[[take]] [[long]]","title":" How long will it take Q "},{"location":"private/english/category/details/%20Shall%20we%20say%2010%20o%27clock-Q/","text":"","title":" Shall we say 10 o'clock Q"},{"location":"private/english/category/details/A%20...%20is%20actually%20defined%20by%20at%20least%20two%20params/","text":"[[define]]","title":"A ... is actually defined by at least two params"},{"location":"private/english/category/details/Actually%2C%20I%20don%27t%20think%20either%20of%20us%20did.%20We%20only%20got%20it%20because%20we%20couldn%27t%20agree%20on%20a%20selected%20type%20of%20smart%20contract/","text":"either [[opinion]] [[think]] \u00b6","title":"Actually, I don't think either of us did. We only got it because we couldn't agree on a selected type of smart contract"},{"location":"private/english/category/details/Actually%2C%20I%20don%27t%20think%20either%20of%20us%20did.%20We%20only%20got%20it%20because%20we%20couldn%27t%20agree%20on%20a%20selected%20type%20of%20smart%20contract/#either-opinion-think","text":"","title":"either [[opinion]] [[think]]"},{"location":"private/english/category/details/After%20a%20while%20I%20realized%20it%20wasn%27t%20working/","text":"Working [[while]] \u00b6","title":"After a while I realized it wasn't working"},{"location":"private/english/category/details/After%20a%20while%20I%20realized%20it%20wasn%27t%20working/#working-while","text":"","title":"Working [[while]]"},{"location":"private/english/category/details/After%20this%20section%20we%27re%20going%20to%20jump%20right%20into%20investment%20banking%20as%20such/","text":"Jump [[as]] [[after]] [[right]] [[going]] \u00b6","title":"After this section we're going to jump right into investment banking as such"},{"location":"private/english/category/details/After%20this%20section%20we%27re%20going%20to%20jump%20right%20into%20investment%20banking%20as%20such/#jump-as-after-right-going","text":"","title":"Jump [[as]] [[after]] [[right]] [[going]]"},{"location":"private/english/category/details/All%20major%20economics%20are%20connected%20to%20one%20another/","text":"Connect \u00b6","title":"All major economics are connected to one another"},{"location":"private/english/category/details/All%20major%20economics%20are%20connected%20to%20one%20another/#connect","text":"","title":"Connect"},{"location":"private/english/category/details/All%20the%20services%20are%20out%20at%20the%20moment/","text":"Moment #OutOf \u00b6","title":"All the services are out at the moment"},{"location":"private/english/category/details/All%20the%20services%20are%20out%20at%20the%20moment/#moment-outof","text":"","title":"Moment #OutOf"},{"location":"private/english/category/details/Always%20look%20at%20the%20source%20and%20then%20the%20source%20of%20the%20source%20If%20you%20want%20to%20drill%20down/","text":"DrillDown \u00b6","title":"Always look at the source and then the source of the source If you want to drill down"},{"location":"private/english/category/details/Always%20look%20at%20the%20source%20and%20then%20the%20source%20of%20the%20source%20If%20you%20want%20to%20drill%20down/#drilldown","text":"","title":"DrillDown"},{"location":"private/english/category/details/Am%20I%20allowed%20to%20use%20my%20mobile%20phone-Q/","text":"[[allow]]","title":"Am I allowed to use my mobile phone Q"},{"location":"private/english/category/details/As%20mention%20earlier%20in%20the%20course/","text":"Earlier [[as]] \u00b6","title":"As mention earlier in the course"},{"location":"private/english/category/details/As%20mention%20earlier%20in%20the%20course/#earlier-as","text":"","title":"Earlier [[as]]"},{"location":"private/english/category/details/As%20previously%20discussed/","text":"Previouse [[as]] \u00b6","title":"As previously discussed"},{"location":"private/english/category/details/As%20previously%20discussed/#previouse-as","text":"","title":"Previouse [[as]]"},{"location":"private/english/category/details/As%20you%20know%20from%20your%20own%20experience/","text":"[[know]] [[experiance]]","title":"As you know from your own experience"},{"location":"private/english/category/details/At%20this%20point%20you%27re%20probably%20wondering%2C%20what%20is%20...-Q/","text":"[[point]]","title":"At this point you're probably wondering, what is ... Q"},{"location":"private/english/category/details/Before%20we%20go%20on%20I%20want%20to%20put%20some%20finance%20concepts%20on%20your%20radar%20screen%20that%20we%27re%20going%20to%20go%20into%20much%20more%20details/","text":"Radar #Screen [[Before]] [[concept]] [[going]] \u00b6","title":"Before we go on I want to put some finance concepts on your radar screen that we're going to go into much more details"},{"location":"private/english/category/details/Before%20we%20go%20on%20I%20want%20to%20put%20some%20finance%20concepts%20on%20your%20radar%20screen%20that%20we%27re%20going%20to%20go%20into%20much%20more%20details/#radar-screen-before-concept-going","text":"","title":"Radar #Screen [[Before]] [[concept]] [[going]]"},{"location":"private/english/category/details/Believe%20it%20or%20not%20I%27ve%20always%20influence%20by%20dr.gavinwood%20.%20Her%20works%20are%20so%20creative/","text":"Believe \u00b6","title":"Believe it or not I've always influence by dr.gavinwood . Her works are so creative"},{"location":"private/english/category/details/Believe%20it%20or%20not%20I%27ve%20always%20influence%20by%20dr.gavinwood%20.%20Her%20works%20are%20so%20creative/#believe","text":"","title":"Believe"},{"location":"private/english/category/details/Best%20investors%20on%20the%20planet%20always%20do%20their%20own%20research/","text":"Research \u00b6","title":"Best investors on the planet always do their own research"},{"location":"private/english/category/details/Best%20investors%20on%20the%20planet%20always%20do%20their%20own%20research/#research","text":"","title":"Research"},{"location":"private/english/category/details/Best%20way%20to%20learn%20finance%20is%20to%20just%20play%20around%20and%20change%20params/","text":"Way \u00b6","title":"Best way to learn finance is to just play around and change params"},{"location":"private/english/category/details/Best%20way%20to%20learn%20finance%20is%20to%20just%20play%20around%20and%20change%20params/#way","text":"","title":"Way"},{"location":"private/english/category/details/But%20complications%20arise%20when%20it%20etc/","text":"[[complication]]","title":"But complications arise when it etc"},{"location":"private/english/category/details/But%20that%20seems%20to%20be%20ok/","text":"[[seem]]","title":"But that seems to be ok"},{"location":"private/english/category/details/Can%20I%20find%20a%20something%20in%20the%20meantime-Q/","text":"Meantime [[find]] \u00b6","title":"Can I find a something in the meantime Q"},{"location":"private/english/category/details/Can%20I%20find%20a%20something%20in%20the%20meantime-Q/#meantime-find","text":"","title":"Meantime [[find]]"},{"location":"private/english/category/details/Can%20we%20reach%20conclusion%20here-Q/","text":"[[conclusion]]","title":"Can we reach conclusion here Q"},{"location":"private/english/category/details/Can%20we%20take%20a%20break/","text":"[[break]] [[take]]","title":"Can we take a break"},{"location":"private/english/category/details/Can%20you%20just%20make%20sure%20you%20send%20it%20to%20him%20asap-Q/","text":"[[make sure]]","title":"Can you just make sure you send it to him asap Q"},{"location":"private/english/category/details/Can%20you%20question%20wait%20until%20finish-Q/","text":"Until [[interupt]] [[wait]] \u00b6","title":"Can you question wait until finish Q"},{"location":"private/english/category/details/Can%20you%20question%20wait%20until%20finish-Q/#until-interupt-wait","text":"","title":"Until [[interupt]] [[wait]]"},{"location":"private/english/category/details/Can%20you%20say%20a%20bit%20more%20about-Q/","text":"[[about]]","title":"Can you say a bit more about Q"},{"location":"private/english/category/details/Could%20I%20interrupt%20for%20a%20moment-Q/","text":"[[interupt]] #Moment","title":"Could I interrupt for a moment Q"},{"location":"private/english/category/details/Could%20you%20be%20more%20precise-Q/","text":"Precise \u00b6","title":"Could you be more precise Q"},{"location":"private/english/category/details/Could%20you%20be%20more%20precise-Q/#precise","text":"","title":"Precise"},{"location":"private/english/category/details/Could%20you%20please%20send%20message%20on%20Whatsapp-Q/","text":"[[send]]","title":"Could you please send message on Whatsapp Q"},{"location":"private/english/category/details/Could%20you%20take%20a%20look%20at%20this-Q/","text":"[[take]] [ook]]","title":"Could you take a look at this Q"},{"location":"private/english/category/details/Do%20you%20anticipate%20any%20deficulty-Q/","text":"Anticipate \u00b6","title":"Do you anticipate any deficulty Q"},{"location":"private/english/category/details/Do%20you%20anticipate%20any%20deficulty-Q/#anticipate","text":"","title":"Anticipate"},{"location":"private/english/category/details/Do%20you%20feel%20comfortable%20telling%20me%20what%20you%20know-Q/","text":"[[tell]] [[comfortable]]","title":"Do you feel comfortable telling me what you know Q"},{"location":"private/english/category/details/Do%20you%20think%20that%27s%20going%20to%20do%20any%20good-Q/","text":"[[think]] [[do]] [[going]]","title":"Do you think that's going to do any good Q"},{"location":"private/english/category/details/Does%20that%20make%20sense-Q/","text":"","title":"Does that make sense Q"},{"location":"private/english/category/details/Don%27t%20you%20have%20anything%20a%20bit%20earlier-Q/","text":"Earlier \u00b6","title":"Don't you have anything a bit earlier Q"},{"location":"private/english/category/details/Don%27t%20you%20have%20anything%20a%20bit%20earlier-Q/#earlier","text":"","title":"Earlier"},{"location":"private/english/category/details/Due%20to%20my%20interest%20and%20my%20experience%20to%20Blockchain%20these%20things%20will%20still%20be%20worth%20something%20when%20I%20have%20finished%20paying%20off%20the%20debt%20because%20I%20used%20to%20trade%20cryptocurrency/","text":"Worth #Debt #Still [[dueto]] [[experiance]] \u00b6","title":"Due to my interest and my experience to Blockchain these things will still be worth something when I have finished paying off the debt because I used to trade cryptocurrency"},{"location":"private/english/category/details/Due%20to%20my%20interest%20and%20my%20experience%20to%20Blockchain%20these%20things%20will%20still%20be%20worth%20something%20when%20I%20have%20finished%20paying%20off%20the%20debt%20because%20I%20used%20to%20trade%20cryptocurrency/#worth-debt-still-dueto-experiance","text":"","title":"Worth #Debt #Still [[dueto]]  [[experiance]]"},{"location":"private/english/category/details/During%20our%20session%20before%20the%20your%20eyes%20opened%20would%20often%20start%20the%20session%20with%20relaxing/","text":"session \u00b6","title":"During our session before the your eyes opened would often start the session with relaxing"},{"location":"private/english/category/details/During%20our%20session%20before%20the%20your%20eyes%20opened%20would%20often%20start%20the%20session%20with%20relaxing/#session","text":"","title":"session"},{"location":"private/english/category/details/Etc%20for%20the%20same%20reason%20that%20peter%20has%20just%20given/","text":"[[reason]]","title":"Etc for the same reason that peter has just given"},{"location":"private/english/category/details/Further%20more/","text":"","title":"Further more"},{"location":"private/english/category/details/Have%20you%20got%20that-Q/","text":"","title":"Have you got that Q"},{"location":"private/english/category/details/High%20prices%20can%20occur%20for%20many%20reasons/","text":"Occur #Resean \u00b6","title":"High prices can occur for many reasons"},{"location":"private/english/category/details/High%20prices%20can%20occur%20for%20many%20reasons/#occur-resean","text":"","title":"Occur #Resean"},{"location":"private/english/category/details/How%20are%20they%20taken-Q/","text":"Taken \u00b6","title":"How are they taken Q"},{"location":"private/english/category/details/How%20are%20they%20taken-Q/#taken","text":"","title":"Taken"},{"location":"private/english/category/details/How%20many%20people%20are%20attending%20the%20meating/","text":"[[attending]] [[meating]]","title":"How many people are attending the meating"},{"location":"private/english/category/details/How%20much%20are%20we%20talking%20about-Q/","text":"[[talk]]","title":"How much are we talking about Q"},{"location":"private/english/category/details/How%20much%20notice%20must%20I%20give%20if%20I%20want%20to%20leave%20early-Q/","text":"Notice #Early [[leave]] \u00b6","title":"How much notice must I give if I want to leave early Q"},{"location":"private/english/category/details/How%20much%20notice%20must%20I%20give%20if%20I%20want%20to%20leave%20early-Q/#notice-early-leave","text":"","title":"Notice #Early [[leave]]"},{"location":"private/english/category/details/How%20should%20we%20deal%20with...-Q/","text":"[[deal]]","title":"How should we deal with... Q"},{"location":"private/english/category/details/How%20they%20change%20interest%20rates/","text":"Change \u00b6","title":"How they change interest rates"},{"location":"private/english/category/details/How%20they%20change%20interest%20rates/#change","text":"","title":"Change"},{"location":"private/english/category/details/How%20were%20those%20modules%20manufactured-Q/","text":"Manufactured \u00b6","title":"How were those modules manufactured Q"},{"location":"private/english/category/details/How%20were%20those%20modules%20manufactured-Q/#manufactured","text":"","title":"Manufactured"},{"location":"private/english/category/details/I%20agree%20whole%20heartly/","text":"Heartly \u00b6","title":"I agree whole heartly"},{"location":"private/english/category/details/I%20agree%20whole%20heartly/#heartly","text":"","title":"Heartly"},{"location":"private/english/category/details/I%20am%20just%20tried%20of%20the%20same%20old%20grind/","text":"Grind \u00b6","title":"I am just tried of the same old grind"},{"location":"private/english/category/details/I%20am%20just%20tried%20of%20the%20same%20old%20grind/#grind","text":"","title":"Grind"},{"location":"private/english/category/details/I%20am%20not%20sure%20this%20module%20would%20go%20with%20it/","text":"Sure \u00b6","title":"I am not sure this module would go with it"},{"location":"private/english/category/details/I%20am%20not%20sure%20this%20module%20would%20go%20with%20it/#sure","text":"","title":"Sure"},{"location":"private/english/category/details/I%20can%27t%20face%20myself/","text":"Face \u00b6","title":"I can't face myself"},{"location":"private/english/category/details/I%20can%27t%20face%20myself/#face","text":"","title":"Face"},{"location":"private/english/category/details/I%20don%27t%20know%20if%20it%20works%20but%20we%20try%20it/","text":"[[know]] [[try]] [[if]]","title":"I don't know if it works but we try it"},{"location":"private/english/category/details/I%20don%27t%20think%20of%20myself%20as%20a%20hero%20person/","text":"[[think]]","title":"I don't think of myself as a hero person"},{"location":"private/english/category/details/I%20forgot%20to%20sth%20so%20I%20would%20dclick%2C%20and%20I%20would%20go%20here/","text":"Forget [[would]] \u00b6","title":"I forgot to sth so I would dclick, and I would go here"},{"location":"private/english/category/details/I%20forgot%20to%20sth%20so%20I%20would%20dclick%2C%20and%20I%20would%20go%20here/#forget-would","text":"","title":"Forget [[would]]"},{"location":"private/english/category/details/I%20haven%27t%20seen%20a%20framework%20as%20good%20as%20substrate/","text":"[[as]]","title":"I haven't seen a framework as good as substrate"},{"location":"private/english/category/details/I%20hope%20you%20enjoy.%20If%20you%20have%20any%20question%20please%20let%20me%20know/","text":"Enjoy [[let]] [[know]] \u00b6","title":"I hope you enjoy. If you have any question please let me know"},{"location":"private/english/category/details/I%20hope%20you%20enjoy.%20If%20you%20have%20any%20question%20please%20let%20me%20know/#enjoy-let-know","text":"","title":"Enjoy [[let]] [[know]]"},{"location":"private/english/category/details/I%20just%20need%20to%20sort%20it%20out%20with%20you/","text":"[[need]]","title":"I just need to sort it out with you"},{"location":"private/english/category/details/I%20just%20wonder%20to%20let%20you%20know/","text":"[[let]]","title":"I just wonder to let you know"},{"location":"private/english/category/details/I%20know%20what%20you%20mean%20%2C%20but%20etc/","text":"[[know]]","title":"I know what you mean , but etc"},{"location":"private/english/category/details/I%20maybe%20wrong%2C%20but%20etc/","text":"Wrong \u00b6","title":"I maybe wrong, but etc"},{"location":"private/english/category/details/I%20maybe%20wrong%2C%20but%20etc/#wrong","text":"","title":"Wrong"},{"location":"private/english/category/details/I%20missed%20your%20call/","text":"Missed \u00b6","title":"I missed your call"},{"location":"private/english/category/details/I%20missed%20your%20call/#missed","text":"","title":"Missed"},{"location":"private/english/category/details/I%20need%20some%20time%20to%20think%20this%20over/","text":"Over [[think]] [[need]] \u00b6","title":"I need some time to think this over"},{"location":"private/english/category/details/I%20need%20some%20time%20to%20think%20this%20over/#over-think-need","text":"","title":"Over [[think]] [[need]]"},{"location":"private/english/category/details/I%20never%20gained%20any%20information%20except%20self%20study/","text":"Gaine \u00b6","title":"I never gained any information except self study"},{"location":"private/english/category/details/I%20never%20gained%20any%20information%20except%20self%20study/#gaine","text":"","title":"Gaine"},{"location":"private/english/category/details/I%20proud%20of%20you%20for%20that/","text":"","title":"I proud of you for that"},{"location":"private/english/category/details/I%20tend%20to%20work%20at%20office%20it%20gives%20me%20etc/","text":"[[tend]]","title":"I tend to work at office it gives me etc"},{"location":"private/english/category/details/I%20think%20btc%20is%20gonna%20be%20the%20defacto%20currency%20for%20many%20countries.%20It%27s%20more%20stable%20way%20to%20get%20paid.%20It%20won%27t%20be%20as%20volatile%20as%20other%20currencies%20in%20the%20long%20run/","text":"BTC [[gonna]] [[get]] [[paid]] [[as]] \u00b6","title":"I think btc is gonna be the defacto currency for many countries. It's more stable way to get paid. It won't be as volatile as other currencies in the long run"},{"location":"private/english/category/details/I%20think%20btc%20is%20gonna%20be%20the%20defacto%20currency%20for%20many%20countries.%20It%27s%20more%20stable%20way%20to%20get%20paid.%20It%20won%27t%20be%20as%20volatile%20as%20other%20currencies%20in%20the%20long%20run/#btc-gonna-get-paid-as","text":"","title":"BTC [[gonna]] [[get]] [[paid]] [[as]]"},{"location":"private/english/category/details/I%20think%20it%20must%20be%20a%20fault%20with%20your%20OS/","text":"[[mustbe]] [[think]]","title":"I think it must be a fault with your OS"},{"location":"private/english/category/details/I%20think%20we%20are%20drifting%20off%20the%20point%20a%20bit/","text":"Drifting [[think]] [[point]] \u00b6","title":"I think we are drifting off the point a bit"},{"location":"private/english/category/details/I%20think%20we%20are%20drifting%20off%20the%20point%20a%20bit/#drifting-think-point","text":"","title":"Drifting [[think]] [[point]]"},{"location":"private/english/category/details/I%20think%20you%20should%20consider%20decision/","text":"[[consider]]","title":"I think you should consider decision"},{"location":"private/english/category/details/I%20try%20to%20study%20English%20between%20the%20other%20activities%20of%20the%20day/","text":"Between [[activity]] \u00b6","title":"I try to study English between the other activities of the day"},{"location":"private/english/category/details/I%20try%20to%20study%20English%20between%20the%20other%20activities%20of%20the%20day/#between-activity","text":"","title":"Between [[activity]]"},{"location":"private/english/category/details/I%20was%20going%20to%20call%20you/","text":"[[goingto]]","title":"I was going to call you"},{"location":"private/english/category/details/I%20was%20just%20wondering%20how%20many%20people%20there%20are-Q/","text":"[[wonder]]","title":"I was just wondering how many people there are Q"},{"location":"private/english/category/details/I%20wonder%20what%20challenges%20next%20month%20will%20bring%20for%20the%20team/","text":"Challenge \u00b6","title":"I wonder what challenges next month will bring for the team"},{"location":"private/english/category/details/I%20wonder%20what%20challenges%20next%20month%20will%20bring%20for%20the%20team/#challenge","text":"","title":"Challenge"},{"location":"private/english/category/details/I%27d%20be%20interested%20to%20hear%20more%20about%20etc/","text":"Interested [[about]] [[]] \u00b6","title":"I'd be interested to hear more about etc"},{"location":"private/english/category/details/I%27d%20be%20interested%20to%20hear%20more%20about%20etc/#interested-about","text":"","title":"Interested [[about]] [[]]"},{"location":"private/english/category/details/I%27d%20like%20to%20ask%20when%20you%20should%20talk%20etc/","text":"[[talk]] [[ask]]","title":"I'd like to ask when you should talk etc"},{"location":"private/english/category/details/I%27d%20rather%20to%20let%20me%20finish%20it%20that%20is%20all%20right/","text":"[[rather]] [[let]]","title":"I'd rather to let me finish it that is all right"},{"location":"private/english/category/details/I%27ll%20explain%20in%20the%20next%20lecture/","text":"[[explain]]","title":"I'll explain in the next lecture"},{"location":"private/english/category/details/I%27m%20afraid%20we%27ve%20run%20out%20of%20time/","text":"[[afraid]] [[time]]","title":"I'm afraid we've run out of time"},{"location":"private/english/category/details/I%27m%20going%20to%20be%20hired/","text":"","title":"I'm going to be hired"},{"location":"private/english/category/details/I%27m%20gonna%20cover%20any%20boring%20theory/","text":"Cover \u00b6","title":"I'm gonna cover any boring theory"},{"location":"private/english/category/details/I%27m%20gonna%20cover%20any%20boring%20theory/#cover","text":"","title":"Cover"},{"location":"private/english/category/details/I%27m%20interested%20in%20knowing%20what%20kind%20of%20etc/","text":"[[interested]] [[know]] [[kind of]]","title":"I'm interested in knowing what kind of etc"},{"location":"private/english/category/details/I%27m%20just%20fooling%20around%20online/","text":"Fooling #Around \u00b6","title":"I'm just fooling around online"},{"location":"private/english/category/details/I%27m%20just%20fooling%20around%20online/#fooling-around","text":"","title":"Fooling #Around"},{"location":"private/english/category/details/I%27m%20looking%20forward%20to%20this%20trip/","text":"Trip [[look]] \u00b6","title":"I'm looking forward to this trip"},{"location":"private/english/category/details/I%27m%20looking%20forward%20to%20this%20trip/#trip-look","text":"","title":"Trip [[look]]"},{"location":"private/english/category/details/I%27m%20not%20gonna%20cover%20any%20boring%20theory%20this%20will%20be%20practical%20staff%20you%20can%20use/","text":"Theory [[gonna]] [[cover]] \u00b6","title":"I'm not gonna cover any boring theory this will be practical staff you can use"},{"location":"private/english/category/details/I%27m%20not%20gonna%20cover%20any%20boring%20theory%20this%20will%20be%20practical%20staff%20you%20can%20use/#theory-gonna-cover","text":"","title":"Theory [[gonna]] [[cover]]"},{"location":"private/english/category/details/I%27m%20not%20sure%20that%27s%20relevant/","text":"Sure \u00b6","title":"I'm not sure that's relevant"},{"location":"private/english/category/details/I%27m%20not%20sure%20that%27s%20relevant/#sure","text":"","title":"Sure"},{"location":"private/english/category/details/I%27ve%20been%20meaning%20to%20speak%20to%20you%20all%20evening/","text":"[[speek]]","title":"I've been meaning to speak to you all evening"},{"location":"private/english/category/details/I%27ve%20got%20a%20bit%20of%20a%20problem%20in%20the%20project.%20the%20noun%20not%20working/","text":"Problem [[got]] \u00b6","title":"I've got a bit of a problem in the project. the noun not working"},{"location":"private/english/category/details/I%27ve%20got%20a%20bit%20of%20a%20problem%20in%20the%20project.%20the%20noun%20not%20working/#problem-got","text":"","title":"Problem [[got]]"},{"location":"private/english/category/details/I%27ve%20got%20problem%20with%20etc/","text":"Problem [[got]] \u00b6","title":"I've got problem with etc"},{"location":"private/english/category/details/I%27ve%20got%20problem%20with%20etc/#problem-got","text":"","title":"Problem [[got]]"},{"location":"private/english/category/details/I%27ve%20got%20some%20good%20news%20to%20deliver/","text":"","title":"I've got some good news to deliver"},{"location":"private/english/category/details/If%20I%20understand%20you%20correctly%2C%20you%20think%20our%20investment%20has%20been%20mistake/","text":"Correctly [[think]] \u00b6","title":"If I understand you correctly, you think our investment has been mistake"},{"location":"private/english/category/details/If%20I%20understand%20you%20correctly%2C%20you%20think%20our%20investment%20has%20been%20mistake/#correctly-think","text":"","title":"Correctly [[think]]"},{"location":"private/english/category/details/If%20you%20don%27t%20understand%20...%2C%20then%20it%20can%20be%20catastrophic%2Cright/","text":"Catastrophic [[understand]] \u00b6","title":"If you don't understand ..., then it can be catastrophic,right"},{"location":"private/english/category/details/If%20you%20don%27t%20understand%20...%2C%20then%20it%20can%20be%20catastrophic%2Cright/#catastrophic-understand","text":"","title":"Catastrophic [[understand]]"},{"location":"private/english/category/details/If%20you%20want%20I%20could%20change%20it/","text":"[[want]]","title":"If you want I could change it"},{"location":"private/english/category/details/Is%20insurance%20Included-Q/","text":"Included \u00b6","title":"Is insurance Included Q"},{"location":"private/english/category/details/Is%20insurance%20Included-Q/#included","text":"","title":"Included"},{"location":"private/english/category/details/Is%20there%20anyway%20to%20get%20a%20cheaper%20fare/","text":"Anyway #Cheaper #Fare \u00b6","title":"Is there anyway to get a cheaper fare"},{"location":"private/english/category/details/Is%20there%20anyway%20to%20get%20a%20cheaper%20fare/#anyway-cheaper-fare","text":"","title":"Anyway #Cheaper #Fare"},{"location":"private/english/category/details/Is%20your%20team%20doing%20well-Q/","text":"Doing \u00b6","title":"Is your team doing well Q"},{"location":"private/english/category/details/Is%20your%20team%20doing%20well-Q/#doing","text":"","title":"Doing"},{"location":"private/english/category/details/It%20can%20be%20realistic/","text":"","title":"It can be realistic"},{"location":"private/english/category/details/It%20can%20get%20you%20into%20trouble%20if%20you%20don%27t%20use%20unit%20test/","text":"Trouble [[if]] \u00b6","title":"It can get you into trouble if you don't use unit test"},{"location":"private/english/category/details/It%20can%20get%20you%20into%20trouble%20if%20you%20don%27t%20use%20unit%20test/#trouble-if","text":"","title":"Trouble [[if]]"},{"location":"private/english/category/details/It%20can%20help%20me%20predict%20what%20might%20happen%20from%20a%20perspective%20in%20the%20future/","text":"Perspective #Predict \u00b6","title":"It can help me predict what might happen from a perspective in the future"},{"location":"private/english/category/details/It%20can%20help%20me%20predict%20what%20might%20happen%20from%20a%20perspective%20in%20the%20future/#perspective-predict","text":"","title":"Perspective #Predict"},{"location":"private/english/category/details/It%20couldn%27t%20hurt%20to%20ask%20someone/","text":"Hurt [[ask]] \u00b6","title":"It couldn't hurt to ask someone"},{"location":"private/english/category/details/It%20couldn%27t%20hurt%20to%20ask%20someone/#hurt-ask","text":"","title":"Hurt [[ask]]"},{"location":"private/english/category/details/It%20has%20two%20years%20left%20on%20my%20passport/","text":"[[left]]","title":"It has two years left on my passport"},{"location":"private/english/category/details/It%20is%20cause%20by%20etc/","text":"[[cause]]","title":"It is cause by etc"},{"location":"private/english/category/details/It%20takes%20a%20little%20while%20to%20work/","text":"[[while]] [[work]]","title":"It takes a little while to work"},{"location":"private/english/category/details/It%20would%20be%20good%20if%20I%20could%20get%20it%20fix/","text":"Fix [[Wouldbe]] \u00b6","title":"It would be good if I could get it fix"},{"location":"private/english/category/details/It%20would%20be%20good%20if%20I%20could%20get%20it%20fix/#fix-wouldbe","text":"","title":"Fix [[Wouldbe]]"},{"location":"private/english/category/details/It%27ll%20be%20a%20competition%20advantage%20for%20you/","text":"Competition [[willbe]] \u00b6","title":"It'll be a competition advantage for you"},{"location":"private/english/category/details/It%27ll%20be%20a%20competition%20advantage%20for%20you/#competition-willbe","text":"","title":"Competition [[willbe]]"},{"location":"private/english/category/details/It%27s%20another%20way%20of%20looking%20at%20things%20and%20it%27s%20a%20lot%20more%20positive/","text":"[[way]] [[look]]","title":"It's another way of looking at things and it's a lot more positive"},{"location":"private/english/category/details/It%27s%20been%20working%20fine/","text":"[[work]]","title":"It's been working fine"},{"location":"private/english/category/details/It%27s%20fascinating%20how%20it%27s%20works/","text":"Fascinate \u00b6","title":"It's fascinating how it's works"},{"location":"private/english/category/details/It%27s%20fascinating%20how%20it%27s%20works/#fascinate","text":"","title":"Fascinate"},{"location":"private/english/category/details/It%27s%20primarily%20due%20to%20high%20prices/","text":"Primarily \u00b6","title":"It's primarily due to high prices"},{"location":"private/english/category/details/It%27s%20primarily%20due%20to%20high%20prices/#primarily","text":"","title":"Primarily"},{"location":"private/english/category/details/It%27s%20saying%2C%20it%20means%20to%20make%20etc/","text":"[[say]] [[make]]","title":"It's saying, it means to make etc"},{"location":"private/english/category/details/It%27s%20the%20only%20chance%20I%20get%20to%20find%20out%20what%27s%20been%20going%20on%20in%20the%20Tech%20world%20and%20catch%20up%20with%20the%20current%20affairs/","text":"","title":"It's the only chance I get to find out what's been going on in the Tech world and catch up with the current affairs"},{"location":"private/english/category/details/It%27s%20time%20for%20you%20to%20rotate%20in%20to%20the%20etc/","text":"Rotate \u00b6","title":"It's time for you to rotate in to the etc"},{"location":"private/english/category/details/It%27s%20time%20for%20you%20to%20rotate%20in%20to%20the%20etc/#rotate","text":"","title":"Rotate"},{"location":"private/english/category/details/Just%20a%20second%20please%20I%20almost%20done/","text":"Second [[done]] \u00b6","title":"Just a second please I almost done"},{"location":"private/english/category/details/Just%20a%20second%20please%20I%20almost%20done/#second-done","text":"","title":"Second [[done]]"},{"location":"private/english/category/details/Let%20me%20continue/","text":"[[continue]]","title":"Let me continue"},{"location":"private/english/category/details/Let%20me%20explain%20one%20more%20time/","text":"[[explain]] [[time]]","title":"Let me explain one more time"},{"location":"private/english/category/details/Let%20me%20get%20a%20closer%20look%20at%20this%20first/","text":"Closer [[look]] \u00b6","title":"Let me get a closer look at this first"},{"location":"private/english/category/details/Let%20me%20get%20a%20closer%20look%20at%20this%20first/#closer-look","text":"","title":"Closer [[look]]"},{"location":"private/english/category/details/Let%20me%20have%20everone%20for%20attention%20please/","text":"Everyone [[attention]] \u00b6","title":"Let me have everone for attention please"},{"location":"private/english/category/details/Let%20me%20have%20everone%20for%20attention%20please/#everyone-attention","text":"","title":"Everyone [[attention]]"},{"location":"private/english/category/details/Let%20me%20try%20to%20%20answer%20your%20question%20like%20this/","text":"Answer \u00b6","title":"Let me try to  answer your question like this"},{"location":"private/english/category/details/Let%20me%20try%20to%20%20answer%20your%20question%20like%20this/#answer","text":"","title":"Answer"},{"location":"private/english/category/details/Let%27s%20called%20a%20Day/","text":"[[call]]","title":"Let's called a Day"},{"location":"private/english/category/details/Let%27s%20get%20to%20the%20point/","text":"[[get]]","title":"Let's get to the point"},{"location":"private/english/category/details/Let%27s%20head%20over%20to%20-.org%20and%20take%20a%20look%20etc/","text":"Head \u00b6","title":"Let's head over to  .org and take a look etc"},{"location":"private/english/category/details/Let%27s%20head%20over%20to%20-.org%20and%20take%20a%20look%20etc/#head","text":"","title":"Head"},{"location":"private/english/category/details/Let%27s%20take%20a%20few%20%20minutes%20to%20discuss%20the%20difference%20between%20these%20two%20type%20of%20setups/","text":"[[rather]]","title":"Let's take a few  minutes to discuss the difference between these two type of setups"},{"location":"private/english/category/details/Let%27s%20take%20a%20look%20at%20the%20following%20exp/","text":"Following [[take]] \u00b6","title":"Let's take a look at the following exp"},{"location":"private/english/category/details/Let%27s%20take%20a%20look%20at%20the%20following%20exp/#following-take","text":"","title":"Following [[take]]"},{"location":"private/english/category/details/Let%27s%20work%20on%20with%20together/","text":"[[workon]]","title":"Let's work on with together"},{"location":"private/english/category/details/May%20I%20ask%20you%20for%20your%20attention/","text":"[[attention]] [[ask]]","title":"May I ask you for your attention"},{"location":"private/english/category/details/More%20over/","text":"","title":"More over"},{"location":"private/english/category/details/Most%20programmers%20see%20themselves%20as%20an%20intelligence/","text":"","title":"Most programmers see themselves as an intelligence"},{"location":"private/english/category/details/My%20passport%20has%20two%20years%20left%20on%20its%20expired%20date/","text":"Passport #Left \u00b6","title":"My passport has two years left on its expired date"},{"location":"private/english/category/details/My%20passport%20has%20two%20years%20left%20on%20its%20expired%20date/#passport-left","text":"","title":"Passport #Left"},{"location":"private/english/category/details/On%20the%20one%20hand%2C%20I%20would%20want%20to%20tell%20the%20truth.%20On%20the%20other%20hand%2C%20I%20wouldn%27t%20want%20to%20get%20in%20trouble/","text":"Trouble #Hand \u00b6","title":"On the one hand, I would want to tell the truth. On the other hand, I wouldn't want to get in trouble"},{"location":"private/english/category/details/On%20the%20one%20hand%2C%20I%20would%20want%20to%20tell%20the%20truth.%20On%20the%20other%20hand%2C%20I%20wouldn%27t%20want%20to%20get%20in%20trouble/#trouble-hand","text":"","title":"Trouble #Hand"},{"location":"private/english/category/details/One%20more%20question/","text":"","title":"One more question"},{"location":"private/english/category/details/One%20of%20the%20most%20powerfull%20tools%20that%20you%20can%20have/","text":"Tools \u00b6","title":"One of the most powerfull tools that you can have"},{"location":"private/english/category/details/One%20of%20the%20most%20powerfull%20tools%20that%20you%20can%20have/#tools","text":"","title":"Tools"},{"location":"private/english/category/details/Please%2C%20do%20your%20own%20research%20always%20and%20don%27t%20take%20the%20media%27s%20world%20for%20it/","text":"Research \u00b6","title":"Please, do your own research always and don't take the media's world for it"},{"location":"private/english/category/details/Please%2C%20do%20your%20own%20research%20always%20and%20don%27t%20take%20the%20media%27s%20world%20for%20it/#research","text":"","title":"Research"},{"location":"private/english/category/details/Price%20of%20commedites%20affect%20almost%20all%20companies%20in%20the%20world%20regardless%20of%20what%20industry%20they%27re%20in/","text":"[[affect]] [[regardless]]","title":"Price of commedites affect almost all companies in the world regardless of what industry they're in"},{"location":"private/english/category/details/Read%20the%20answer%20after%20you%27ve%20tried%20to%20complete%20the%20exercise/","text":"[[exercise]]","title":"Read the answer after you've tried to complete the exercise"},{"location":"private/english/category/details/Remember%20that%20revenue%20for%20a%20company%20is%20the%20same%20thing%20kind%20of%20as%20GFP%20for%20a%20country%20/","text":"[[kind]] [[same]] [[as]] [[remember]]","title":"Remember that revenue for a company is the same thing kind of as GFP for a country "},{"location":"private/english/category/details/She%20is%20lack%20of%20opinion/","text":"LackOf [[opinion]] \u00b6","title":"She is lack of opinion"},{"location":"private/english/category/details/She%20is%20lack%20of%20opinion/#lackof-opinion","text":"","title":"LackOf [[opinion]]"},{"location":"private/english/category/details/Snap%20in%20the%20face/","text":"Snap [[face]] \u00b6","title":"Snap in the face"},{"location":"private/english/category/details/Snap%20in%20the%20face/#snap-face","text":"","title":"Snap [[face]]"},{"location":"private/english/category/details/So%20I%20had%20a%20look%20at%20the%20...thinking%20It%20might%20be%20that/","text":"[[mightbe]] [[think]]","title":"So I had a look at the ...thinking It might be that"},{"location":"private/english/category/details/So%20take%20a%20look%20here/","text":"[[take]]","title":"So take a look here"},{"location":"private/english/category/details/Sometimes%20that%20takes%20care%20of%20it/","text":"[[fixes the problem]]","title":"Sometimes that takes care of it"},{"location":"private/english/category/details/Sometimes%20those%20..%20impacts%20on%20a%20...%20don%27t%20worry%20at%20all/","text":"","title":"Sometimes those .. impacts on a ... don't worry at all"},{"location":"private/english/category/details/Sorry%20to%20interrupt%20%2Cbut%20etc/","text":"interupt [[sorry]] \u00b6","title":"Sorry to interrupt ,but etc"},{"location":"private/english/category/details/Sorry%20to%20interrupt%20%2Cbut%20etc/#interupt-sorry","text":"","title":"interupt [[sorry]]"},{"location":"private/english/category/details/That%27s%20one%20of%20the%20reason%20why%20there%20was%20a%20bit%20of%20commedity/","text":"Reason \u00b6","title":"That's one of the reason why there was a bit of commedity"},{"location":"private/english/category/details/That%27s%20one%20of%20the%20reason%20why%20there%20was%20a%20bit%20of%20commedity/#reason","text":"","title":"Reason"},{"location":"private/english/category/details/The%20bills%20take%20seven%20working%20days%20to%20go%20through%2C%20is%20that%20all%20right-Q/","text":"","title":"The bills take seven working days to go through, is that all right Q"},{"location":"private/english/category/details/The%20first%20point%20is%20about%20how%20much%20you%20spend%20for%20your%20Blockchain%20positions-Q%20Is%20there%20any%20range%20for%20specifying%20it-Q/","text":"[[point]] [[about]]","title":"The first point is about how much you spend for your Blockchain positions Q Is there any range for specifying it Q"},{"location":"private/english/category/details/The%20market%20tries%20to%20anticipate%20what%20will%20happen/","text":"Anticipate [[try]] \u00b6","title":"The market tries to anticipate what will happen"},{"location":"private/english/category/details/The%20market%20tries%20to%20anticipate%20what%20will%20happen/#anticipate-try","text":"","title":"Anticipate [[try]]"},{"location":"private/english/category/details/The%20problem%20should%20go%20in%20a%20minute/","text":"","title":"The problem should go in a minute"},{"location":"private/english/category/details/The%20reason%20I%20am%20asking/","text":"Reason [[ask]] \u00b6","title":"The reason I am asking"},{"location":"private/english/category/details/The%20reason%20I%20am%20asking/#reason-ask","text":"","title":"Reason [[ask]]"},{"location":"private/english/category/details/The%20situation%20is%20getting%20out%20of%20control/","text":"[[situation]] [[out of control]]","title":"The situation is getting out of control"},{"location":"private/english/category/details/The%20smart%20contracts%20written%20in%20Solidity%20need%20to%20be%20compiled%20and%20deployed%20to%20the%20blockchain%20This%20can%20be%20achieved%20by%20using%20a%20development%20environment%20for%20Ethereum%20called%20Truffle/","text":"[[achive]]","title":"The smart contracts written in Solidity need to be compiled and deployed to the blockchain This can be achieved by using a development environment for Ethereum called Truffle"},{"location":"private/english/category/details/There%20should%20be%20learning%20rather%20than%20coding/","text":"[[shouldbe]]","title":"There should be learning rather than coding"},{"location":"private/english/category/details/They%20rely%20on%20what%20other%20people%20tell%20them%20and%20they%20influenced%20by%20other%20people%27s%20opinions/","text":"[[opinion]] [[rely]]","title":"They rely on what other people tell them and they influenced by other people's opinions"},{"location":"private/english/category/details/They%20work%20for%20you%20as%20you%20elected%20them/","text":"[[as]]","title":"They work for you as you elected them"},{"location":"private/english/category/details/This%20is%20crucial%20for/","text":"Crucial \u00b6","title":"This is crucial for"},{"location":"private/english/category/details/This%20is%20crucial%20for/#crucial","text":"","title":"Crucial"},{"location":"private/english/category/details/This%20page%20assume%20you%27re%20investing%20in%20banks/","text":"[[assume]]","title":"This page assume you're investing in banks"},{"location":"private/english/category/details/This%20will%20all%20make%20much%20more%20sense%20to%20you/","text":"Sense [[make]] \u00b6","title":"This will all make much more sense to you"},{"location":"private/english/category/details/This%20will%20all%20make%20much%20more%20sense%20to%20you/#sense-make","text":"","title":"Sense [[make]]"},{"location":"private/english/category/details/This%20will%20be%20practical%20stuff%20you%20can%20use/","text":"Practical \u00b6","title":"This will be practical stuff you can use"},{"location":"private/english/category/details/This%20will%20be%20practical%20stuff%20you%20can%20use/#practical","text":"","title":"Practical"},{"location":"private/english/category/details/To%20me%2C%20it%27s%20just%20total%20waste%20of%20time/","text":"Waste \u00b6","title":"To me, it's just total waste of time"},{"location":"private/english/category/details/To%20me%2C%20it%27s%20just%20total%20waste%20of%20time/#waste","text":"","title":"Waste"},{"location":"private/english/category/details/Try%20to%20understand%20why%20economic%20statistics%20are%20going%20up%20or%20down/","text":"[[understand]]","title":"Try to understand why economic statistics are going up or down"},{"location":"private/english/category/details/We%20are%20degrising/","text":"Degris \u00b6","title":"We are degrising"},{"location":"private/english/category/details/We%20are%20degrising/#degris","text":"","title":"Degris"},{"location":"private/english/category/details/We%20are%20on%20the%20wrong%20track/","text":"Wrong #Track \u00b6","title":"We are on the wrong track"},{"location":"private/english/category/details/We%20are%20on%20the%20wrong%20track/#wrong-track","text":"","title":"Wrong #Track"},{"location":"private/english/category/details/We%20get%20fooled%20by/","text":"Fool \u00b6","title":"We get fooled by"},{"location":"private/english/category/details/We%20get%20fooled%20by/#fool","text":"","title":"Fool"},{"location":"private/english/category/details/We%20need%20to%20move%20on/","text":"[[moveon]]","title":"We need to move on"},{"location":"private/english/category/details/We%20should%20do%20that%20before%20we%20continue/","text":"[[continue]]","title":"We should do that before we continue"},{"location":"private/english/category/details/We%20will%20do%20anything%20as%20long%20as%20it%20is%20legal/","text":"Legal #Anything \u00b6","title":"We will do anything as long as it is legal"},{"location":"private/english/category/details/We%20will%20do%20anything%20as%20long%20as%20it%20is%20legal/#legal-anything","text":"","title":"Legal #Anything"},{"location":"private/english/category/details/We%20work%20on%20are%20significantly%20influence%20by%20etc/","text":"Significantly \u00b6","title":"We work on are significantly influence by etc"},{"location":"private/english/category/details/We%20work%20on%20are%20significantly%20influence%20by%20etc/#significantly","text":"","title":"Significantly"},{"location":"private/english/category/details/We%27ll%20get%20into%20that%20in%20more%20details/","text":"Detail \u00b6","title":"We'll get into that in more details"},{"location":"private/english/category/details/We%27ll%20get%20into%20that%20in%20more%20details/#detail","text":"","title":"Detail"},{"location":"private/english/category/details/We%27ll%20get%20there%20soon%20later/","text":"[[get]] [[later]]","title":"We'll get there soon later"},{"location":"private/english/category/details/We%27ll%20have%20to%20cut%20this%20meeting%20short/","text":"[[cut]]","title":"We'll have to cut this meeting short"},{"location":"private/english/category/details/We%27ll%20talk%20about%20how%20to%20do%20that/","text":"[[talk]]","title":"We'll talk about how to do that"},{"location":"private/english/category/details/We%27re%20gonna%20be%20recommending%20hopefully%20to%20website/","text":"[[gonnabe]]","title":"We're gonna be recommending hopefully to website"},{"location":"private/english/category/details/What%20a%20company%20worth%20today/","text":"Worth \u00b6","title":"What a company worth today"},{"location":"private/english/category/details/What%20a%20company%20worth%20today/#worth","text":"","title":"Worth"},{"location":"private/english/category/details/What%20about%20a%20meeting%20sometime%20later%20last%20week-Q/","text":"Sometime [[about]] \u00b6","title":"What about a meeting sometime later last week Q"},{"location":"private/english/category/details/What%20about%20a%20meeting%20sometime%20later%20last%20week-Q/#sometime-about","text":"","title":"Sometime [[about]]"},{"location":"private/english/category/details/What%20am%20I%20doing-Q/","text":"[[do]]","title":"What am I doing Q"},{"location":"private/english/category/details/What%20are%20they%20used%20for-Q/","text":"Used \u00b6","title":"What are they used for Q"},{"location":"private/english/category/details/What%20are%20they%20used%20for-Q/#used","text":"","title":"Used"},{"location":"private/english/category/details/What%20is%20expected%20for%20GDP-Q/","text":"Expect \u00b6","title":"What is expected for GDP Q"},{"location":"private/english/category/details/What%20is%20expected%20for%20GDP-Q/#expect","text":"","title":"Expect"},{"location":"private/english/category/details/What%20is%20one%20problem%20caused%20by%20compiler/","text":"Problem [[cause]] [[issue]] \u00b6","title":"What is one problem caused by compiler"},{"location":"private/english/category/details/What%20is%20one%20problem%20caused%20by%20compiler/#problem-cause-issue","text":"","title":"Problem [[cause]] [[issue]]"},{"location":"private/english/category/details/What%20is%20this%20module%20made%20of-Q/","text":"[[made]]","title":"What is this module made of Q"},{"location":"private/english/category/details/What%20seems%20to%20the%20trouble-Q/","text":"Trouble [[issue]] \u00b6","title":"What seems to the trouble Q"},{"location":"private/english/category/details/What%20seems%20to%20the%20trouble-Q/#trouble-issue","text":"","title":"Trouble [[issue]]"},{"location":"private/english/category/details/What%20time%20in%20the%20afternoon%20would%20be%20most%20convenient%20for%20you-Q/","text":"[[convenient]]","title":"What time in the afternoon would be most convenient for you Q"},{"location":"private/english/category/details/What%20would%20you%20do%20first-Q/","text":"[[do]] [[first]]","title":"What would you do first Q"},{"location":"private/english/category/details/What%27s%20that%20about-Q/","text":"[[about]]","title":"What's that about Q"},{"location":"private/english/category/details/What%27s%20the%20difference%20in%20type%20of%20frameworks-Q/","text":"[[rather]] [[type]]","title":"What's the difference in type of frameworks Q"},{"location":"private/english/category/details/When%20buildling%20a%20model%20of%20the%20company%20you%20are%20analyzing%20uses%20a%20lot%20of%20debt%2C%20you%20have%20to%20analyze%20interest%20rate/","text":"Model #Building \u00b6","title":"When buildling a model of the company you are analyzing uses a lot of debt, you have to analyze interest rate"},{"location":"private/english/category/details/When%20buildling%20a%20model%20of%20the%20company%20you%20are%20analyzing%20uses%20a%20lot%20of%20debt%2C%20you%20have%20to%20analyze%20interest%20rate/#model-building","text":"","title":"Model #Building"},{"location":"private/english/category/details/When%20is%20due-Q/","text":"[[due]]","title":"When is due Q"},{"location":"private/english/category/details/When%20the%20economy%20are%20not%20doing%20well%20we%20refer%20to%20this%20as%20a%20bear%20market/","text":"[[as]]","title":"When the economy are not doing well we refer to this as a bear market"},{"location":"private/english/category/details/Where%20were%20these%20products%20made-Q/","text":"[[made]]","title":"Where were these products made Q"},{"location":"private/english/category/details/Which%20is%20the%20best%20way%20encoding-Q/","text":"[[way]]","title":"Which is the best way encoding Q"},{"location":"private/english/category/details/Which%20is%20what%20we%20will%20focuse%20on%20actually%20for%20the%20etc/","text":"Focuse \u00b6","title":"Which is what we will focuse on actually for the etc"},{"location":"private/english/category/details/Which%20is%20what%20we%20will%20focuse%20on%20actually%20for%20the%20etc/#focuse","text":"","title":"Focuse"},{"location":"private/english/category/details/Which%20is%20why%20we%27re%20covering%20in%20the%20course%20first%20is%20etc/","text":"[[cover]]","title":"Which is why we're covering in the course first is etc"},{"location":"private/english/category/details/Which%20of%20the%20following%20would%20you%20do-Q/","text":"Following [[do]] \u00b6","title":"Which of the following would you do Q"},{"location":"private/english/category/details/Which%20of%20the%20following%20would%20you%20do-Q/#following-do","text":"","title":"Following [[do]]"},{"location":"private/english/category/details/Which%20task%20do%20you%20associate%20with%20current%20plan-Q/","text":"Task #Associate \u00b6","title":"Which task do you associate with current plan Q"},{"location":"private/english/category/details/Which%20task%20do%20you%20associate%20with%20current%20plan-Q/#task-associate","text":"","title":"Task #Associate"},{"location":"private/english/category/details/Who%20am%20I%20meeting-Q/","text":"[[meet]]","title":"Who am I meeting Q"},{"location":"private/english/category/details/Who%20do%20I%20contact%20if%20there%20is%20a%20question-Q/","text":"[[contact]]","title":"Who do I contact if there is a question Q"},{"location":"private/english/category/details/Why%20don%27t%20we%20take%20a%20short%20break-Q/","text":"[[break]] [[take]]","title":"Why don't we take a short break Q"},{"location":"private/english/category/details/Why%20don%27t%20you%20give%20that%20a%20try%20first-Q/","text":"","title":"Why don't you give that a try first Q"},{"location":"private/english/category/details/Why%20don%27t%20you%20mind%20creating%20a%20new%20start%20up-Q/","text":"[[mind]]","title":"Why don't you mind creating a new start up Q"},{"location":"private/english/category/details/Why%20is%20this%20the%20case-Q/","text":"Case \u00b6","title":"Why is this the case Q"},{"location":"private/english/category/details/Why%20is%20this%20the%20case-Q/#case","text":"","title":"Case"},{"location":"private/english/category/details/Will%20there%20be%20an%20opportunity%20to%20do%20some%20getting%20advice-Q/","text":"[[opportunity]] [[advice]]","title":"Will there be an opportunity to do some getting advice Q"},{"location":"private/english/category/details/Without%20doubt%2C%20it%27s%20the%20must-see%20clip%20of%20this%20toturial.%20The%20whole%20clip%20blends%20together%20well/","text":"[[doubt]]","title":"Without doubt, it's the must see clip of this toturial. The whole clip blends together well"},{"location":"private/english/category/details/Would%20it%20be%20possible%20to%20get%20someone%20come%20at%20the%20airport-Q/","text":"[[possible]] [[come]]","title":"Would it be possible to get someone come at the airport Q"},{"location":"private/english/category/details/Would%20you%20mind%20give%20me%20more%20time%20think%20about%20it-Q/","text":"[[about]]","title":"Would you mind give me more time think about it Q"},{"location":"private/english/category/details/You%20are%20through%20to%20the%20my%20experiences/","text":"[[experience]]","title":"You are through to the my experiences"},{"location":"private/english/category/details/You%20can%20click%20on%20each%20one%20of%20these%20buttons%20here/","text":"Button #Click \u00b6","title":"You can click on each one of these buttons here"},{"location":"private/english/category/details/You%20can%20click%20on%20each%20one%20of%20these%20buttons%20here/#button-click","text":"","title":"Button #Click"},{"location":"private/english/category/details/You%20can%27t%20except%20me%20to%20work/","text":"[[except]] [[work]]","title":"You can't except me to work"},{"location":"private/english/category/details/You%20gotta%20keep%20an%20eye%20on%20some%20of%20these%20factors/","text":"Eye [[gotta]] \u00b6","title":"You gotta keep an eye on some of these factors"},{"location":"private/english/category/details/You%20gotta%20keep%20an%20eye%20on%20some%20of%20these%20factors/#eye-gotta","text":"","title":"Eye [[gotta]]"},{"location":"private/english/category/details/You%20know%20what-Q/","text":"[[know]]","title":"You know what Q"},{"location":"private/english/category/details/You%20may%20be%20right%2C%20but%20etc/","text":"[[maybe]]","title":"You may be right, but etc"},{"location":"private/english/category/details/You%20need%20to%20determine%20the%20price%20of%20GAS/","text":"Determine \u00b6","title":"You need to determine the price of GAS"},{"location":"private/english/category/details/You%20need%20to%20determine%20the%20price%20of%20GAS/#determine","text":"","title":"Determine"},{"location":"private/english/category/details/You%20need%20to%20exercise%20more%20often/","text":"[[need]]","title":"You need to exercise more often"},{"location":"private/english/category/details/You%20need%20to%20familiar%20with%20the%20etc/","text":"Familiar \u00b6","title":"You need to familiar with the etc"},{"location":"private/english/category/details/You%20need%20to%20familiar%20with%20the%20etc/#familiar","text":"","title":"Familiar"},{"location":"private/english/category/details/You%20talked%20about%20etc/","text":"[[about]]","title":"You talked about etc"},{"location":"private/english/category/details/You%27ll%20have%20to%20do%20better%20than%20that-%20I%27m%20afraid/","text":"[[afraid]]","title":"You'll have to do better than that  I'm afraid"},{"location":"private/english/category/details/You%27ll%20notice%20that%20when%20interest%20rates%20are%20unusually%20high%20you%20might%20say%20%2C%20Arman..How%20because%20etc/","text":"[[notice]]","title":"You'll notice that when interest rates are unusually high you might say , Arman..How because etc"},{"location":"private/english/category/details/You%27re%20actually%20going%20to%20be%20able%20to%20etc/","text":"Actually \u00b6","title":"You're actually going to be able to etc"},{"location":"private/english/category/details/You%27re%20actually%20going%20to%20be%20able%20to%20etc/#actually","text":"","title":"Actually"},{"location":"private/english/category/details/You%27re%20probably%20right/","text":"[[right]]","title":"You're probably right"},{"location":"private/english/category/details/You%27re%20standing%20on%20the%20exact%20site%20where%20Dr.gavin%20founded%202018/","text":"#Stand","title":"You're standing on the exact site where Dr.gavin founded 2018"},{"location":"private/english/category/details/You%27ve%20notice%20....%20Is%20falling%20as%20a%20result%20of%20the%20time%20lost/","text":"Notice #Lost \u00b6","title":"You've notice .... Is falling as a result of the time lost"},{"location":"private/english/category/details/You%27ve%20notice%20....%20Is%20falling%20as%20a%20result%20of%20the%20time%20lost/#notice-lost","text":"","title":"Notice #Lost"},{"location":"private/english/category/details/depending%20on%20what%20sector%20you%20cover/","text":"Cover \u00b6","title":"Depending on what sector you cover"},{"location":"private/english/category/details/depending%20on%20what%20sector%20you%20cover/#cover","text":"","title":"Cover"},{"location":"private/english/category/details/let%20me%20kick%20it%20off%20with%20the%20what/","text":"[[kickoff]]","title":"Let me kick it off with the what"},{"location":"private/english/category/details/to%20see%20if%20that%20does%20the%20trick/","text":"Trick [[fixes the problem]] \u00b6","title":"To see if that does the trick"},{"location":"private/english/category/details/to%20see%20if%20that%20does%20the%20trick/#trick-fixes-the-problem","text":"","title":"Trick [[fixes the problem]]"},{"location":"private/english/category/details/we%20don%27t%20know%20how%20to%20...%2C%20so%20you%20just%20need%20to%20be%20aware%20of%20the%20fact%20that%20given%20a%20Cert/","text":"Aware #Fact \u00b6","title":"we don't know how to ..., so you just need to be aware of the fact that given a Cert"},{"location":"private/english/category/details/we%20don%27t%20know%20how%20to%20...%2C%20so%20you%20just%20need%20to%20be%20aware%20of%20the%20fact%20that%20given%20a%20Cert/#aware-fact","text":"","title":"Aware #Fact"},{"location":"private/english/category/seminar/continue-1/","text":" [[So keep in mind that ...]] [[At this point you're probably wondering, what is ...]] [[The ... is often used alongside with the..]] [[I don't know if it works but we try it]] [[I maybe wrong but...]] [[It's been working fine]] [[I've got a bit of warning in the project]] [[It's time for you to rotate ...]] [[The smart contracts written in Solidity need to be compiled and deployed to the blockchain This can be achieved by using a development environment for Ethereum called Truffle]]","title":"English"},{"location":"private/english/category/seminar/continue-2/","text":" [[Just a second please I almost done]] [[It takes a little while to work]]","title":"English"},{"location":"private/english/category/seminar/en-seminar/","text":" [[start]] Start [[continue-1]] Continue-1 [[continue-2]] Continue-2 [[finish]] Finish [[if]] if [[let]] Let","title":"English"},{"location":"private/english/category/seminar/finish/","text":" [[I'd rather let me finish it at this point]] [[I hope you enjoy. If you have any question please let me know]]","title":"English"},{"location":"private/english/category/seminar/start/","text":" [[I'm gonna cover any boring theory]] [[I work on substrate in the last few months]] [[It took me ages to learn programming and found knowledge of IT]] [[I don't think of myself as a hero person since every developer is not able to reach all information because of a lack of time]] [[I think we are drifting off the point a bit]] [[There is many different wasy to do]] [[It's different ways to teach it]] [[The goal of the unit tests is actually to make sure that we won't face errors while we are trying to deploy the release version]] [[After this section we're going to jump right into investment banking as such]] [[We need to move on ...]]","title":"English"},{"location":"private/slides/slide-until2019/","text":" Slides Archived Until 2019","title":"Slide until2019"},{"location":"public/myvideos/","text":"[[Solidity]] Solidity [[Guide-Website]] Guide-Website [[AboutMe]] AboutMe","title":"Myvideos"},{"location":"public/public/","text":"Day-Notes 2022 Blockchain Rust Programming DevOps Engineer Cryptocurrency-Trade Master Thesis Archive-Projects How to learn quickly RoadMap Links Preferred Films Of Website Entertainment","title":"Walk-through"},{"location":"public/archive/archive-2016-2019/","text":"[[Archived]]-2016-2019 \u00b6 Devops Engineer Demo version of organization portal Angular 6 GraphQl SqlServer Rest Api 2018 Management e-commerce Deployed On Container & Orchestration with Kubernetes MongoDB Asp.#NetCore 3.1 2020 Management e-commerce 1 Management e-commerce 2 Management e-commerce 3 Angular 6 \u00b6 GraphQl \u00b6 SqlServer \u00b6 MongoDB \u00b6 Asp.Netcore \u00b6 Container & #Orchestration with #Kubernetes \u00b6","title":"[[Archived]]-2016-2019"},{"location":"public/archive/archive-2016-2019/#archived-2016-2019","text":"Devops Engineer Demo version of organization portal Angular 6 GraphQl SqlServer Rest Api 2018 Management e-commerce Deployed On Container & Orchestration with Kubernetes MongoDB Asp.#NetCore 3.1 2020 Management e-commerce 1 Management e-commerce 2 Management e-commerce 3","title":"[[Archived]]-2016-2019"},{"location":"public/archive/archive-2016-2019/#angular-6","text":"","title":"Angular 6"},{"location":"public/archive/archive-2016-2019/#graphql","text":"","title":"GraphQl"},{"location":"public/archive/archive-2016-2019/#sqlserver","text":"","title":"SqlServer"},{"location":"public/archive/archive-2016-2019/#mongodb","text":"","title":"MongoDB"},{"location":"public/archive/archive-2016-2019/#aspnetcore","text":"","title":"Asp.Netcore"},{"location":"public/archive/archive-2016-2019/#container-orchestration-with-kubernetes","text":"","title":"Container &amp; #Orchestration with #Kubernetes"},{"location":"public/archive/archive-2019-2020/","text":"[[Archived]]-2019-2020 \u00b6 Devops Engineer Reactjs-API-CouchDB API-CouchDB-IBMCloud Crypto Trading","title":"[[Archived]]-2019-2020"},{"location":"public/archive/archive-2019-2020/#archived-2019-2020","text":"Devops Engineer Reactjs-API-CouchDB API-CouchDB-IBMCloud Crypto Trading","title":"[[Archived]]-2019-2020"},{"location":"public/archive/archive-until-2016/","text":"[[Archived]]-until-2016 \u00b6 Website Cultural Store CMS builder Website Carpet Factory Website Computer Store Resume WebSite Website Sales Photo Dadyar-Advocacy Software CNG Warehouse Software University Archive Software Website Conference Base on Network-P2P Info","title":"[[Archived]]-until-2016"},{"location":"public/archive/archive-until-2016/#archived-until-2016","text":"Website Cultural Store CMS builder Website Carpet Factory Website Computer Store Resume WebSite Website Sales Photo Dadyar-Advocacy Software CNG Warehouse Software University Archive Software Website Conference Base on Network-P2P Info","title":"[[Archived]]-until-2016"},{"location":"public/archive/cms-builder/","text":"CMS Builder [[Archived]] \u00b6 Use AngularJs & WebApi technology Responds to all your operations without the need to refresh the page Single Page Application SPA Define tree structure #Angular \u00b6 #SPA \u00b6 #CMS \u00b6 Info","title":"CMS Builder [[Archived]]"},{"location":"public/archive/cms-builder/#cms-builder-archived","text":"Use AngularJs & WebApi technology Responds to all your operations without the need to refresh the page Single Page Application SPA Define tree structure","title":"CMS Builder [[Archived]]"},{"location":"public/archive/cng/","text":"CNG Warehouse Software [[Archived]] \u00b6 Advanced reporting features with a variety of search filters by Crystal Report Computing facilities in the accounting department and presenting invoices to the Customer Very user friendly interface Dynamic content presentation Security facilities for anonymous people to enter Ability to remind checks on the main page of the application #Reporter \u00b6 #Desktop \u00b6 #Windows \u00b6 #Telerik \u00b6 Info","title":"CNG Warehouse Software [[Archived]]"},{"location":"public/archive/cng/#cng-warehouse-software-archived","text":"Advanced reporting features with a variety of search filters by Crystal Report Computing facilities in the accounting department and presenting invoices to the Customer Very user friendly interface Dynamic content presentation Security facilities for anonymous people to enter Ability to remind checks on the main page of the application","title":"CNG Warehouse Software [[Archived]]"},{"location":"public/archive/dadyar/","text":"Advocate-Dadyar [[Archived]] \u00b6 Advanced reporting features with a variety of search filters by Crystal Report Dynamic printing facilities for all types of petition forms and ... Has a very strong and stylish user interface Record client details Has dynamic content presentation Security facilities for anonymous people to enter #Windows \u00b6 #CrystalReporter \u00b6 #Printer \u00b6 #Telerik \u00b6 Info None","title":"Dadyar"},{"location":"public/archive/dadyar/#advocate-dadyar-archived","text":"Advanced reporting features with a variety of search filters by Crystal Report Dynamic printing facilities for all types of petition forms and ... Has a very strong and stylish user interface Record client details Has dynamic content presentation Security facilities for anonymous people to enter","title":"Advocate-Dadyar [[Archived]]"},{"location":"public/archive/main/","text":"Archive 2019-2020 Archive 2016-2019 Archive before 2016","title":"Main"},{"location":"public/archive/my-old-website/","text":"My Old Resume WebSite [[Archived]] \u00b6 Used MVC architecture Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section ##### #MVC ##### C# ##### #JQuery Info","title":"My Old Resume WebSite [[Archived]]"},{"location":"public/archive/my-old-website/#my-old-resume-website-archived","text":"Used MVC architecture Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section ##### #MVC ##### C# ##### #JQuery Info","title":"My Old Resume WebSite [[Archived]]"},{"location":"public/archive/trading-archive-2021/","text":"[[Archived]] Trade 2021 \u00b6 Captured Films Without translating To English Monetization and how to use the digital currency platform-Part 1 Monetization and how to use the digital currency platform-Part 2 Spot trading in low-risk-Binance-Part 1 Future trading-Binance-Part 2-1 Future trading-Binance-Part 2-2 Trading on the Binance-Part 3","title":"[[Archived]] Trade 2021"},{"location":"public/archive/trading-archive-2021/#archived-trade-2021","text":"Captured Films Without translating To English Monetization and how to use the digital currency platform-Part 1 Monetization and how to use the digital currency platform-Part 2 Spot trading in low-risk-Binance-Part 1 Future trading-Binance-Part 2-1 Future trading-Binance-Part 2-2 Trading on the Binance-Part 3","title":"[[Archived]] Trade 2021"},{"location":"public/archive/university-archive-software/","text":"University Archive Software [[Archived]] \u00b6 Advanced reporting features with a variety of search filters by Crystal Report The software is under the network within the organization User friendly interface Dynamics in content presentation and reporting Archive files with serial number and barcode Archive #Software \u00b6 Network \u00b6 #SqlServer \u00b6 Socket \u00b6 #Windows \u00b6 C \u00b6 Info","title":"University Archive Software [[Archived]]"},{"location":"public/archive/university-archive-software/#university-archive-software-archived","text":"Advanced reporting features with a variety of search filters by Crystal Report The software is under the network within the organization User friendly interface Dynamics in content presentation and reporting Archive files with serial number and barcode","title":"University Archive Software [[Archived]]"},{"location":"public/archive/website-carpet-factory/","text":"WebSite Carpet Factory [[Archived]] \u00b6 Possibility of electronic payment Send promotional SMS as well as after each customer purchase Post a poll without refreshing the browser Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically It has got separate CRM section ##### [[CRM]] ##### Electronic Payment ##### [[ASP.NET]] ##### #SMS ##### [[Payment]] [[Archive]] Info","title":"WebSite Carpet Factory [[Archived]]"},{"location":"public/archive/website-carpet-factory/#website-carpet-factory-archived","text":"Possibility of electronic payment Send promotional SMS as well as after each customer purchase Post a poll without refreshing the browser Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically It has got separate CRM section ##### [[CRM]] ##### Electronic Payment ##### [[ASP.NET]] ##### #SMS ##### [[Payment]] [[Archive]] Info","title":"WebSite Carpet Factory [[Archived]]"},{"location":"public/archive/website-computer-store/","text":"Website Computer Store [[Archived]] \u00b6 Used MVC architecture Event-oriented Drag & Drop home screen Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section Define their category management of products Possibility of electronic payment by PEC WebServices #MVC \u00b6 #JQuery \u00b6 #CMS \u00b6 #Electronic Payment \u00b6 C \u00b6 Info","title":"Website Computer Store [[Archived]]"},{"location":"public/archive/website-computer-store/#website-computer-store-archived","text":"Used MVC architecture Event-oriented Drag & Drop home screen Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section Define their category management of products Possibility of electronic payment by PEC WebServices","title":"Website Computer Store [[Archived]]"},{"location":"public/archive/website-conference/","text":"Website Conference Base on Network-P2P [[Archived]] \u00b6 No need to install any software through the Silverlight web browser plugin/extension. Contains management software of the desktop application type on the server as well as coded (Socket-SilverLight) on web clients that call the server ID on their browser. Ability to text chat and send files simultaneously and online #Conference \u00b6 Network Conference Site \u00b6 #WebApp Chat \u00b6 Network #Software \u00b6 Simultaneous chat schedule \u00b6 #Silverlight \u00b6 C \u00b6 Info","title":"Website Conference Base on Network-P2P [[Archived]]"},{"location":"public/archive/website-conference/#website-conference-base-on-network-p2p-archived","text":"No need to install any software through the Silverlight web browser plugin/extension. Contains management software of the desktop application type on the server as well as coded (Socket-SilverLight) on web clients that call the server ID on their browser. Ability to text chat and send files simultaneously and online","title":"Website Conference Base on Network-P2P [[Archived]]"},{"location":"public/archive/website-cultural-store/","text":"Website Cultural Store [[Archived]] \u00b6 Used AngularJs & WebApi technology Respond to all user operations synchronously without to need to refresh the page Single Page Application Having a shopping cart dynamically and simultaneously Display the contents of orders completely simultaneously Used BootStrap Dynamic categories from the Category attribute with getting updates from the database ##### #Angularjs ##### #Electronic Payment ##### #SPA ##### #BootStrap ##### C# Info","title":"Website Cultural Store [[Archived]]"},{"location":"public/archive/website-cultural-store/#website-cultural-store-archived","text":"Used AngularJs & WebApi technology Respond to all user operations synchronously without to need to refresh the page Single Page Application Having a shopping cart dynamically and simultaneously Display the contents of orders completely simultaneously Used BootStrap Dynamic categories from the Category attribute with getting updates from the database ##### #Angularjs ##### #Electronic Payment ##### #SPA ##### #BootStrap ##### C# Info","title":"Website Cultural Store [[Archived]]"},{"location":"public/archive/website-sales-photo/","text":"WebSite Sales Photo [[Archived]] \u00b6 Ability to online payment Ability to upload and download multiple image files simultaneously Having a website visitor statistics section Ability to search advanced images in the gallery Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically Having a separated CRM section [[CRM]] \u00b6 Electronic Payment \u00b6 Editor \u00b6 Filter \u00b6 Crop \u00b6 [[ASP.NET]] \u00b6 [[C#]] \u00b6 [[Archive]] Info","title":"WebSite Sales Photo [[Archived]]"},{"location":"public/archive/website-sales-photo/#website-sales-photo-archived","text":"Ability to online payment Ability to upload and download multiple image files simultaneously Having a website visitor statistics section Ability to search advanced images in the gallery Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically Having a separated CRM section","title":"WebSite Sales Photo [[Archived]]"},{"location":"public/blockchain/Blockchain-tutorials/","text":"\u25d8 BlockV BlockV - Enterprise Plug & Play Interoperability, TV, VR \u25d8 UniBright UniBright- Dashboard with Any block,360\u00b0 Security token platform(Token Generator), Cross-chain functionality, Voting template, Milestone Payment template. \u25d8 Blockstream Blockstream - Liquid Swaps, multi-part payments by c-lightning plugins. Prometheus Plugin and Grafana, Script can be used to represent complex conditions required to release a transaction by Miniscript. \u25d8 Blockstack Blockstack - Modular, supply minimal infrastructure for hosting the application code, don't need to worry about maintaining and securing databases, universal usernames. \u25d8 DTube DTube - Design new model Avalon social blockchain\u200a-\u200aSimplify User Experience \u25d8 Quorum Quorum - Tools: Cakeshop IDE,Quorum Wizard npm,anonymous-zether payment system. \u25d8 IBM IBM - Contains \"vscode\" extensions. \u25d8 SkyCoin SkyCoin Blockchain popular [[platforms]] \u25d8 BlockV \u00b6 BlockV - Enterprise Plug & Play Interoperability, TV, VR \u00b6 \u25d8 UniBright \u00b6 UniBright- Dashboard with Any block,360\u00b0 Security token platform(Token Generator), Cross-chain functionality, Voting template, Milestone Payment template. \u00b6 Unibright Framework: (Workflow Designer),(Lifecycle Manager),(Connector),(Explorer) Unibright Framework consists of 4 components to visually define business processes (Workflow Designer), publish and maintain automatically generated smart contracts to different blockchains (Lifecycle Manager), integrate these contracts with on- and off-chain system landscapes (Connector) and visually monitor all ongoing processes (Explorer). \u25d8 Blockstream \u00b6 Blockstream - Liquid Swaps, multi-part payments by c-lightning plugins. Prometheus Plugin and Grafana, Script can be used to represent complex conditions required to release a transaction by Miniscript. \u00b6 Miniscript: efficient analysis, composition, generic signing. Transaction: Data Feed(History Transaction), low transaction weights Main Systems: (Liquid),(Elements),(Satellite network) \u25d8 Blockstack \u00b6 Blockstack - Modular, supply minimal infrastructure for hosting the application code, don't need to worry about maintaining and securing databases, universal usernames. \u00b6 (build high-quality applications).(Tunable Proofs election system to securely bootstrap a new blockchain).(on-chain expressibility). (security and predictability of smart contracts). (admitting static analysis for all transactions.)(decentralized storage system, called Gaia).(A universal ID and authentication system, called Blockstack Auth),(do not need to worry about running servers or databases.)(Blockstack's \ufb01rst-generation blockchain operated logically on top of Layer-1 (L1), and each transaction was in 1-to-1 correspondence with an L1 Bitcoin transaction).(Have a Browser) Ease of Use, Scalability User Control Minimal logic and state at the blockchain layer Localized state changes vs. global state changes Reliable cloud-like storage vs. peer storage Full-stack SDKs for developers A novel peer network (Atlas).Blockstack DApps are not required to use smart contracts at all.v2 general-purpose smart contracts written in a non-Turing-complete language \u25d8 DTube \u00b6 DTube - Design new model Avalon social blockchain\u200a-\u200aSimplify User Experience \u00b6 Users on the DTube Chain will now earn 1 single liquid cryptocurrency token: the DTC (instead of 3 on Steem). Spending Voting Power (VP) is simplified and all rewards are collected in real time. Ease adoption Creating an account on DTube Chain will be instant and as easy as 2 clicks (versus a few weeks on Steem) Increase retention On DTube Chain, VP stacks up indefinitely to incentive returning visitors (on Steem, voting power caps after a few days of user inactivity). Foster long term user growth with a dynamic inflation\u200a-\u200aBenefits of the DTube Chain: More efficient governance DTube Chain is a decentralized organization governed by leaders. It is much easier to obtain a consensus and implement changes for the DTube community where all stakeholders interests are aligned rather than on Steem where more than 400 Apps share the same chain and economy, yet gave different interests and visions. (Higher scalability). DTube Chain, which is exclusively dedicated to the DTube app, can handle thousands of transactions per second (i.e. tens of millions of daily active users). On Steem, DApps need to share bandwidth generation which limits the overall capacity of each app. Focus on Transaction manager is very good. Transaction manager\u200a-\u200aQurioum node\u200a-\u200aGood Api -Local state database on node and Transaction manager. DTube, at the first implemented on Steem Network\u200a-\u200ait's own DTube Chain, DTC (Type of IEO), DTube Chain is a \"onechain-oneapp\" model where each App uses its own blockchain database in opposition to the classic model where all users and programs share and pay a transaction fee to the same Chain. \u25d8 Quorum \u00b6 Quorum - Tools: Cakeshop IDE,Quorum Wizard npm,anonymous-zether payment system. \u00b6 Based on the official Go implementation of the Ethereum.We're powered by strong partnerships with Microsoft and JPMorgan. \u25d8 IBM \u00b6 IBM - Contains \"vscode\" extensions. \u00b6 Simplified DevOps in a seamless environment for your team to move easily from development to test to production. Peer, Ordering Service, Certificate Authority. Start small, with no upfront investment. Then pay as you grow and upgrade easily through Kubernetes. Connect to nodes running in any environment (on-premises, public, hybrid clouds). Easily connect a single peer to multiple industry networks. \u25d8 SkyCoin \u00b6 SkyCoin \u00b6 Lightning Fast Zero Fees Secure Private Sustainable Incentivized Utility Backed Free Fee Transaction Skycoin: fast and secure currency backed by bandwidth. Skywire: anonymous, decentralized mesh-Internet. Skyminer: hardware and access point for Skywire. Fiber: decentralized open blockchain network. Skysuite: suite of decentralized applications. armanriazi/Doc-Blockchain Contribute to armanriazi/Doc-Blockchain development by creating an account on GitHub.github.com","title":"Blockchain tutorials"},{"location":"public/blockchain/Blockchain-tutorials/#blockv","text":"","title":"\u25d8 BlockV"},{"location":"public/blockchain/Blockchain-tutorials/#blockv-enterprise-plug-play-interoperability-tv-vr","text":"","title":"BlockV - Enterprise Plug &amp; Play Interoperability, TV, VR"},{"location":"public/blockchain/Blockchain-tutorials/#unibright","text":"","title":"\u25d8 UniBright"},{"location":"public/blockchain/Blockchain-tutorials/#unibright-dashboard-with-any-block360-security-token-platformtoken-generator-cross-chain-functionality-voting-template-milestone-payment-template","text":"Unibright Framework: (Workflow Designer),(Lifecycle Manager),(Connector),(Explorer) Unibright Framework consists of 4 components to visually define business processes (Workflow Designer), publish and maintain automatically generated smart contracts to different blockchains (Lifecycle Manager), integrate these contracts with on- and off-chain system landscapes (Connector) and visually monitor all ongoing processes (Explorer).","title":"UniBright- Dashboard with Any block,360\u00b0 Security token platform(Token Generator), Cross-chain functionality, Voting template, Milestone Payment template."},{"location":"public/blockchain/Blockchain-tutorials/#blockstream","text":"","title":"\u25d8 Blockstream"},{"location":"public/blockchain/Blockchain-tutorials/#blockstream-liquid-swaps-multi-part-payments-by-c-lightning-plugins-prometheus-plugin-and-grafana-script-can-be-used-to-represent-complex-conditions-required-to-release-a-transaction-by-miniscript","text":"Miniscript: efficient analysis, composition, generic signing. Transaction: Data Feed(History Transaction), low transaction weights Main Systems: (Liquid),(Elements),(Satellite network)","title":"Blockstream - Liquid Swaps, multi-part payments by c-lightning plugins. Prometheus Plugin and Grafana, Script can be used to represent complex conditions required to release a transaction by Miniscript."},{"location":"public/blockchain/Blockchain-tutorials/#blockstack","text":"","title":"\u25d8 Blockstack"},{"location":"public/blockchain/Blockchain-tutorials/#blockstack-modular-supply-minimal-infrastructure-for-hosting-the-application-code-dont-need-to-worry-about-maintaining-and-securing-databases-universal-usernames","text":"(build high-quality applications).(Tunable Proofs election system to securely bootstrap a new blockchain).(on-chain expressibility). (security and predictability of smart contracts). (admitting static analysis for all transactions.)(decentralized storage system, called Gaia).(A universal ID and authentication system, called Blockstack Auth),(do not need to worry about running servers or databases.)(Blockstack's \ufb01rst-generation blockchain operated logically on top of Layer-1 (L1), and each transaction was in 1-to-1 correspondence with an L1 Bitcoin transaction).(Have a Browser) Ease of Use, Scalability User Control Minimal logic and state at the blockchain layer Localized state changes vs. global state changes Reliable cloud-like storage vs. peer storage Full-stack SDKs for developers A novel peer network (Atlas).Blockstack DApps are not required to use smart contracts at all.v2 general-purpose smart contracts written in a non-Turing-complete language","title":"Blockstack - Modular, supply minimal infrastructure for hosting the application code, don't need to worry about maintaining and securing databases, universal usernames."},{"location":"public/blockchain/Blockchain-tutorials/#dtube","text":"","title":"\u25d8 DTube"},{"location":"public/blockchain/Blockchain-tutorials/#dtube-design-new-model-avalon-social-blockchain-simplify-user-experience","text":"Users on the DTube Chain will now earn 1 single liquid cryptocurrency token: the DTC (instead of 3 on Steem). Spending Voting Power (VP) is simplified and all rewards are collected in real time. Ease adoption Creating an account on DTube Chain will be instant and as easy as 2 clicks (versus a few weeks on Steem) Increase retention On DTube Chain, VP stacks up indefinitely to incentive returning visitors (on Steem, voting power caps after a few days of user inactivity). Foster long term user growth with a dynamic inflation\u200a-\u200aBenefits of the DTube Chain: More efficient governance DTube Chain is a decentralized organization governed by leaders. It is much easier to obtain a consensus and implement changes for the DTube community where all stakeholders interests are aligned rather than on Steem where more than 400 Apps share the same chain and economy, yet gave different interests and visions. (Higher scalability). DTube Chain, which is exclusively dedicated to the DTube app, can handle thousands of transactions per second (i.e. tens of millions of daily active users). On Steem, DApps need to share bandwidth generation which limits the overall capacity of each app. Focus on Transaction manager is very good. Transaction manager\u200a-\u200aQurioum node\u200a-\u200aGood Api -Local state database on node and Transaction manager. DTube, at the first implemented on Steem Network\u200a-\u200ait's own DTube Chain, DTC (Type of IEO), DTube Chain is a \"onechain-oneapp\" model where each App uses its own blockchain database in opposition to the classic model where all users and programs share and pay a transaction fee to the same Chain.","title":"DTube - Design new model Avalon social blockchain\u200a-\u200aSimplify User Experience"},{"location":"public/blockchain/Blockchain-tutorials/#quorum","text":"","title":"\u25d8 Quorum"},{"location":"public/blockchain/Blockchain-tutorials/#quorum-tools-cakeshop-idequorum-wizard-npmanonymous-zether-payment-system","text":"Based on the official Go implementation of the Ethereum.We're powered by strong partnerships with Microsoft and JPMorgan.","title":"Quorum - Tools: Cakeshop IDE,Quorum Wizard npm,anonymous-zether payment system."},{"location":"public/blockchain/Blockchain-tutorials/#ibm","text":"","title":"\u25d8 IBM"},{"location":"public/blockchain/Blockchain-tutorials/#ibm-contains-vscode-extensions","text":"Simplified DevOps in a seamless environment for your team to move easily from development to test to production. Peer, Ordering Service, Certificate Authority. Start small, with no upfront investment. Then pay as you grow and upgrade easily through Kubernetes. Connect to nodes running in any environment (on-premises, public, hybrid clouds). Easily connect a single peer to multiple industry networks.","title":"IBM - Contains \"vscode\" extensions."},{"location":"public/blockchain/Blockchain-tutorials/#skycoin","text":"","title":"\u25d8 SkyCoin"},{"location":"public/blockchain/Blockchain-tutorials/#skycoin_1","text":"Lightning Fast Zero Fees Secure Private Sustainable Incentivized Utility Backed Free Fee Transaction Skycoin: fast and secure currency backed by bandwidth. Skywire: anonymous, decentralized mesh-Internet. Skyminer: hardware and access point for Skywire. Fiber: decentralized open blockchain network. Skysuite: suite of decentralized applications. armanriazi/Doc-Blockchain Contribute to armanriazi/Doc-Blockchain development by creating an account on GitHub.github.com","title":"SkyCoin"},{"location":"public/blockchain/Blockchain/","text":"Blockchain \u00b6 MindMapping \u00b6 If you want to get update-mind-mapping image, send me Email (Title: armanriazi.github.io _ MindMapping) Substrate MindMapping 2021-2023 \u00b6 My Current Consideration \u00b6 Rust-Lang Substrate Kusama Polkadot ParaState Research \u00b6 Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Part(1) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Part(2) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/CrowdLoan/Part(3) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/ParaState/Part(4) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/EWASM/Part(5) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/SecondState/Part(6) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Rust-Lang/Part(7) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/NodeSetup/Part(8) Passed self-study tutorials \u00b6 Substrate workshop with Dr.Gavin Wood and Sergei Shulepov Build a Bitcoin-like Blockchain with Substrate Intro to Substrate-1-10 Substrate based ParaChains (Polkadot) support via Parastate Substrate Recipes Workshop - Learn to Build a Custom Blockchain Build a Bitcoin-like Blockchain with Substrate - Beginner Friendly 2019-2020 \u00b6 Sample Projects \u00b6 Solidity Hyperledger Corda-r3 Research \u00b6 Blockchain-tutorials Passed self-study tutorials \u00b6 \u25d8 Sample My Academic & Experiences On Blockchain Subject(2020-2021) \u25d8 Archived Video Packages( Seen ) \u00b6 INE Understanding Crypto Currencies Bitcoins and Blockchains Lynda Ethereum Building Blockchain Decentralized Apps DApps Packtpub Blockchain for Business 2018 The New Industrial Revolution Packtpub Blockchain Real World Projects StoneRiverElearning Building Cryptocurrencies and Smart Contracts StoneRiverElearning Starting with NEM (Not yet) TechnicsPublications Data Modeling and Blockchain Build a Blockchain and a cryptocurrnecy from scratch IBM Blockchain Solutions Youtube Channels \u00b6 Hyperledger IBM DApp university Skycoin Blockstack Ethereum Samples have runned by test network \u00b6 DAapp university by web3.js (Reactjs,Js)- Solidity Solidity (build a game) Build blockchain with Golang (Websocket) Trading \u00b6 Investment Cryptocurrentcy Trading On The Platforms Of The Cryptocurrency Binance Trading Trading on Civil Platforms (native financial) Knowledge Of Technical & Conceptual Trading \u25d8 And many bookmarks that taked my attention and time for understanding leaf subjects of blockchain \u25d8 Shared Research White Papers \u00b6 OneNote-Online","title":"Blockchain"},{"location":"public/blockchain/Blockchain/#blockchain","text":"","title":"Blockchain"},{"location":"public/blockchain/Blockchain/#mindmapping","text":"If you want to get update-mind-mapping image, send me Email (Title: armanriazi.github.io _ MindMapping) Substrate MindMapping","title":"MindMapping"},{"location":"public/blockchain/Blockchain/#2021-2023","text":"","title":"2021-2023"},{"location":"public/blockchain/Blockchain/#my-current-consideration","text":"Rust-Lang Substrate Kusama Polkadot ParaState","title":"My Current Consideration"},{"location":"public/blockchain/Blockchain/#research","text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Part(1) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Part(2) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/CrowdLoan/Part(3) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/ParaState/Part(4) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/EWASM/Part(5) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/SecondState/Part(6) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Rust-Lang/Part(7) Highlighted Deep Dive Into Polkadot/Substrate/Kusama/NodeSetup/Part(8)","title":"Research"},{"location":"public/blockchain/Blockchain/#passed-self-study-tutorials","text":"Substrate workshop with Dr.Gavin Wood and Sergei Shulepov Build a Bitcoin-like Blockchain with Substrate Intro to Substrate-1-10 Substrate based ParaChains (Polkadot) support via Parastate Substrate Recipes Workshop - Learn to Build a Custom Blockchain Build a Bitcoin-like Blockchain with Substrate - Beginner Friendly","title":"Passed self-study tutorials"},{"location":"public/blockchain/Blockchain/#2019-2020","text":"","title":"2019-2020"},{"location":"public/blockchain/Blockchain/#sample-projects","text":"Solidity Hyperledger Corda-r3","title":"Sample Projects"},{"location":"public/blockchain/Blockchain/#research_1","text":"Blockchain-tutorials","title":"Research"},{"location":"public/blockchain/Blockchain/#passed-self-study-tutorials_1","text":"\u25d8 Sample My Academic & Experiences On Blockchain Subject(2020-2021) \u25d8","title":"Passed self-study tutorials"},{"location":"public/blockchain/Blockchain/#archived-video-packagesseen","text":"INE Understanding Crypto Currencies Bitcoins and Blockchains Lynda Ethereum Building Blockchain Decentralized Apps DApps Packtpub Blockchain for Business 2018 The New Industrial Revolution Packtpub Blockchain Real World Projects StoneRiverElearning Building Cryptocurrencies and Smart Contracts StoneRiverElearning Starting with NEM (Not yet) TechnicsPublications Data Modeling and Blockchain Build a Blockchain and a cryptocurrnecy from scratch IBM Blockchain Solutions","title":"Archived Video Packages(Seen)"},{"location":"public/blockchain/Blockchain/#youtube-channels","text":"Hyperledger IBM DApp university Skycoin Blockstack Ethereum","title":"Youtube Channels"},{"location":"public/blockchain/Blockchain/#samples-have-runned-by-test-network","text":"DAapp university by web3.js (Reactjs,Js)- Solidity Solidity (build a game) Build blockchain with Golang (Websocket)","title":"Samples have runned by test network"},{"location":"public/blockchain/Blockchain/#trading","text":"Investment Cryptocurrentcy Trading On The Platforms Of The Cryptocurrency Binance Trading Trading on Civil Platforms (native financial) Knowledge Of Technical & Conceptual Trading \u25d8 And many bookmarks that taked my attention and time for understanding leaf subjects of blockchain \u25d8","title":"Trading"},{"location":"public/blockchain/Blockchain/#shared-research-white-papers","text":"OneNote-Online","title":"Shared Research White Papers"},{"location":"public/blockchain/Corda-r3/","tags":["java","simulation","corda"],"text":"Corda-R3 \u00b6 The platform defines blockchain network standards; It provides smart contracts and tokens that work with JVM virtual machines. It is similar to EVM to execute designed protocols. Quote It seems to me that could use the Corda for the simulation of blockchain.","title":"Corda-R3"},{"location":"public/blockchain/Corda-r3/#corda-r3","text":"The platform defines blockchain network standards; It provides smart contracts and tokens that work with JVM virtual machines. It is similar to EVM to execute designed protocols. Quote It seems to me that could use the Corda for the simulation of blockchain.","title":"Corda-R3"},{"location":"public/blockchain/Ethereum_Ecosystem_Research/","text":"","title":"Ethereum Ecosystem Research"},{"location":"public/blockchain/Hyperledger/","tags":["hyperledger","devops","ibm"],"text":"HyperLedger-IBM \u00b6 Quote I remember, used hyperledger-fabric with composer, kubernetes, and even Node-Red.The framework is suit for specialist who have experience with [[Devops]] and I can say that Composer is good idea for this developing. Using standards defined: flexibility, scalability, availability of service under any circumstances, the above mentioned through another branch of technology called DevOps that is compatible with web applications and blockchain, the ability to implement and strengthen the blockchain The author of this project has been working on it. Due to the learning of [[Blockchain]], we are faced with several technologies. The use of HyperLedger, which is provided under the supervision of Linux and is also used by #IBM, and the second case is the use of Ethereum, the second version of which is scheduled to be released by the end of 2021 based on the POS consensus algorithm. The figure above shows the fact that large companies today rely on open source tools for their infrastructure components, and what you see is all free, but the company has been able to establish an effective communication platform base on the cloud. In short, we are not dealing with occasional challenges, but rather \"wheels will not move unless the engine works right.\" Hyperledger-Golang \u00b6 Features \u00b6 Golang \u00b6 On-permise Define Blockchain as manual and changeable Scratch Structure Deploy on docker Scale-up by Kubernetes No need for pay-as-you-go services Complex implementation Hyperledger-Azure \u00b6 Features \u00b6 Blockchain as a service Scale-up with Kubernetes Docker -Compose Wrote by Hyperledger-Compose Pay-as-you-go Secured by Microsoft [[IBM]]","title":"Hyperledger"},{"location":"public/blockchain/Hyperledger/#hyperledger-ibm","text":"Quote I remember, used hyperledger-fabric with composer, kubernetes, and even Node-Red.The framework is suit for specialist who have experience with [[Devops]] and I can say that Composer is good idea for this developing. Using standards defined: flexibility, scalability, availability of service under any circumstances, the above mentioned through another branch of technology called DevOps that is compatible with web applications and blockchain, the ability to implement and strengthen the blockchain The author of this project has been working on it. Due to the learning of [[Blockchain]], we are faced with several technologies. The use of HyperLedger, which is provided under the supervision of Linux and is also used by #IBM, and the second case is the use of Ethereum, the second version of which is scheduled to be released by the end of 2021 based on the POS consensus algorithm. The figure above shows the fact that large companies today rely on open source tools for their infrastructure components, and what you see is all free, but the company has been able to establish an effective communication platform base on the cloud. In short, we are not dealing with occasional challenges, but rather \"wheels will not move unless the engine works right.\"","title":"HyperLedger-IBM"},{"location":"public/blockchain/Hyperledger/#hyperledger-golang","text":"","title":"Hyperledger-Golang"},{"location":"public/blockchain/Hyperledger/#features","text":"","title":"Features"},{"location":"public/blockchain/Hyperledger/#golang","text":"On-permise Define Blockchain as manual and changeable Scratch Structure Deploy on docker Scale-up by Kubernetes No need for pay-as-you-go services Complex implementation","title":"Golang"},{"location":"public/blockchain/Hyperledger/#hyperledger-azure","text":"","title":"Hyperledger-Azure"},{"location":"public/blockchain/Hyperledger/#features_1","text":"Blockchain as a service Scale-up with Kubernetes Docker -Compose Wrote by Hyperledger-Compose Pay-as-you-go Secured by Microsoft [[IBM]]","title":"Features"},{"location":"public/blockchain/Kusama/","text":"Kusama \u00b6 Project \u00b6 Comming Soon... Research \u00b6 Crowdloan-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"Kusama"},{"location":"public/blockchain/Kusama/#kusama","text":"","title":"Kusama"},{"location":"public/blockchain/Kusama/#project","text":"Comming Soon...","title":"Project"},{"location":"public/blockchain/Kusama/#research","text":"Crowdloan-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"Research"},{"location":"public/blockchain/ParaState/","tags":["polkadot_ecosystem","substrate","project","sample","research","ewasm"],"text":"ParaState \u00b6 Project \u00b6 Comming Soon... Research \u00b6 Parastate-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"ParaState"},{"location":"public/blockchain/ParaState/#parastate","text":"","title":"ParaState"},{"location":"public/blockchain/ParaState/#project","text":"Comming Soon...","title":"Project"},{"location":"public/blockchain/ParaState/#research","text":"Parastate-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"Research"},{"location":"public/blockchain/Polkadot-Ecosystem-Research/","text":"","title":"Polkadot Ecosystem Research"},{"location":"public/blockchain/Polkadot/","tags":["polkadot_ecosystem","substrate","project","sample","research"],"text":"Polkadot \u00b6 Project \u00b6 Comming Soon... Research \u00b6 Polkadot-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"Polkadot"},{"location":"public/blockchain/Polkadot/#polkadot","text":"","title":"Polkadot"},{"location":"public/blockchain/Polkadot/#project","text":"Comming Soon...","title":"Project"},{"location":"public/blockchain/Polkadot/#research","text":"Polkadot-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"Research"},{"location":"public/blockchain/SecondState/","tags":["wasm"],"text":"[[Polkadot-Ecosystem-Research]] Secondstate-Research-Intro","title":"SecondState"},{"location":"public/blockchain/Solidity/","tags":["smartcontract","ethereum_ecosystem"],"text":"Solidity \u00b6 Sample Projects \u00b6 Smart Contract-Sales-Energy Smart Contract-RealState Smart Contract-Sale Product Smart Contract-Vote","title":"Solidity"},{"location":"public/blockchain/Solidity/#solidity","text":"","title":"Solidity"},{"location":"public/blockchain/Solidity/#sample-projects","text":"Smart Contract-Sales-Energy Smart Contract-RealState Smart Contract-Sale Product Smart Contract-Vote","title":"Sample Projects"},{"location":"public/blockchain/Substrate/","tags":["polkadot_ecosystem","project","sample","substrate","github"],"text":"Substrate \u00b6 If you want to get updated-mind-mapping image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi.github.io _ MindMapping) Project \u00b6 Comming Soon... Research \u00b6 Substrate-Framework-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"Substrate"},{"location":"public/blockchain/Substrate/#substrate","text":"If you want to get updated-mind-mapping image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi.github.io _ MindMapping)","title":"Substrate"},{"location":"public/blockchain/Substrate/#project","text":"Comming Soon...","title":"Project"},{"location":"public/blockchain/Substrate/#research","text":"Substrate-Framework-Research-Intro [[Polkadot-Ecosystem-Research]]","title":"Research"},{"location":"public/blockchain/WASM/","tags":["wasm","ewasm"],"text":"[[Polkadot-Ecosystem-Research]] Ewasm-Research-Intro","title":"WASM"},{"location":"public/blockchain/parastate/parastate-research-intro/","tags":["parastate","polkadot_ecosystem","pos"],"text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Parastate(4) \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb Introducing \u00b6 ParaState is a proof-of-stake blockchain platform that says its goal is to ParaState aims to become a Polkadot parachain that extends the frontier of Ethereum with substrate framework. By supporting 20+ programming languages to create Ethereum-compatible multi-chain smart contract. @State-Token ParaState is a decentralized autonomous organization (DAO) funded by license fees (as a percentage of gas fees) generated by transactions on other networks using ParaState technology. Any blockchain project that is interested in taking advantage of the technical advantages of ParaState EWASM will be charged licensing fees in the native currencies of these blockchains. Therefore, the intrinsic value of STATE is backed by a basket of native cryptocurrencies from these blockchain projects. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Polkadot (bridge assets via Snowfork/Interlay). \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 intermediate representation = IR Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Parastate research intro"},{"location":"public/blockchain/parastate/parastate-research-intro/#introducing","text":"ParaState is a proof-of-stake blockchain platform that says its goal is to ParaState aims to become a Polkadot parachain that extends the frontier of Ethereum with substrate framework. By supporting 20+ programming languages to create Ethereum-compatible multi-chain smart contract. @State-Token ParaState is a decentralized autonomous organization (DAO) funded by license fees (as a percentage of gas fees) generated by transactions on other networks using ParaState technology. Any blockchain project that is interested in taking advantage of the technical advantages of ParaState EWASM will be charged licensing fees in the native currencies of these blockchains. Therefore, the intrinsic value of STATE is backed by a basket of native cryptocurrencies from these blockchain projects. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Polkadot (bridge assets via Snowfork/Interlay). \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"Introducing"},{"location":"public/blockchain/parastate/parastate-research-intro/#literature","text":"intermediate representation = IR Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Literature"},{"location":"public/blockchain/secondstate/secondstate-research-intro/","tags":["secondstate","iot"],"text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Secondstate(6) \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb Introducing \u00b6 For automakers, the runtime isolation reduces complexity in integration and operation. For parts makers, the virtualized runtime supports \u201cwrite once run on any car\u201d. Second State is developing a real-time, deterministic, and efficient runtime sandbox for automotive applications. It is completely open source and already used by leading auto suppliers. Rust could be 25x faster than Python for machine learning. \ud83d\udc46\ud83d\udc46\ud83d\udc46 SSVM \u00b6 The Second State Functions is based on the Second State WebAssembly VM (SSVM). It is specifically optimized for server-side applications. SSVM is a high-performance WebAssembly runtime for server-side apps. It is safer and 10x faster than Docker. It supports OS access (WASI), AOT compiler , stateful apps, seamless integration with Node.js, and access to hardware (AI chips). Second State provides an open-source WebAssembly implementation (Second State Virtual Machine, or SSVM) that is specifically optimized for server side applications. It is Best in-class in performance. It is 1000x faster than Docker for cold starts.It starts and runs much faster than VM or container-based alternatives. It excels in compute intensive media, data, and edge AI apps. Seamlessly supports server application frameworks, such as the Node.js. You can build high performance Node.js apps with SSVM. Supports safe access to external resources, such as databases, message queues, and even new AI hardware Allows precise metering of computational resources for serverless apps. Serverless \u00b6 @FaaS is one of the fastest growing areas of cloud computing. FaaS allows developers to focus on the code. Once the developer uploads the code, the FaaS takes care of deployment, service availability, and scalability. The developer only pays for resources the service uses, not reserved idle time. This approach, known as serverless computing, is the way to build inter-connected and microservice-based applications. The result are fast development turn around, easy deployment, high availability, infinite scalability, at low cost. However, traditional FaaS are based on microVM (eg Firecracker and gVisor) and application container (eg Docker) technologies. They are general computing platforms not optimized for software stacks. To boot an entire OS and then heavy-weight runtimes just to run a single function is very inefficient. Therefore, existing FaaS solutions suffer from issues such as slow cold start, slow runtime performance, bloated runtime, and time-based billing. They are not suitable for computationally intensive applications. High-level language VMs, such as WebAssembly , offer a combination of ease-of-use, runtime safety, and high performance. The WasmEdge Runtime is a WebAssembly VM that is designed for edge cloud and device applications. It is a great fit for computationally intensive FaaS applications such as edge AI, real-time data analytics, multimedia processing, as well as typical transactional functions that need to start in sub-millisecond and make a quick call to another web service. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Features \u00b6 @WasmEdge WasmEdge is a lightweight, high-performance, and extensible WebAssembly runtime for cloud native, edge, and decentralized applications. It powers serverless apps, embedded functions, microservices, smart contracts, and IoT devices. Today\u2019s web apps often have statically generated front ends that use JavaScript to interact with APIs on the backend (ie, the Jamstack). The WasmEdge is ideally suited for running backend API services as serverless functions . It is fast, secure, low maintainence, cross-platform, and can be easily deployed on edge networks for high performance. WebAssembly is the de facto runtime for modern blockchain smart contracts. Ethereum flavored WebAssembly (Ewasm) is a collaborative effort to bring the earliest and largest smart contract platform, Ethereum, to the WebAssembly world. WasmEdge is a leading Ewasm implementation , and it is already being adopted by leading public blockchains. @WASI @Tensorflow@ConvolutionalNeuralNetworks WASI provides a design pattern for sandboxed WebAssembly programs to securely access native host functions. The WasmEdge Runtime extends the WASI model to support access to native Tensorflow libraries from WebAssembly programs . It provides the security, portability, and ease-of-use of WebAssembly and native speed for Tensorflow. Second State FaaS provides a Rust API to run Tensorflow-based MobileNet models at native speeds. In this article, we will use a MobileNet model trained from the ImageNet dataset as an example. MobileNet is a class of CNN models for computer vision applications. The most common application for MobileNet models is image classification. You can train (or retrain) a MobileNet model to recognize objects that are interesting to your application (e.g., to classify birds in a bird watching application). The MTCNN is a class of Multi-task Cascaded Convolutional Network models. They are very good at detection faces and facial features. You can train (or retrain) MTCNN models with your own faces dataset so that it can accurately detect faces for your application. Second State FaaS provides a Rust API to run Tensorflow-based MTCNN models at native speeds. In this article, we will use the original MTCNN model trained in the FaceNet dataset as an example \ud83d\udc46\ud83d\udc46\ud83d\udc46 \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 WebAssembly System Interface = WASI Convolutional Neural Networks = CNN Function as a Service = FaaS \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Secondstate research intro"},{"location":"public/blockchain/secondstate/secondstate-research-intro/#introducing","text":"For automakers, the runtime isolation reduces complexity in integration and operation. For parts makers, the virtualized runtime supports \u201cwrite once run on any car\u201d. Second State is developing a real-time, deterministic, and efficient runtime sandbox for automotive applications. It is completely open source and already used by leading auto suppliers. Rust could be 25x faster than Python for machine learning. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Introducing"},{"location":"public/blockchain/secondstate/secondstate-research-intro/#ssvm","text":"The Second State Functions is based on the Second State WebAssembly VM (SSVM). It is specifically optimized for server-side applications. SSVM is a high-performance WebAssembly runtime for server-side apps. It is safer and 10x faster than Docker. It supports OS access (WASI), AOT compiler , stateful apps, seamless integration with Node.js, and access to hardware (AI chips). Second State provides an open-source WebAssembly implementation (Second State Virtual Machine, or SSVM) that is specifically optimized for server side applications. It is Best in-class in performance. It is 1000x faster than Docker for cold starts.It starts and runs much faster than VM or container-based alternatives. It excels in compute intensive media, data, and edge AI apps. Seamlessly supports server application frameworks, such as the Node.js. You can build high performance Node.js apps with SSVM. Supports safe access to external resources, such as databases, message queues, and even new AI hardware Allows precise metering of computational resources for serverless apps.","title":"SSVM"},{"location":"public/blockchain/secondstate/secondstate-research-intro/#serverless","text":"@FaaS is one of the fastest growing areas of cloud computing. FaaS allows developers to focus on the code. Once the developer uploads the code, the FaaS takes care of deployment, service availability, and scalability. The developer only pays for resources the service uses, not reserved idle time. This approach, known as serverless computing, is the way to build inter-connected and microservice-based applications. The result are fast development turn around, easy deployment, high availability, infinite scalability, at low cost. However, traditional FaaS are based on microVM (eg Firecracker and gVisor) and application container (eg Docker) technologies. They are general computing platforms not optimized for software stacks. To boot an entire OS and then heavy-weight runtimes just to run a single function is very inefficient. Therefore, existing FaaS solutions suffer from issues such as slow cold start, slow runtime performance, bloated runtime, and time-based billing. They are not suitable for computationally intensive applications. High-level language VMs, such as WebAssembly , offer a combination of ease-of-use, runtime safety, and high performance. The WasmEdge Runtime is a WebAssembly VM that is designed for edge cloud and device applications. It is a great fit for computationally intensive FaaS applications such as edge AI, real-time data analytics, multimedia processing, as well as typical transactional functions that need to start in sub-millisecond and make a quick call to another web service. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Serverless"},{"location":"public/blockchain/secondstate/secondstate-research-intro/#features","text":"@WasmEdge WasmEdge is a lightweight, high-performance, and extensible WebAssembly runtime for cloud native, edge, and decentralized applications. It powers serverless apps, embedded functions, microservices, smart contracts, and IoT devices. Today\u2019s web apps often have statically generated front ends that use JavaScript to interact with APIs on the backend (ie, the Jamstack). The WasmEdge is ideally suited for running backend API services as serverless functions . It is fast, secure, low maintainence, cross-platform, and can be easily deployed on edge networks for high performance. WebAssembly is the de facto runtime for modern blockchain smart contracts. Ethereum flavored WebAssembly (Ewasm) is a collaborative effort to bring the earliest and largest smart contract platform, Ethereum, to the WebAssembly world. WasmEdge is a leading Ewasm implementation , and it is already being adopted by leading public blockchains. @WASI @Tensorflow@ConvolutionalNeuralNetworks WASI provides a design pattern for sandboxed WebAssembly programs to securely access native host functions. The WasmEdge Runtime extends the WASI model to support access to native Tensorflow libraries from WebAssembly programs . It provides the security, portability, and ease-of-use of WebAssembly and native speed for Tensorflow. Second State FaaS provides a Rust API to run Tensorflow-based MobileNet models at native speeds. In this article, we will use a MobileNet model trained from the ImageNet dataset as an example. MobileNet is a class of CNN models for computer vision applications. The most common application for MobileNet models is image classification. You can train (or retrain) a MobileNet model to recognize objects that are interesting to your application (e.g., to classify birds in a bird watching application). The MTCNN is a class of Multi-task Cascaded Convolutional Network models. They are very good at detection faces and facial features. You can train (or retrain) MTCNN models with your own faces dataset so that it can accurately detect faces for your application. Second State FaaS provides a Rust API to run Tensorflow-based MTCNN models at native speeds. In this article, we will use the original MTCNN model trained in the FaceNet dataset as an example \ud83d\udc46\ud83d\udc46\ud83d\udc46 \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"Features"},{"location":"public/blockchain/secondstate/secondstate-research-intro/#literature","text":"WebAssembly System Interface = WASI Convolutional Neural Networks = CNN Function as a Service = FaaS \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Literature"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/","tags":["smartcontract","ethereum_ecosystem","sample","github"],"text":"A guide to demoing the [[energy]] contract \u00b6 Prerequisites \u00b6 This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 16.04.2 LTS TestRPC, version 3.0.4 Truffle, version 3.2.1 Node.js, version 7.9.0 Running an [[Ethereum]] client Install dependencies \u00b6 Before the first run, dependencies need to be installed for the test scripts and the status viewer. cd scripts/ npm install cd scripts/status bower install Run a deterministic TestRPC session \u00b6 For demoing purposes, TestRPC is a good choice for a client, for a number of reasons. Firstly, TestRPC creates a new blockchain instance and transactions can be paid with tokens of the said blockchain. The creator of the TestRPC session gains access to the tokens for free and therefore transactions can be made without a cost. Secondly, by default, TestRPC is configured in such a way that there is no block time\u2014instead, blocks are created on demand, whenever transactions occur. This type of a configuration is well suited for quick testing and demoing. Finally, TestRPC can be run in deterministic mode. This means that a smart contract\u2019s address, for example, can be known already before deploying it in the blockchain. This makes it possible to reference the address in scripts made for testing or demoing purposes. testrpc -d Deploy the contract \u00b6 The smart contracts written in Solidity need to be compiled and deployed to the blockchain. This can be achieved by using a development environment for Ethereum called Truffle. A simple migration script needs to be created for Truffle, after which the contracts can be deployed using the following command: truffle migrate Run the issuer script that issues smart meter ownerships \u00b6 For the demo, a seller and a buyer of electricity are needed. Furthermore, the ownership of a smart meter needs to be assigned to both of these parties. In our demo, we utilize an approach where a master key holder has the power to establish ownerships to the system participants. We establish a master key holder of smart meters for the electricity marketplace and have the key holder assign ownership to the smart meters. cd scripts/ node issuer.js Open the status view in browser \u00b6 Without a graphical user interface, none of the process steps can be visually observed in any way. Therefore, a simple web-browser-based status viewer has been added to the demo appli cation. It shows the changes in the status of the different entities as a crude HTML table. The status viewer can be accessed by opening the web page index.html in any web browser. Open scripts/status/index.html in browser. Create sell offers \u00b6 For the purposes of the demo, the market should be populated with sell offers of energy. The script offer.js is used for this purpose. The script\u2019s optional command line parameter index can be used to create different pre-populated sell offers. Change the optional index argument to create different pre-populated offers. The default behavior is to choose the offer at index 0 so the index must be within range 0 to 9. When omitting the index parameter, the script defaults to using index 0. node offer [ <index> ] Accept offers as a buyer \u00b6 Any sell offers created earlier can be accepted by the buyer. The script acceptoffer.js can be used to do so. The optional index parameter of the script works similarly as the parameter earlier specified for the offer.js script and can be used to accept offers. For example, if an offer was created using the command node offer 4, then running the command node acceptoffer 4 will make the buyer accept it. node acceptoffer [ <index> ] Send reports from smart meters (or wait until the report deadline) \u00b6 Once an offer has been created and accepted, and the scheduled transfer of electricity is due, both the seller\u2019s and the buyer\u2019s smart meters are expected to report on the successfulness of the transfer. The Ethereum transactions submitting these reports can be created using the scripts sellerreport.js and buyerreport.js. The optional index parameter can be used to refer to different sell offers exactly the same way as in the scripts described earlier. Both scripts, sellerreport.js and buyerreport.js need to be run in order to move an instance of electricity transfer to its next state in the smart contract. The reports have a deadline before which they need to be submitted. According to the deadline, the reports must be submitted and written into the blockchain no later than 30 minutes after the transfer is completed. In the case a transacting party fails to report within the allocated time frame, the smart contract will assume the worst possible economic outcome for the abstinent party. node sellerreport [ <index> ] node buyerreport [ <index> ] Withdraw money \u00b6 Once both smart meters have submitted their reports (or the deadline has expired), the assets stored in the contract can be withdrawn. The withdrawal can be initiated by anyone, in which case the assets are sent to their rightful owner, as determined by the logic of the smart contract. The script withdraw.js can be used to execute the withdrawal. The optional index parameter can be used to refer to different instances of electricity transfer. node withdraw [ <index> ] A part of this project was got from an article Smart Contracts \u00b6 The logic of the electricity market smart contract is defined in the Solidity file ElectricityMarket.sol. The contract defines the public methods for creating sell offers, accepting them, sending smart meter reports and withdrawing assets. GUI \u00b6 The status viewer is a web page which is useful for observing changes in the blockchain while running the demo. It shows the status of all the created sell offers and the account balances of the buyer, the seller and the electricity market smart contract. The status viewer can be run by opening the file index.html in any web browser. Sourcecode \u00b6 Armanriazi-Github-Energy-Sample Project nodejs #metamask #rpc \u00b6 [[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"Arman Riazi"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#a-guide-to-demoing-the-energy-contract","text":"","title":"A guide to demoing the [[energy]] contract"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#prerequisites","text":"This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 16.04.2 LTS TestRPC, version 3.0.4 Truffle, version 3.2.1 Node.js, version 7.9.0 Running an [[Ethereum]] client","title":"Prerequisites"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#install-dependencies","text":"Before the first run, dependencies need to be installed for the test scripts and the status viewer. cd scripts/ npm install cd scripts/status bower install","title":"Install dependencies"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#run-a-deterministic-testrpc-session","text":"For demoing purposes, TestRPC is a good choice for a client, for a number of reasons. Firstly, TestRPC creates a new blockchain instance and transactions can be paid with tokens of the said blockchain. The creator of the TestRPC session gains access to the tokens for free and therefore transactions can be made without a cost. Secondly, by default, TestRPC is configured in such a way that there is no block time\u2014instead, blocks are created on demand, whenever transactions occur. This type of a configuration is well suited for quick testing and demoing. Finally, TestRPC can be run in deterministic mode. This means that a smart contract\u2019s address, for example, can be known already before deploying it in the blockchain. This makes it possible to reference the address in scripts made for testing or demoing purposes. testrpc -d","title":"Run a deterministic TestRPC session"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#deploy-the-contract","text":"The smart contracts written in Solidity need to be compiled and deployed to the blockchain. This can be achieved by using a development environment for Ethereum called Truffle. A simple migration script needs to be created for Truffle, after which the contracts can be deployed using the following command: truffle migrate","title":"Deploy the contract"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#run-the-issuer-script-that-issues-smart-meter-ownerships","text":"For the demo, a seller and a buyer of electricity are needed. Furthermore, the ownership of a smart meter needs to be assigned to both of these parties. In our demo, we utilize an approach where a master key holder has the power to establish ownerships to the system participants. We establish a master key holder of smart meters for the electricity marketplace and have the key holder assign ownership to the smart meters. cd scripts/ node issuer.js","title":"Run the issuer script that issues smart meter ownerships"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#open-the-status-view-in-browser","text":"Without a graphical user interface, none of the process steps can be visually observed in any way. Therefore, a simple web-browser-based status viewer has been added to the demo appli cation. It shows the changes in the status of the different entities as a crude HTML table. The status viewer can be accessed by opening the web page index.html in any web browser. Open scripts/status/index.html in browser.","title":"Open the status view in browser"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#create-sell-offers","text":"For the purposes of the demo, the market should be populated with sell offers of energy. The script offer.js is used for this purpose. The script\u2019s optional command line parameter index can be used to create different pre-populated sell offers. Change the optional index argument to create different pre-populated offers. The default behavior is to choose the offer at index 0 so the index must be within range 0 to 9. When omitting the index parameter, the script defaults to using index 0. node offer [ <index> ]","title":"Create sell offers"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#accept-offers-as-a-buyer","text":"Any sell offers created earlier can be accepted by the buyer. The script acceptoffer.js can be used to do so. The optional index parameter of the script works similarly as the parameter earlier specified for the offer.js script and can be used to accept offers. For example, if an offer was created using the command node offer 4, then running the command node acceptoffer 4 will make the buyer accept it. node acceptoffer [ <index> ]","title":"Accept offers as a buyer"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#send-reports-from-smart-meters-or-wait-until-the-report-deadline","text":"Once an offer has been created and accepted, and the scheduled transfer of electricity is due, both the seller\u2019s and the buyer\u2019s smart meters are expected to report on the successfulness of the transfer. The Ethereum transactions submitting these reports can be created using the scripts sellerreport.js and buyerreport.js. The optional index parameter can be used to refer to different sell offers exactly the same way as in the scripts described earlier. Both scripts, sellerreport.js and buyerreport.js need to be run in order to move an instance of electricity transfer to its next state in the smart contract. The reports have a deadline before which they need to be submitted. According to the deadline, the reports must be submitted and written into the blockchain no later than 30 minutes after the transfer is completed. In the case a transacting party fails to report within the allocated time frame, the smart contract will assume the worst possible economic outcome for the abstinent party. node sellerreport [ <index> ] node buyerreport [ <index> ]","title":"Send reports from smart meters (or wait until the report deadline)"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#withdraw-money","text":"Once both smart meters have submitted their reports (or the deadline has expired), the assets stored in the contract can be withdrawn. The withdrawal can be initiated by anyone, in which case the assets are sent to their rightful owner, as determined by the logic of the smart contract. The script withdraw.js can be used to execute the withdrawal. The optional index parameter can be used to refer to different instances of electricity transfer. node withdraw [ <index> ] A part of this project was got from an article","title":"Withdraw money"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#smart-contracts","text":"The logic of the electricity market smart contract is defined in the Solidity file ElectricityMarket.sol. The contract defines the public methods for creating sell offers, accepting them, sending smart meter reports and withdrawing assets.","title":"Smart Contracts"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#gui","text":"The status viewer is a web page which is useful for observing changes in the blockchain while running the demo. It shows the status of all the created sell offers and the account balances of the buyer, the seller and the electricity market smart contract. The status viewer can be run by opening the file index.html in any web browser.","title":"GUI"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#sourcecode","text":"Armanriazi-Github-Energy-Sample Project","title":"Sourcecode"},{"location":"public/blockchain/solidity/smart-contract-marketplace-in-energy/#nodejs-metamask-rpc","text":"[[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"nodejs #metamask #rpc"},{"location":"public/blockchain/solidity/smart-contract-real-estate/","tags":["smartcontract","ethereum_ecosystem","sample","github"],"text":"A guide to demoing the [[real-estate]] contract \u00b6 Prerequisites \u00b6 This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 16.04.2 LTS Test[[RPC]], version 3.0.4 Truffle, version 3.2.1 Node.js, version 7.9.0 Running an [[Ethereum]] client Run a deterministic TestRPC session \u00b6 At first, an Ethereum client needs to be run testrpc -d Deploy the contract \u00b6 For demoing purposes, Test[[RPC]] is a good choice for a client, for a number of reasons. First ly, TestRPC creates a new blockchain instance and transactions can be paid with tokens of the said blockchain. The creator of the TestRPC session gains access to the tokens for free and therefore transactions can be made without a cost. Secondly, by default, TestRPC is configured in such a way that there is no block time\u2014instead, blocks are created on demand, whenever transactions occur. This type of a configuration is well suited for quick testing and demoing. Finally, TestRPC can be run in deterministic mode. This means that a smart contract\u2019s address, for example, can be known already before deploying it in the blockchain. This makes it possi ble to reference the address in scripts made for testing or demoing purposes. Deploying the smart contracts The smart contracts written in Solidity need to be compiled and deployed to the blockchain. This can be achieved by using a development environment for Ethereum called Truffle. A sim ple migration script needs to be created for Truffle, after which the contracts can be deployed using the following command: truffle migrate Open the status view in browser \u00b6 Without a graphical user interface, none of the process steps can be visually observed in any way. Therefore, a simple web-browser-based status viewer has been added to the demo application. It shows the changes in the status of the different entities as a crude HTML table. The status viewer can be accessed by opening the web page index.html in any web browser. Open scripts/status/index.html in browser. Run the issuer script that creates real estates, owners and agents in the contract. \u00b6 Creating the assets and the agents, and establishing ownership For the demo, agents are needed in order to facilitate a workflow between them. Furthermore, for the purposes of facilitating the sale of a share in a housing association, the ownership of assets and documents needs to be assigned to these parties. In our demo, we utilize an approach where a master key holder has the power to establish ownerships to the system participants. We establish a master key holder that is allowed to create owners for shares of stock, property agents and shares of stock in housing companies in the application. By running the script 0-issuer.js, we create a number of owners, agents and a number of shares of stock, and we assign the first owner to each created share of stock. cd scripts/ node 0 -issuer Initiate the sale of a real estate \u00b6 The process of selling a share of stock in a housing company usually starts with the seller contacting a property agent or agents for a listing offer. In the case of our demo application, the seller can announce a solicitation for listing offers by initiating a transaction in the smart contract designed to facilitate the workflow. For the purposes of the demo, the smart contract should therefore be populated with at least one request for listing offers. The script 1-initiateSale.js is used for this purpose node 1 -initiateSale Open IPFS web user interface \u00b6 Uploading documents to the IPFS Selling a share of stocks in a housing corporation requires a housing manager\u2019s certificate to be drafted.2 In order to draft the certificate, the building manager must check the validity of the required information by combining data from several public and private information pools, e.g. the title and the mortgage register of the National Land Survey, the trade register of the Finnish Patent and Registration Office, the housing company debt report of the creditor banks, the property management planning report of the housing company in question, and so on. In our demo application\u2019s workflow, the data required for the housing manager\u2019s certificate are requested from the information pools. The pools directly store the requested files in the Interplanetary File System (IPFS) and enter the associated hash values into the smart contract facilitating the workflow.3 To emulate this in our demo, the hashes of three random documents followed by the hash of the housing manager\u2019s certificate are recorded into the blockchain. We first run the following command to set up a local IPFS node. ipfs daemon We then open the web user interface at http://localhost:5001/webui in browser, drag-and-drop the information pool documents to the web user interface to upload them, and make note of the hash values of the documents Upload three documents related to the real estate \u00b6 Upload the document to IPFS by drag-and-drop in the web UI. See what the hash of the document is and announce it in the smart contract. As the next step, the command above is executed three times, each time replacing with the hash of a different document. We then run the following command once to upload the actual housing manager\u2019s certificate, compiled from the already uploaded documents: node 2 -uploadDocument <document hash> Upload confirmation letter \u00b6 As the next step, the command above is executed three times, each time replacing with the hash of a different document. We then run the following command once to up load the actual housing manager\u2019s certificate, compiled from the already uploaded documents: node 3 -uploadConfirmationLetter <document hash> Create offers to sell the property as a real estate agent/broker \u00b6 Create offers from real estate agents to sell the property When the housing manager\u2019s certificate has been received, the real estate can be sold. In the workflow of our demo application, real estate agents compete for who gets to sell the real estate by making offers to the seller of the real estate, specifying a fee (e.g. a percentual cut) that they\u2019ll sell it for. node 4 -makeAgentOffer <fee> As the owner of the real estate, accept one of the agent offers \u00b6 To emulate this market behavior, we run the command above any number of times, each time changing the fee variable to differentiate between offers. Accepting a real estate agents offer As the last step of the workflow modelled in our demo application, the seller of the share of stocks in a housing company chooses one of the listing offers made by one of the agents. This is emulated by executing the command below, along with the proper offer ID from the status viewer window. node 5 -chooseAgentOffer <offer id> Ganache Commands \u00b6 npm run ganache ganache-cli --accounts Smart Contract \u00b6 The logic of the smart contract facilitating the workflow is defined in the Solidity file RealEstateMarket.sol. The contract defines the public methods for initiating sales, creating housing manager certificates, as well as creating listing offers and accepting them. GUI \u00b6 The status viewer is a web page which is useful for observing changes in the blockchain while running the demo. It shows the status of the workflow process, with all the contributions to it by the various participants. The status viewer can be run by opening the file index.html in any web browser. Sourcecode \u00b6 Armanriazi-Github-RealState-Sample Project nodejs #truffle #ganache #eth #ethereum \u00b6 [[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"Arman Riazi"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#a-guide-to-demoing-the-real-estate-contract","text":"","title":"A guide to demoing the [[real-estate]] contract"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#prerequisites","text":"This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 16.04.2 LTS Test[[RPC]], version 3.0.4 Truffle, version 3.2.1 Node.js, version 7.9.0 Running an [[Ethereum]] client","title":"Prerequisites"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#run-a-deterministic-testrpc-session","text":"At first, an Ethereum client needs to be run testrpc -d","title":"Run a deterministic TestRPC session"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#deploy-the-contract","text":"For demoing purposes, Test[[RPC]] is a good choice for a client, for a number of reasons. First ly, TestRPC creates a new blockchain instance and transactions can be paid with tokens of the said blockchain. The creator of the TestRPC session gains access to the tokens for free and therefore transactions can be made without a cost. Secondly, by default, TestRPC is configured in such a way that there is no block time\u2014instead, blocks are created on demand, whenever transactions occur. This type of a configuration is well suited for quick testing and demoing. Finally, TestRPC can be run in deterministic mode. This means that a smart contract\u2019s address, for example, can be known already before deploying it in the blockchain. This makes it possi ble to reference the address in scripts made for testing or demoing purposes. Deploying the smart contracts The smart contracts written in Solidity need to be compiled and deployed to the blockchain. This can be achieved by using a development environment for Ethereum called Truffle. A sim ple migration script needs to be created for Truffle, after which the contracts can be deployed using the following command: truffle migrate","title":"Deploy the contract"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#open-the-status-view-in-browser","text":"Without a graphical user interface, none of the process steps can be visually observed in any way. Therefore, a simple web-browser-based status viewer has been added to the demo application. It shows the changes in the status of the different entities as a crude HTML table. The status viewer can be accessed by opening the web page index.html in any web browser. Open scripts/status/index.html in browser.","title":"Open the status view  in browser"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#run-the-issuer-script-that-creates-real-estates-owners-and-agents-in-the-contract","text":"Creating the assets and the agents, and establishing ownership For the demo, agents are needed in order to facilitate a workflow between them. Furthermore, for the purposes of facilitating the sale of a share in a housing association, the ownership of assets and documents needs to be assigned to these parties. In our demo, we utilize an approach where a master key holder has the power to establish ownerships to the system participants. We establish a master key holder that is allowed to create owners for shares of stock, property agents and shares of stock in housing companies in the application. By running the script 0-issuer.js, we create a number of owners, agents and a number of shares of stock, and we assign the first owner to each created share of stock. cd scripts/ node 0 -issuer","title":"Run the issuer script that creates real estates, owners and agents in the contract."},{"location":"public/blockchain/solidity/smart-contract-real-estate/#initiate-the-sale-of-a-real-estate","text":"The process of selling a share of stock in a housing company usually starts with the seller contacting a property agent or agents for a listing offer. In the case of our demo application, the seller can announce a solicitation for listing offers by initiating a transaction in the smart contract designed to facilitate the workflow. For the purposes of the demo, the smart contract should therefore be populated with at least one request for listing offers. The script 1-initiateSale.js is used for this purpose node 1 -initiateSale","title":"Initiate the sale of a real estate"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#open-ipfs-web-user-interface","text":"Uploading documents to the IPFS Selling a share of stocks in a housing corporation requires a housing manager\u2019s certificate to be drafted.2 In order to draft the certificate, the building manager must check the validity of the required information by combining data from several public and private information pools, e.g. the title and the mortgage register of the National Land Survey, the trade register of the Finnish Patent and Registration Office, the housing company debt report of the creditor banks, the property management planning report of the housing company in question, and so on. In our demo application\u2019s workflow, the data required for the housing manager\u2019s certificate are requested from the information pools. The pools directly store the requested files in the Interplanetary File System (IPFS) and enter the associated hash values into the smart contract facilitating the workflow.3 To emulate this in our demo, the hashes of three random documents followed by the hash of the housing manager\u2019s certificate are recorded into the blockchain. We first run the following command to set up a local IPFS node. ipfs daemon We then open the web user interface at http://localhost:5001/webui in browser, drag-and-drop the information pool documents to the web user interface to upload them, and make note of the hash values of the documents","title":"Open IPFS web user interface"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#upload-three-documents-related-to-the-real-estate","text":"Upload the document to IPFS by drag-and-drop in the web UI. See what the hash of the document is and announce it in the smart contract. As the next step, the command above is executed three times, each time replacing with the hash of a different document. We then run the following command once to upload the actual housing manager\u2019s certificate, compiled from the already uploaded documents: node 2 -uploadDocument <document hash>","title":"Upload three documents related to the real estate"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#upload-confirmation-letter","text":"As the next step, the command above is executed three times, each time replacing with the hash of a different document. We then run the following command once to up load the actual housing manager\u2019s certificate, compiled from the already uploaded documents: node 3 -uploadConfirmationLetter <document hash>","title":"Upload confirmation letter"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#create-offers-to-sell-the-property-as-a-real-estate-agentbroker","text":"Create offers from real estate agents to sell the property When the housing manager\u2019s certificate has been received, the real estate can be sold. In the workflow of our demo application, real estate agents compete for who gets to sell the real estate by making offers to the seller of the real estate, specifying a fee (e.g. a percentual cut) that they\u2019ll sell it for. node 4 -makeAgentOffer <fee>","title":"Create offers to sell the property as a real estate agent/broker"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#as-the-owner-of-the-real-estate-accept-one-of-the-agent-offers","text":"To emulate this market behavior, we run the command above any number of times, each time changing the fee variable to differentiate between offers. Accepting a real estate agents offer As the last step of the workflow modelled in our demo application, the seller of the share of stocks in a housing company chooses one of the listing offers made by one of the agents. This is emulated by executing the command below, along with the proper offer ID from the status viewer window. node 5 -chooseAgentOffer <offer id>","title":"As the owner of the real estate, accept one of the agent offers"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#ganache-commands","text":"npm run ganache ganache-cli --accounts","title":"Ganache Commands"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#smart-contract","text":"The logic of the smart contract facilitating the workflow is defined in the Solidity file RealEstateMarket.sol. The contract defines the public methods for initiating sales, creating housing manager certificates, as well as creating listing offers and accepting them.","title":"Smart Contract"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#gui","text":"The status viewer is a web page which is useful for observing changes in the blockchain while running the demo. It shows the status of the workflow process, with all the contributions to it by the various participants. The status viewer can be run by opening the file index.html in any web browser.","title":"GUI"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#sourcecode","text":"Armanriazi-Github-RealState-Sample Project","title":"Sourcecode"},{"location":"public/blockchain/solidity/smart-contract-real-estate/#nodejs-truffle-ganache-eth-ethereum","text":"[[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"nodejs #truffle #ganache #eth #ethereum"},{"location":"public/blockchain/solidity/smart-contract-sale/","tags":["smartcontract","ethereum_ecosystem","sample","github","faucet","kovan"],"text":"A guide to demoing the [[marketplace]] contract \u00b6 Prerequisites \u00b6 This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 18.04.0 LTS Node.js, version 8.9.0 MetaMask Running an [[Ethereum]] client Install dependencies \u00b6 Before the first run, dependencies need to be installed for the test scripts and the status viewer. cd scripts/ npm install Sale Contract \u00b6 Who Wants to build Smartcontracts and DApps. basic knowledge on Ethereum Eco-System and Solidity Language is necessary to understand These Concepts. I\u2019m writing this step-by-step guide and I wish it is the best way to explain what Smart Contracts are. So let's get started. E-commerce involves buying and selling of goods or services. So mainly it has buyers and sellers. The following example is made of ethereum blockchain using a point-to-point product trading system. Each user buys a product via their MetaMask, which leads to the deduction of the amount of ethereum in the buyer's wallet and at the same time is credited to the seller's account according to the smart contract deployed. This sample does not follow the internal network in the previous sample It has got an ethereum test network called Kovan. Truffle Commands \u00b6 npm run truffle-migrate-reset //gitter.im/kovan-testnet/faucet Sourcecode \u00b6 Armanriazi-Github-Marketplace-Sample Project nodejs #metamask \u00b6 [[Ethereum_Ecosystem_Research]] [[smart-contract]] [[Faucet]] [[Kovan]]","title":"Arman Riazi"},{"location":"public/blockchain/solidity/smart-contract-sale/#a-guide-to-demoing-the-marketplace-contract","text":"","title":"A guide to demoing the [[marketplace]] contract"},{"location":"public/blockchain/solidity/smart-contract-sale/#prerequisites","text":"This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 18.04.0 LTS Node.js, version 8.9.0 MetaMask Running an [[Ethereum]] client","title":"Prerequisites"},{"location":"public/blockchain/solidity/smart-contract-sale/#install-dependencies","text":"Before the first run, dependencies need to be installed for the test scripts and the status viewer. cd scripts/ npm install","title":"Install dependencies"},{"location":"public/blockchain/solidity/smart-contract-sale/#sale-contract","text":"Who Wants to build Smartcontracts and DApps. basic knowledge on Ethereum Eco-System and Solidity Language is necessary to understand These Concepts. I\u2019m writing this step-by-step guide and I wish it is the best way to explain what Smart Contracts are. So let's get started. E-commerce involves buying and selling of goods or services. So mainly it has buyers and sellers. The following example is made of ethereum blockchain using a point-to-point product trading system. Each user buys a product via their MetaMask, which leads to the deduction of the amount of ethereum in the buyer's wallet and at the same time is credited to the seller's account according to the smart contract deployed. This sample does not follow the internal network in the previous sample It has got an ethereum test network called Kovan.","title":"Sale Contract"},{"location":"public/blockchain/solidity/smart-contract-sale/#truffle-commands","text":"npm run truffle-migrate-reset //gitter.im/kovan-testnet/faucet","title":"Truffle Commands"},{"location":"public/blockchain/solidity/smart-contract-sale/#sourcecode","text":"Armanriazi-Github-Marketplace-Sample Project","title":"Sourcecode"},{"location":"public/blockchain/solidity/smart-contract-sale/#nodejs-metamask","text":"[[Ethereum_Ecosystem_Research]] [[smart-contract]] [[Faucet]] [[Kovan]]","title":"nodejs #metamask"},{"location":"public/blockchain/solidity/smart-contract-voting/","tags":["smartcontract","ethereum_ecosystem","sample","github"],"text":"A guide to the [[vote]] contract \u00b6 Prerequisites \u00b6 This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 18.04.0 LTS Node.js, version 8.9.0 Ganache MetaMask Running an [[Ethereum]] client Install dependencies \u00b6 Before the first run, dependencies need to be installed for the test scripts and the status viewer. cd scripts/ npm install Vote Contract \u00b6 There is no doubt that the revolutionary concept of the blockchain, which is the underlying technology behind the famous cryptocurrency Bitcoin and its successors, is triggering the start of a new era in the Internet and the online services. While most people focus only at cryptocurrencies; in fact, many administrative operations, fintech procedures, and everyday services that can only be done offline and/or in person, can now safely be moved to the Internet as online services. What makes it a powerful tool for digitalizing everyday services is the introduction of smart contracts, as in the Ethereum platform. Smart contracts are meaningful pieces of codes, to be integrated in the blockchain and executed as scheduled in every step of blockchain updates. E-voting on the other hand, is another trending, yet critical, topic related to the online services. The blockchain with the smart contracts, emerges as a good candidate to use in developments of safer, cheaper, more secure, more transparent, and easier-to-use e-voting systems. Ethereum and its network is one of the most suitable ones, due to its consistency, widespread use, and provision of smart contracts logic. An e-voting system must be secure, as it should not allow duplicated votes and be fully transparent, while protecting the privacy of the attendees. In this work, we have implemented and tested a sample e-voting application as a smart contract for the Ethereum network using the Ethereum wallets and the Solidity language. In the following example, demonstrated a voting app on ethereum network which per-account will be have a franchise. Features \u00b6 Transparency Distributed Private Test Network Integrate to the Metamask Ganache Commands \u00b6 npm run ganache ganache-cli --accounts Sourcecode \u00b6 Armanriazi-Github-Vote-Sample Project [[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"Arman Riazi"},{"location":"public/blockchain/solidity/smart-contract-voting/#a-guide-to-the-vote-contract","text":"","title":"A guide to the [[vote]] contract"},{"location":"public/blockchain/solidity/smart-contract-voting/#prerequisites","text":"This documentation has been intended for readers with a basic understanding on the Solidity smart contract programming language and on basic web developing tools. In order to run, the demo requires the following software to be installed. For verified functionality, the specified versions are recommended: Ubuntu 18.04.0 LTS Node.js, version 8.9.0 Ganache MetaMask Running an [[Ethereum]] client","title":"Prerequisites"},{"location":"public/blockchain/solidity/smart-contract-voting/#install-dependencies","text":"Before the first run, dependencies need to be installed for the test scripts and the status viewer. cd scripts/ npm install","title":"Install dependencies"},{"location":"public/blockchain/solidity/smart-contract-voting/#vote-contract","text":"There is no doubt that the revolutionary concept of the blockchain, which is the underlying technology behind the famous cryptocurrency Bitcoin and its successors, is triggering the start of a new era in the Internet and the online services. While most people focus only at cryptocurrencies; in fact, many administrative operations, fintech procedures, and everyday services that can only be done offline and/or in person, can now safely be moved to the Internet as online services. What makes it a powerful tool for digitalizing everyday services is the introduction of smart contracts, as in the Ethereum platform. Smart contracts are meaningful pieces of codes, to be integrated in the blockchain and executed as scheduled in every step of blockchain updates. E-voting on the other hand, is another trending, yet critical, topic related to the online services. The blockchain with the smart contracts, emerges as a good candidate to use in developments of safer, cheaper, more secure, more transparent, and easier-to-use e-voting systems. Ethereum and its network is one of the most suitable ones, due to its consistency, widespread use, and provision of smart contracts logic. An e-voting system must be secure, as it should not allow duplicated votes and be fully transparent, while protecting the privacy of the attendees. In this work, we have implemented and tested a sample e-voting application as a smart contract for the Ethereum network using the Ethereum wallets and the Solidity language. In the following example, demonstrated a voting app on ethereum network which per-account will be have a franchise.","title":"Vote Contract"},{"location":"public/blockchain/solidity/smart-contract-voting/#features","text":"Transparency Distributed Private Test Network Integrate to the Metamask","title":"Features"},{"location":"public/blockchain/solidity/smart-contract-voting/#ganache-commands","text":"npm run ganache ganache-cli --accounts","title":"Ganache Commands"},{"location":"public/blockchain/solidity/smart-contract-voting/#sourcecode","text":"Armanriazi-Github-Vote-Sample Project [[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"Sourcecode"},{"location":"public/blockchain/solidity/smart-contract/","tags":["smartcontract","ethereum_ecosystem","sample","github"],"text":"SmartContract \u00b6 Sample Projects \u00b6 Smart Contract-Sales-Energy Smart Contract-RealState Smart Contract-Sale Product Smart Contract-Vote [[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"SmartContract"},{"location":"public/blockchain/solidity/smart-contract/#smartcontract","text":"","title":"SmartContract"},{"location":"public/blockchain/solidity/smart-contract/#sample-projects","text":"Smart Contract-Sales-Energy Smart Contract-RealState Smart Contract-Sale Product Smart Contract-Vote [[Ethereum_Ecosystem_Research]] [[smart-contract]]","title":"Sample Projects"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/","tags":["kusama","polkadot_ecosystem","substrate","whitepapaer","polkadot"],"text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Part(1) \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb Introducing \u00b6 Polkadot unites a network of heterogeneous blockchain shards called parachains. These chains connect to and are secured by the Polkadot Relay Chain. They can also connect with external networks via bridges. Inbound-outboundTransaction \u00b6 @Ingress Dynamic information includes aspects of the transaction routing system that must have global agreement such as the parachain\u2019s ingress queue @Egress ... \ud83d\udc46\ud83d\udc46\ud83d\udc46 Parachain \u00b6 A first parachain implementation, likely to be based heavily on an existing blockchain protocol such as Bitcoin or (more likely, since it provides for rich transactions) Ethereum. This will include an integration with the proof-of-stake chain, allowing the parachain to gain consensus without its own internal consensus mechanism. Each parachain is defined in this registry. It is a relatively simple database-like construct and holds both static and dynamic information on each chain.Static information includes the chain index (a simple integer), along with the validation protocol identity. Each parachain brings with it the potential to grief validators with an over-burdensome validation algorithm. @zk-SNARKs A parachain utilising the properties of zk-SNARKs in order to ensure identities of transactors on it are kept private. A stretch goal dependent on the relay-chain. Relay-chains \u00b6 This is the final stage of the relay-chain, allowing the dynamic addition, removal and emergency pausing of parachains, the reporting of bad behaviour and includes implementation of the \\fisherman\" functionality Polkadot will be able to scale even further in the future with a planned feature known as nested relay chains, which will increase the number of shards that can be added to the network. Interchain \u00b6 (according to the logic of that chain) able to effect the dispatch of a transaction into a second parachain or, potentially , the relay-chain. Like external transactions on production blockchains, they are fully asynchronous and there is no intrinsic ability for them to return any kind of information back to its origin. @MessageProtocol The secret sauce of parachain interoperability lies in XCMP. XCMP enables parachains to share trusted logic, for example, transferring tokens between networks, without any additional trust assumptions! XCM is related to cross-chain in the same way that REST is related RESTful. XCM cannot actually send messages between systems. It is a format for how message transfer should be performed, similar to how RESTful services use REST as an architectural style of deployment. @Queue Interchain transactions are resolved using a simple queuing mechanism based around a Merkle tree to ensure fidelity. @Routing Posts Routing. Each parachain header includes an egress-trie-root; These posts are structured as several FIFO queues; the number of lists is known as the routing base and may be around 16. Notably, this number represents the quantity of parachains we can support without having to resort to multi-phase routing. Initially, Polkadot will support this kind of direct routing. Hyper-cube Routing. Hyper-cube routing is a mechanism which can mostly be build as an extension to the basic routing mechanism described above. Validators \u00b6 Validators may provide only a \\null\" block containing no external \"transactions\" data, but may run the risk of getting a reduced reward if they do. List of punishable validator misbehaviour includes: \u2022 Being part of a parachain group unable to provide consensus over the validity of a parachain block. \u2022 Actively signing for the validity of an invalid parachain block. \u2022 Inability to supply egress payloads previously voted as available. \u2022 Inactivity during the consensus process. \u2022 Validating relay-chain blocks on competing forks. Parachain validators will need to collect additional input data from the previous set of validators or the availability guarantors. Each participant (validator) has a set of information, in the form of signed-statements (\"votes\") from other participants, regarding each parachain block candidate as well the relaychain block candidate. The set of information is two pieces: Availability: does this validator have egress transaction-post information from this block so they are able to properly validate parachain candidates on the following block? They may vote either 1(known) or 0 (not yet known). Validity: is the parachain block valid and is all externally-referenced data (e.g. transactions). They may vote either 1 (valid), -1 (invalid) or 0 (not yet known). The basic rules for validity of the individual blocks (that allow the total set of validators as a whole to come to consensus on it becoming the unique parachain candidate to be referenced from the canonical relay): \u2022 must have at least two thirds of its validators voting positively and none voting negatively; \u2022 must have over one third validators voting positively to the availability of egress queue information. @BFT All validators must submit votes; votes may be resubmitted, qualified by the rules above. The progression of consensus may be modelled as multiple standard BFT consensus algorithms over each parachain happening in parallel. @Bonded-Validator It allows an account to register a desire to become a bonded validator (along with its requirements), to nominate to some identity, and for preexisting bonded validators to register their desire to exit this status. @Sealing Under a PoW chain,sealing is effectively a synonym for mining. In our case, it involves the collection of signed statements from validators over the validity, availability and canonicality of a particular relay-chain block and the parachain blocks that it represents. The relay-chain block may then be sealed and the process of sealing the next block begun. The sealing process takes place under a single consensus-generating mechanism addressing both the relay-chain\u2019s block and the parachains\u2019 blocks. @Improvments-for-sealing-relay-blocks Public Participation . One more possible direction is to enlist public participation in the process through a micro-complaints system. Similar to the fishermen, there could be external parties to police the validators who claim availability. Their task is to find one who appears unable to demonstrate such availability. Availability Guarantors . A (this may be represented by Validators in the basic form of the protocol). Availability guarantors will mostly aim to maintain a stable connection to each other and to validators. A final route would be to nominate a second set of bonded validators as \"availability guarantors\". Unlike normal validators, they would not switch between parachains but rather would form a single group to attest to the availability of all important interchain data. This has the advantage of relaxing the equivalence between participants and chains. Overweight Blocks. If a validator set is compromised, they may create and propose a block which though valid, takes an inordinate amount of time to execute and validate. This is a problem since a validator group could reasonably form a block which takes a very long time to execute unless some particular piece of information is already known allowing a short cut, e.g. factoring a large prime. If a single collator knew that information, then they would have a clear advantage in getting their own candidates accepted as long as the others were busy processing the old block. We call these blocks overweight. To ensure validators can predict when they may be proposing an overweight block, it may be sensible to require them to publish information on their own performance for each block. Collator Insurance. One issue remains for validators: unlike with PoW networks, to check a collator\u2019s block for validity, they must actually execute the transactions in it. Malicious collators can feed invalid or overweight blocks to validators causing them grief and exacting a potentially substantial opportunity cost. To mitigate this, we propose a simple strategy on the part of validators. Firstly, parachain block candidates sent to validators must be signed from a relay chain account with funds; if they are not, then the validator should drop it immediately. Collator Preferences. One important aspect of this system is to ensure that there is a healthy selection of collators creating the blocks in any given parachain. If a single collator dominated a parachain then some attacks become more feasible. Collators \u00b6 it is quite possible that this mechanism enables even very small stakeholders to contribute as a collator. This is the delivery of an alternative chain-specific collator functionality. It includes proof creation (for collators), parachain misbehaviour detection (for fishermen) and the validation function (for validators). It also includes any additional networking required to allow the two to discover and communicate. @zero-knowledge@gossip Validators work alongside a parachain gossip protocol with collators individuals who collate transactions into blocks and provide a noninteractive, zero-knowledge proof that the block constitutes a valid child of its parent (and taking any transaction fees for their trouble Fishermen \u00b6 The parties get a reward for reporting such activity; their term, \"fishermen\" stems from the unlikeliness of such a reward. Fishermen, as well as general relay-chain and parachain clients will generally aim to keep a connection open to a validator or guarantor. Queue \u00b6 These queues are administered on the relay-chain allowing parachains to determine each other\u2019s saturation status; this way a failed attempt to post a transaction to a stalled destination may be reported synchronously. (Though since no return path exists, if a secondary transaction failed for that reason.) Networking \u00b6 @overlay@devp2p @p2p solved around a few request and answer message types. While Ethereum made progress on current protocol offerings with the devp2p protocol, which allowed for many subprotocols to be multiplexed over a single peer connection and thus have the same peer overlay support many p2p protocols simultaneously.To ensure an efficient transport mechanism, a \"flat\" overlay network like Ethereum\u2019s devp2p. Polkadot are rather more substantial. Rather then a wholly uniform network, Polkadot has several types of participants each with different requirements over their peer makeup and several network \"avenues\" whose participants will tend to converse about particular data. This means a substantially more structured network overlay|and a protocol supporting that will likely be necessary. network participants into two sets (relay-chain, parachains) each of three subsets. Path to an Effective Network Protocol. Likely the most effective and reasonable development effort will focus on utilising a pre-existing protocol rather than rolling our own. Several peer-to-peer base protocols exist that we may use or augment including Ethereum\u2019s own devp2p, IPFS\u2019s libp2p and GNU\u2019s GNUnet. A full review of these protocols and their relevance for building a modular peer network supporting certain structural guarantees, dynamic peer steering and extensible sub-protocols is well beyond the scope of this document. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Parachain-Block \u00b6 @Candidate Such subsets of validators are required to provide a parachain block candidate which is guaranteed valid (on pain of bond confiscation). Transaction-forwarding-contract \u00b6 In short, we envision that transactions from Polkadot can be signed by validators and then fed into Ethereum where they can be interpreted and enacted by a transaction-forwarding contract. Break-in-contract \u00b6 Ethereum is able to host a \"break-in contract\" which can maintain the 144 signatories and be controlled by them. we can imagine a \"break-in\" contract within a parachain which allows a validator to be guaranteed payment in exchange for the provision of a particular volume of processing resources. These resources may be measured in something like gas, but could also be some entirely novel model such as subjective time-to-execute or a Bitcoin-like flat-fee model. Breakout-contract \u00b6 @Header we can imagine our Polkadot-side Ethereum interface to have some simple functions: to be able to accept a new header from the Ethereum network and validate the PoW, to be able to accept some proof that a particular log was emitted by the Ethereum-side breakout contract for a header of sufficient depth (and forward the corresponding message within Polkadot) and finally to be able to accept proofs that a previously accepted but not-yet-enacted header contains an invalid receipt root. Delivering a transaction from Bitcoin to Polkadot can in principle be done with a process similar to that for Ethereum; a \\break-out address\" controlled in some way by the Polkadot validators could receive transferred tokens (and data sent alongside them). Any tokens then owned in the \"break-out address\" would then, in principle, be controlled by those same validators for later dispersal Staking-Contract \u00b6 This contract maintains the validator set. It manages: \u2022 which accounts are currently validators; \u2022 which are available to become validators at short notice; \u2022 which accounts have placed stake nominating to a validator; \u2022 properties of each including staking volume, acceptable payout-rates and addresses and short term (session) identities. \ud83d\udc46\ud83d\udc46\ud83d\udc46 POS \u00b6 Proof-of-stake chain: Extending the consensus mechanism into proof-of stake territory; this module includes staking tokens, managing entry and exit from the validator pool, a market mechanism for determining validator rewards, finalising the approval-voting nomination mechanism and managing bond-confiscation and dismissal. It includes a substantial amount of research and prototyping prior to final development. NPOS \u00b6 @Stake-Token-Liquidity Keeping with our tenets, we elect for the simplest solution: not all tokens be staked . This would mean that some proportion (perhaps 20%) of tokens will forcibly remain liquid. Though this is imperfect from a security perspective , it is unlikely to make a fundamental difference in the security of the network; 80% of the reparations possible from bond confiscations would still be able to be made compared to the perfect case\" of 100% staking. sessions would happen regularly, perhaps as often as once per hour. @Nominate Nominating works through an approval-voting system.Each session, nominators\u2019 bonds are dispersed to be represented by one or more validators. POA \u00b6 Proof-of-authority consensus mechanism supporting rich validator statements and allowing multiple independent items to be agreed upon under a single series based upon subjective reception of the partial set of validator statements. The mechanism should allow the proof of misbehaviour for the dismissal of malicious validators but need not involve any staking mechanism. A substantial amount of research and prototyping will precede the development of this component POC \u00b6 An initial proof-of-concept would focus on placing the new validation algorithms into clients themselves, effectively requiring a hard fork of the protocol each time an additional class of chain were added. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Features \u00b6 @Forkless often taking months of work, and particularly contentious hard forks can break apart a community.Polkadot revolutionizes this process, enabling blockchains to upgrade themselves without the need to fork the chain. These forkless upgrades are enacted through Polkadot\u2019s transparent on-chain governance system. @runtime@substrate How can a blockchain network automatically upgrade? Substrate has a unique property where the runtime (state transition function) is stored within the blockchain state. This means nodes update themselves by default rather than through manual intervention. DAO \u00b6 @governance Initially, this will be a meta-protocol on the relay-chain for managing exceptional events such as hard-forks, soft-forks and protocol reparameterisation. It will include a modern structure to help manage conflict and prevent live-lock. Ultimately, this may become a full meta protocol layer able to enact changes normally reserved for hard-forks. Requires the relay chain. The registry is able to have parachains added only through full referendum voting; this could be managed internally but would more likely be placed in an external referendum contract in order to facilitate re-usage under more general governance components. The parameters to voting requirements (e.g. any quorum required, majority required) for registration of additional chains. two thirds supermajority to pass with more than one third of total system stake voting positively may be a sensible starting point. The removal of parachains altogether would come only after a referendum . Crowdloan \u00b6 @Slot If the slots cannot be filled, the lower bound could be repeatedly reduced by some factor in order to satisfy. @StakeHolder Essentially, the community of stakeholders will need to be incentivized to add child chains|either financially or through the desire to add featureful chains to the relay. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Fees \u00b6 @Negotiation-logic The transaction has an origin segment, providing the ability to identify a parachain, and an address which may be of arbitrary size. Unlike common current systems such as Bitcoin and Ethereum, interchain transactions do not come with any kind of payment\" of fee associated ; any such payment must be managed through negotiation logic on the source and destination parachains. Calling into another such chain would mean proxying through this bridge, which would provide the means of negotiating the value transfer between chains in order to pay for the computation resources required on the destination parachain. Gas \u00b6 cost of Ethereum confirming that an instruction was properly validated as coming from the Polkadot network would be no more than 300,000 gas|a mere 6% of the total block gas limit at 5.5M. then the cost to the network of maintaining this Ethereum-forwarding bridge would be around 540,000 gas per day or, at present gas prices, $45 per year. without gas, how does one parachain avoid another parachain from forcing it to do computation? While we can rely on transaction-post ingress queue buffers to prevent one chain from spamming another with transaction data, there is no equivalent mechanism provided by the protocol to prevent the spamming of transaction processing. Because of Substrate\u2019s modularity, gas is completely optional, and the introduction of off-chain features greatly reduces computation and storage costs. \u270d\ufe0f\u270d\ufe0f\u270d\ufe0f Signature \u00b6 One interesting, and cheaper, alternative to this multisignature contract model would be to use \u270d\ufe0fthreshold signatures in order to achieve the multi-lateral ownership semantics . While threshold signature schemes for ECDSA are computationally expensive, those for other schemes such as \u270d\ufe0f Schnorr signatures are very reasonable. Bitcoin is substantially more limited, with most clients accepting only multisignature transactions with a maximum of 3 parties SPV \u00b6 refers to Simplified Payment Verification in Bitcoin and describes a method for clients to verify transactions while keeping only a copy of all blocks headers of the longest PoW chain. \u2753\u2753\u2753 Appendix B. Frequently Asked Questions Is Polkadot designed to replace (insert blockchain here)? No. The goal of Polkadot is to provide a framework under which new blockchains may be created and to which existing blockchains can, if their communities desire, be transitioned. Is Polkadot designed to replace (insert crypto-currency here)? No. Polkadot tokens are neither intended nor designed to be used as a currency. They would make a bad currency: most will remain illiquid in the staking system and those that are liquid will face substantial fees for transfer of ownership. Rather, the purpose of Polkadot tokens is to be a direct representation of stake in the Polkadot network. What is the inflation rate for Polkadot staking tokens? The Polkadot staking token base expansion is unlimited. It rises and lowers according to market effects in order to target a particular proportion of tokens held under long-term bond in the validation process. Why does staking token ownership reflect stakeholding? This is a mechanism realised by the fact that they underpin the network\u2019s security. As such their value is tied to the overall economic value that Polkadot provides. Any actors who gain overall value from Polkadot operating correctly are incentivised to ensure it continues to do so. The best means of doing so is to take part in the validation process. This generally implies ownership of staking tokens. \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 external data referenced = transactions grief = wasting their resources a posted transaction = post XCMP = Cross-Chain Message Passing runtime = state transition function Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f If you liked this article or if it helped you please clap on this post to help the Read.Cash algorithm recommend it to more people. If you have any questions or remarks please feel free to leave a comment below. Alternatively, please feel free to send donations 0xde5D732a5AB44832E1c69b18be30834639F44A2c \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Polkadot]] [[Kusama]] [[Substrate]]","title":"Polka research intro"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#introducing","text":"Polkadot unites a network of heterogeneous blockchain shards called parachains. These chains connect to and are secured by the Polkadot Relay Chain. They can also connect with external networks via bridges.","title":"Introducing"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#inbound-outboundtransaction","text":"@Ingress Dynamic information includes aspects of the transaction routing system that must have global agreement such as the parachain\u2019s ingress queue @Egress ... \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Inbound-outboundTransaction"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#parachain","text":"A first parachain implementation, likely to be based heavily on an existing blockchain protocol such as Bitcoin or (more likely, since it provides for rich transactions) Ethereum. This will include an integration with the proof-of-stake chain, allowing the parachain to gain consensus without its own internal consensus mechanism. Each parachain is defined in this registry. It is a relatively simple database-like construct and holds both static and dynamic information on each chain.Static information includes the chain index (a simple integer), along with the validation protocol identity. Each parachain brings with it the potential to grief validators with an over-burdensome validation algorithm. @zk-SNARKs A parachain utilising the properties of zk-SNARKs in order to ensure identities of transactors on it are kept private. A stretch goal dependent on the relay-chain.","title":"Parachain"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#relay-chains","text":"This is the final stage of the relay-chain, allowing the dynamic addition, removal and emergency pausing of parachains, the reporting of bad behaviour and includes implementation of the \\fisherman\" functionality Polkadot will be able to scale even further in the future with a planned feature known as nested relay chains, which will increase the number of shards that can be added to the network.","title":"Relay-chains"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#interchain","text":"(according to the logic of that chain) able to effect the dispatch of a transaction into a second parachain or, potentially , the relay-chain. Like external transactions on production blockchains, they are fully asynchronous and there is no intrinsic ability for them to return any kind of information back to its origin. @MessageProtocol The secret sauce of parachain interoperability lies in XCMP. XCMP enables parachains to share trusted logic, for example, transferring tokens between networks, without any additional trust assumptions! XCM is related to cross-chain in the same way that REST is related RESTful. XCM cannot actually send messages between systems. It is a format for how message transfer should be performed, similar to how RESTful services use REST as an architectural style of deployment. @Queue Interchain transactions are resolved using a simple queuing mechanism based around a Merkle tree to ensure fidelity. @Routing Posts Routing. Each parachain header includes an egress-trie-root; These posts are structured as several FIFO queues; the number of lists is known as the routing base and may be around 16. Notably, this number represents the quantity of parachains we can support without having to resort to multi-phase routing. Initially, Polkadot will support this kind of direct routing. Hyper-cube Routing. Hyper-cube routing is a mechanism which can mostly be build as an extension to the basic routing mechanism described above.","title":"Interchain"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#validators","text":"Validators may provide only a \\null\" block containing no external \"transactions\" data, but may run the risk of getting a reduced reward if they do. List of punishable validator misbehaviour includes: \u2022 Being part of a parachain group unable to provide consensus over the validity of a parachain block. \u2022 Actively signing for the validity of an invalid parachain block. \u2022 Inability to supply egress payloads previously voted as available. \u2022 Inactivity during the consensus process. \u2022 Validating relay-chain blocks on competing forks. Parachain validators will need to collect additional input data from the previous set of validators or the availability guarantors. Each participant (validator) has a set of information, in the form of signed-statements (\"votes\") from other participants, regarding each parachain block candidate as well the relaychain block candidate. The set of information is two pieces: Availability: does this validator have egress transaction-post information from this block so they are able to properly validate parachain candidates on the following block? They may vote either 1(known) or 0 (not yet known). Validity: is the parachain block valid and is all externally-referenced data (e.g. transactions). They may vote either 1 (valid), -1 (invalid) or 0 (not yet known). The basic rules for validity of the individual blocks (that allow the total set of validators as a whole to come to consensus on it becoming the unique parachain candidate to be referenced from the canonical relay): \u2022 must have at least two thirds of its validators voting positively and none voting negatively; \u2022 must have over one third validators voting positively to the availability of egress queue information. @BFT All validators must submit votes; votes may be resubmitted, qualified by the rules above. The progression of consensus may be modelled as multiple standard BFT consensus algorithms over each parachain happening in parallel. @Bonded-Validator It allows an account to register a desire to become a bonded validator (along with its requirements), to nominate to some identity, and for preexisting bonded validators to register their desire to exit this status. @Sealing Under a PoW chain,sealing is effectively a synonym for mining. In our case, it involves the collection of signed statements from validators over the validity, availability and canonicality of a particular relay-chain block and the parachain blocks that it represents. The relay-chain block may then be sealed and the process of sealing the next block begun. The sealing process takes place under a single consensus-generating mechanism addressing both the relay-chain\u2019s block and the parachains\u2019 blocks. @Improvments-for-sealing-relay-blocks Public Participation . One more possible direction is to enlist public participation in the process through a micro-complaints system. Similar to the fishermen, there could be external parties to police the validators who claim availability. Their task is to find one who appears unable to demonstrate such availability. Availability Guarantors . A (this may be represented by Validators in the basic form of the protocol). Availability guarantors will mostly aim to maintain a stable connection to each other and to validators. A final route would be to nominate a second set of bonded validators as \"availability guarantors\". Unlike normal validators, they would not switch between parachains but rather would form a single group to attest to the availability of all important interchain data. This has the advantage of relaxing the equivalence between participants and chains. Overweight Blocks. If a validator set is compromised, they may create and propose a block which though valid, takes an inordinate amount of time to execute and validate. This is a problem since a validator group could reasonably form a block which takes a very long time to execute unless some particular piece of information is already known allowing a short cut, e.g. factoring a large prime. If a single collator knew that information, then they would have a clear advantage in getting their own candidates accepted as long as the others were busy processing the old block. We call these blocks overweight. To ensure validators can predict when they may be proposing an overweight block, it may be sensible to require them to publish information on their own performance for each block. Collator Insurance. One issue remains for validators: unlike with PoW networks, to check a collator\u2019s block for validity, they must actually execute the transactions in it. Malicious collators can feed invalid or overweight blocks to validators causing them grief and exacting a potentially substantial opportunity cost. To mitigate this, we propose a simple strategy on the part of validators. Firstly, parachain block candidates sent to validators must be signed from a relay chain account with funds; if they are not, then the validator should drop it immediately. Collator Preferences. One important aspect of this system is to ensure that there is a healthy selection of collators creating the blocks in any given parachain. If a single collator dominated a parachain then some attacks become more feasible.","title":"Validators"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#collators","text":"it is quite possible that this mechanism enables even very small stakeholders to contribute as a collator. This is the delivery of an alternative chain-specific collator functionality. It includes proof creation (for collators), parachain misbehaviour detection (for fishermen) and the validation function (for validators). It also includes any additional networking required to allow the two to discover and communicate. @zero-knowledge@gossip Validators work alongside a parachain gossip protocol with collators individuals who collate transactions into blocks and provide a noninteractive, zero-knowledge proof that the block constitutes a valid child of its parent (and taking any transaction fees for their trouble","title":"Collators"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#fishermen","text":"The parties get a reward for reporting such activity; their term, \"fishermen\" stems from the unlikeliness of such a reward. Fishermen, as well as general relay-chain and parachain clients will generally aim to keep a connection open to a validator or guarantor.","title":"Fishermen"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#queue","text":"These queues are administered on the relay-chain allowing parachains to determine each other\u2019s saturation status; this way a failed attempt to post a transaction to a stalled destination may be reported synchronously. (Though since no return path exists, if a secondary transaction failed for that reason.)","title":"Queue"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#networking","text":"@overlay@devp2p @p2p solved around a few request and answer message types. While Ethereum made progress on current protocol offerings with the devp2p protocol, which allowed for many subprotocols to be multiplexed over a single peer connection and thus have the same peer overlay support many p2p protocols simultaneously.To ensure an efficient transport mechanism, a \"flat\" overlay network like Ethereum\u2019s devp2p. Polkadot are rather more substantial. Rather then a wholly uniform network, Polkadot has several types of participants each with different requirements over their peer makeup and several network \"avenues\" whose participants will tend to converse about particular data. This means a substantially more structured network overlay|and a protocol supporting that will likely be necessary. network participants into two sets (relay-chain, parachains) each of three subsets. Path to an Effective Network Protocol. Likely the most effective and reasonable development effort will focus on utilising a pre-existing protocol rather than rolling our own. Several peer-to-peer base protocols exist that we may use or augment including Ethereum\u2019s own devp2p, IPFS\u2019s libp2p and GNU\u2019s GNUnet. A full review of these protocols and their relevance for building a modular peer network supporting certain structural guarantees, dynamic peer steering and extensible sub-protocols is well beyond the scope of this document. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Networking"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#parachain-block","text":"@Candidate Such subsets of validators are required to provide a parachain block candidate which is guaranteed valid (on pain of bond confiscation).","title":"Parachain-Block"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#transaction-forwarding-contract","text":"In short, we envision that transactions from Polkadot can be signed by validators and then fed into Ethereum where they can be interpreted and enacted by a transaction-forwarding contract.","title":"Transaction-forwarding-contract"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#break-in-contract","text":"Ethereum is able to host a \"break-in contract\" which can maintain the 144 signatories and be controlled by them. we can imagine a \"break-in\" contract within a parachain which allows a validator to be guaranteed payment in exchange for the provision of a particular volume of processing resources. These resources may be measured in something like gas, but could also be some entirely novel model such as subjective time-to-execute or a Bitcoin-like flat-fee model.","title":"Break-in-contract"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#breakout-contract","text":"@Header we can imagine our Polkadot-side Ethereum interface to have some simple functions: to be able to accept a new header from the Ethereum network and validate the PoW, to be able to accept some proof that a particular log was emitted by the Ethereum-side breakout contract for a header of sufficient depth (and forward the corresponding message within Polkadot) and finally to be able to accept proofs that a previously accepted but not-yet-enacted header contains an invalid receipt root. Delivering a transaction from Bitcoin to Polkadot can in principle be done with a process similar to that for Ethereum; a \\break-out address\" controlled in some way by the Polkadot validators could receive transferred tokens (and data sent alongside them). Any tokens then owned in the \"break-out address\" would then, in principle, be controlled by those same validators for later dispersal","title":"Breakout-contract"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#staking-contract","text":"This contract maintains the validator set. It manages: \u2022 which accounts are currently validators; \u2022 which are available to become validators at short notice; \u2022 which accounts have placed stake nominating to a validator; \u2022 properties of each including staking volume, acceptable payout-rates and addresses and short term (session) identities. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Staking-Contract"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#pos","text":"Proof-of-stake chain: Extending the consensus mechanism into proof-of stake territory; this module includes staking tokens, managing entry and exit from the validator pool, a market mechanism for determining validator rewards, finalising the approval-voting nomination mechanism and managing bond-confiscation and dismissal. It includes a substantial amount of research and prototyping prior to final development.","title":"POS"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#npos","text":"@Stake-Token-Liquidity Keeping with our tenets, we elect for the simplest solution: not all tokens be staked . This would mean that some proportion (perhaps 20%) of tokens will forcibly remain liquid. Though this is imperfect from a security perspective , it is unlikely to make a fundamental difference in the security of the network; 80% of the reparations possible from bond confiscations would still be able to be made compared to the perfect case\" of 100% staking. sessions would happen regularly, perhaps as often as once per hour. @Nominate Nominating works through an approval-voting system.Each session, nominators\u2019 bonds are dispersed to be represented by one or more validators.","title":"NPOS"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#poa","text":"Proof-of-authority consensus mechanism supporting rich validator statements and allowing multiple independent items to be agreed upon under a single series based upon subjective reception of the partial set of validator statements. The mechanism should allow the proof of misbehaviour for the dismissal of malicious validators but need not involve any staking mechanism. A substantial amount of research and prototyping will precede the development of this component","title":"POA"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#poc","text":"An initial proof-of-concept would focus on placing the new validation algorithms into clients themselves, effectively requiring a hard fork of the protocol each time an additional class of chain were added. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"POC"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#features","text":"@Forkless often taking months of work, and particularly contentious hard forks can break apart a community.Polkadot revolutionizes this process, enabling blockchains to upgrade themselves without the need to fork the chain. These forkless upgrades are enacted through Polkadot\u2019s transparent on-chain governance system. @runtime@substrate How can a blockchain network automatically upgrade? Substrate has a unique property where the runtime (state transition function) is stored within the blockchain state. This means nodes update themselves by default rather than through manual intervention.","title":"Features"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#dao","text":"@governance Initially, this will be a meta-protocol on the relay-chain for managing exceptional events such as hard-forks, soft-forks and protocol reparameterisation. It will include a modern structure to help manage conflict and prevent live-lock. Ultimately, this may become a full meta protocol layer able to enact changes normally reserved for hard-forks. Requires the relay chain. The registry is able to have parachains added only through full referendum voting; this could be managed internally but would more likely be placed in an external referendum contract in order to facilitate re-usage under more general governance components. The parameters to voting requirements (e.g. any quorum required, majority required) for registration of additional chains. two thirds supermajority to pass with more than one third of total system stake voting positively may be a sensible starting point. The removal of parachains altogether would come only after a referendum .","title":"DAO"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#crowdloan","text":"@Slot If the slots cannot be filled, the lower bound could be repeatedly reduced by some factor in order to satisfy. @StakeHolder Essentially, the community of stakeholders will need to be incentivized to add child chains|either financially or through the desire to add featureful chains to the relay. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Crowdloan"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#fees","text":"@Negotiation-logic The transaction has an origin segment, providing the ability to identify a parachain, and an address which may be of arbitrary size. Unlike common current systems such as Bitcoin and Ethereum, interchain transactions do not come with any kind of payment\" of fee associated ; any such payment must be managed through negotiation logic on the source and destination parachains. Calling into another such chain would mean proxying through this bridge, which would provide the means of negotiating the value transfer between chains in order to pay for the computation resources required on the destination parachain.","title":"Fees"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#gas","text":"cost of Ethereum confirming that an instruction was properly validated as coming from the Polkadot network would be no more than 300,000 gas|a mere 6% of the total block gas limit at 5.5M. then the cost to the network of maintaining this Ethereum-forwarding bridge would be around 540,000 gas per day or, at present gas prices, $45 per year. without gas, how does one parachain avoid another parachain from forcing it to do computation? While we can rely on transaction-post ingress queue buffers to prevent one chain from spamming another with transaction data, there is no equivalent mechanism provided by the protocol to prevent the spamming of transaction processing. Because of Substrate\u2019s modularity, gas is completely optional, and the introduction of off-chain features greatly reduces computation and storage costs. \u270d\ufe0f\u270d\ufe0f\u270d\ufe0f","title":"Gas"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#signature","text":"One interesting, and cheaper, alternative to this multisignature contract model would be to use \u270d\ufe0fthreshold signatures in order to achieve the multi-lateral ownership semantics . While threshold signature schemes for ECDSA are computationally expensive, those for other schemes such as \u270d\ufe0f Schnorr signatures are very reasonable. Bitcoin is substantially more limited, with most clients accepting only multisignature transactions with a maximum of 3 parties","title":"Signature"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#spv","text":"refers to Simplified Payment Verification in Bitcoin and describes a method for clients to verify transactions while keeping only a copy of all blocks headers of the longest PoW chain. \u2753\u2753\u2753 Appendix B. Frequently Asked Questions Is Polkadot designed to replace (insert blockchain here)? No. The goal of Polkadot is to provide a framework under which new blockchains may be created and to which existing blockchains can, if their communities desire, be transitioned. Is Polkadot designed to replace (insert crypto-currency here)? No. Polkadot tokens are neither intended nor designed to be used as a currency. They would make a bad currency: most will remain illiquid in the staking system and those that are liquid will face substantial fees for transfer of ownership. Rather, the purpose of Polkadot tokens is to be a direct representation of stake in the Polkadot network. What is the inflation rate for Polkadot staking tokens? The Polkadot staking token base expansion is unlimited. It rises and lowers according to market effects in order to target a particular proportion of tokens held under long-term bond in the validation process. Why does staking token ownership reflect stakeholding? This is a mechanism realised by the fact that they underpin the network\u2019s security. As such their value is tied to the overall economic value that Polkadot provides. Any actors who gain overall value from Polkadot operating correctly are incentivised to ensure it continues to do so. The best means of doing so is to take part in the validation process. This generally implies ownership of staking tokens. \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"SPV"},{"location":"public/blockchain/substrate-polka-kus/polka-research-intro/#literature","text":"external data referenced = transactions grief = wasting their resources a posted transaction = post XCMP = Cross-Chain Message Passing runtime = state transition function Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f If you liked this article or if it helped you please clap on this post to help the Read.Cash algorithm recommend it to more people. If you have any questions or remarks please feel free to leave a comment below. Alternatively, please feel free to send donations 0xde5D732a5AB44832E1c69b18be30834639F44A2c \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Polkadot]] [[Kusama]] [[Substrate]]","title":"Literature"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/","tags":["kusama","polkadot_ecosystem","substrate","polkadot"],"text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Part(2) \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb Introducing \u00b6 Polkadot and Substrate are not dependent on each other . Polkadot parachains can be built and maintained without ever touching Substrate. Substrate-based chains can exist as \u2018solo-chains\u2019 on an independent basis. Substrate is a fully modular blockchain framework that unleashes developers instead of forcing them to work within the confines of others' design decisions. Building a custom blockchain with Substrate offers greater freedom, flexibility, and optimization than building on top of a general-purpose smart-contract blockchain. you're not only free to choose your parameters such gas costs, governance, and consensus, you're also free to choose how your blockchain is deployed and if/how it should communicate with other networks. On my opinion for substrate future(DNA Replication) Limitations-Resolved \u00b6 For example, reusing the Ethereum codebase implies several limitations: having to place all of your business logic in terms of the EVM , being forced to use one of the two EVM languages , having all business logic dynamically metered, and being limited to Ethereum's transaction pool and lack of core upgradability. Without Substrate, there would be no easy way to build the blockchains that constitute the Polkadot ecosystem, and many builders would be forced into using a constrictive and uniform smart contract environment, limiting innovation and leaving Polkadot\u2019s remarkable heterogeneous sharding system unutilized. MainModules \u00b6 Frame \u00b6 business logic is provided through a modular system known as FRAME . is a set of modules and support libraries that simplify runtime development. In Substrate, these modules are called Pallets , each hosting domain-specific logic to include in a chain's runtime. FRAME also provides some helper modules to interact with important Substrate Primitives that provide the interface to the core client. FRAME not only provides a library of commonly used Substrate pallets but also a framework to build custom domain-specific pallets, giving runtime engineers the flexibility to define their runtime's behavior according to their target use case. The result is each pallet has its own discrete logic which can modify the features and functionality of your blockchain's state transition functions. For example, the Balances pallet, which is included in FRAME, defines cryptocurrency capabilities for your blockchain. More specifically, it defines: Storage items that keep track of the tokens a user owns. Functions that users can call to transfer and manage those tokens. APIs which allow other pallets to make use of those tokens and their capabilities. Hooks which allow other pallets to trigger function calls when a user's balance changes. A FRAME pallet is composed of 7 sections: Imports and Dependencies Declaration of the Pallet type Runtime Configuration Trait Runtime Storage Runtime Events Hooks Extrinsics An example is as follows: https://docs.substrate.io/v3/runtime/frame/ Pallets can be composed of as many sections as needed, giving runtime engineers a lot of flexibility on top of the basic skeletons depicted above. Refer to the Substrate Runtime Macros to learn more about adding functionality to a FRAME pallet. @System crate The FRAME System crate frame_system provides low-level types, storage, and functions for your blockchain. All other pallets depend on the System crate as the basis of your Substrate runtime. The System crate defines all the core types for the Substrate runtime , such as: *Origin *Block Number *Account Id *Hash * *Header *Version * *etc... *It also has a number of system-critical storage items, such as: *Account Nonce * *Block Hash *Block Number *Events *etc... Finally, it defines a number of low level functions which can access your blockchain storage, verify the origin of an extrinsic, and more. @Support crate@System crate The FRAME Support Crate frame_support is a collection of Rust macros, types, traits, and modules that simplify the development of Substrate pallets. The support macros expanded at compile time generate boilerplate code needed for the common structure of a pallet and save developers from writing them repeatedly. @Executive pallet@System crate The FRAME Executive Pallet frame_executive acts as the orchestration layer for the runtime. It dispatches incoming extrinsic calls to the respective pallets in the runtime. @Runtime@System crate The runtime library brings together all these components and pallets. It defines which pallets are included with your runtime and configures them to work together to compose your final runtime. When calls are made to your runtime, it uses the Executive pallet to dispatch those calls to the individual pallets. Pallet \u00b6 A developer may choose to have a pallet that enables smart contracts , or specifically not include pallets to keep their blockchain network lean and reduce attack vectors. For example, a developer may want to enable users to gain access to accounts even if they lose their private keys or other authentication mechanism. In this case, the developer would simply include the Recovery pallet. From the Oracle pallet to the Zero-Knowledge Verifier pallet and the Governance pallet, there are numerous existing pallets that can be integrated from the start or added later with forkless runtime upgrades. Developers can choose and even hot-swap components (pallets) such as the network stack, consensus, even the finality engine. Simply select from the growing list of pallets or create your own. When building with FRAME, the Substrate runtime is composed of several smaller components called pallets. A pallet contains a set of types, storage items, and functions that define a set of features and functionality for a runtime. @Prebuilt pallets https://docs.substrate.io/v3/runtime/frame/ Atomic Swap, Aura, Authority Discovery, Authorship, BABE , Balances, Benchmark, Collective, Contracts, Democracy, Elections Phragm\u00e9n, Elections, GRANDPA, Identity, I'm Online, Indices, Membership, Multisig, Nicks, Offences, Proxy, Recovery, Randomness Collective Flip, Scheduler, Scored Pool, Session, Society, Staking, Sudo, Timestamp, Transaction Payment, Treasury, Utility, Vesting Execution environment \u00b6 Off-chain features run in their own Wasm execution environment outside of the Substrate runtime. Conceptes \u00b6 Extrinsics \u00b6 An extrinsic is a piece of information that comes from outside the chain and is included in a block. Extrinsics fall into three categories: inherents, signed transactions, and unsigned transactions. Note that events are not extrinsics. The chain emits events for pieces of information that are intrinsic to the chain itself. For example, staking rewards are events, not extrinsics, because the reward is triggered by circumstances intrinsic to the chain's logic . The header contains a block height, parent hash, extrinsics root, state root, and digest. @Inherents Inherents are pieces of information that are not signed and only inserted into a block by the block author . They are not gossiped on the network or stored in the transaction queue. For example, the author of the block may insert a timestamp inherent into the block. There is no way to prove that a timestamp is true the way the desire to send funds is proved with a signature. Rather, validators accept or reject the block based on how reasonable the other validators find the timestamp, which may mean it is within some acceptable range of their own system clocks. @SignedTransactions Contain a signature of the account that issued the transaction and stands to pay a fee to have the transaction included on chain. Because the value of including signed transactions on-chain can be recognized prior to execution, they can be gossiped on the network between nodes with a low risk of spam. @UnsignedTransactions Since the transaction is not signed, there is nobody to pay a fee . Because of this, the transaction queue lacks economic logic to prevent spam. Unsigned transactions also lack a nonce, making replay protection difficult . A few transactions warrant using the unsigned variant, but they will require some form of spam prevention based on a custom implementation of signed extension, which can exist on unsigned transactions. An example of unsigned transactions in Substrate is the I'm Online heartbeat transaction sent by authorities . The transaction includes a signature from a Session key, which does not control funds and therefore cannot pay a fee. The transaction pool controls spam by checking if a heartbeat has already been submitted in the session. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Features \u00b6 Configurable \u00b6 @Feeless Unlike many legacy blockchain networks, which have hard limits for transaction throughput, Substrate is configurable. Transaction latency can be alleviated through configurable blocktimes, flexible transaction queues, and/or horizontal scaling. Transaction fees are configurable even to the point of feeless transactions. Development is faster since developers can use the tooling they prefer and select from a growing list of pallets instead of building from scratch. Upgrades happen faster thanks to forkless runtime upgrades. Light-client-first \u00b6 Another unique attribute of Substrate is its \u201clight-client-first\u201d design which can run directly in-browser and interact with a chain in a fully trustless way. Traditional approaches for syncing nodes require users to run dedicated hardware and wait a long time for their node to sync, or as a workaround, use a centralized service provider. Substrate light-clients sync lightning fast and drastically increase the decentralization of blockchain networks. Developers can relax, knowing their end users aren\u2019t reliant on a separate node infrastructure susceptible to downtime or hacking. Security \u00b6 Substrate chains can inherit security from Substrate-based relay chains like Polkadot or Kusama. Offchain \u00b6 Off-chain features run in their own execution environment outside of the Substrate runtime . This creates a separation of concerns and ensures block production is not impacted by long-running off-chain tasks. Although the primary benefit of off-chain features may be cost, there are many other benefits. For example, off-chain features can enable private data to be easily stored and retrievable off-chain to support record deletion and other needs of GDPR-compliant use cases and applications. Off-Chain Worker subsystems allows execution of long-running and possibly non-deterministic tasks (e.g. web requests, encryption/decryption and signing of data, random number generation, CPU-intensive computations, enumeration/aggregation of on-chain data, etc.) that could otherwise require longer than the block execution time. Off-chain workers have access to extended APIs for communicating with the external world: Ability to submit transactions (either signed or unsigned) to the chain to publish computation results. A fully-featured HTTP client allowing the worker to access and fetch data from external services. Access to the local keystore to sign and verify statements or transactions. An additional, local key-value database shared between all off-chain workers. A secure, local entropy source for random number generation. Access to the node's precise local time. The ability to sleep and resume work. Note that the results from off-chain workers are not subject to regular transaction verification. A verification mechanism should be implemented to determine what information gets into the chain. Off-Chain Storage offers storage that is local to a Substrate node that can be accessed both by off-chain workers (both read and write access) and on-chain logic (write access via off-chain indexing but not read access). This allows different worker threads to communicate to each other and to store user or node-specific data that does not require consensus over the whole network. It can also be read using RPC. Off-Chain Indexing allows the runtime, if opted-in, to write directly to the off-chain storage independently from OCWs. This serves as a local/temporary storage for on-chain logic and complement to its on-chain state. Nodes have to opt-in for persistency of this data via --enable-offchain-indexing flag when starting up the Substrate node. Unlike OCWs, which are not executed during initial blockchain synchronization, off-chain indexing is populating the storage every time a block is processed, so the data is always consistent and will be exactly the same for every node with indexing enabled. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Compatibility \u00b6 SRML \u00b6 SRML provides the basic building blocks for Substrate-based blockchains and includes all the essential functionality for a purpose-built blockchain. Among the various modules included with the SRML is the Contracts module, designed for executing \"native\" Wasm smart contracts on any Substrate-based chain. @Parity Moreover, Parity Technologies is a long-term supporter and builder in the Ethereum ecosystem, and we want to continue to provide support and infrastructure as we can to teams who have built on the Parity platform as we move from \u201cBlockchain 2.0\u201d to \u201c3.0\u201d. As part of this ongoing support, and to ensure that Substrate and Polkadot remain as inclusive as possible to the broader DApp community, we\u2019ve (Parity Team)built an EVM implementation for the SRML. Substrate EVM is an SRML module that provides an EVM execution environment for running unmodified Solidity code \u201cnatively\u201d on a Substrate-based blockchain. In essence, Substrate EVM will allow Substrate-based blockchains, including Polkadot parachains, to host a nearly-complete instance of the Ethereum state transition function on-chain, alongside any additional Substrate modules as required for custom functionality. Existing Solidity applications can be deployed and executed in this environment, and will gain the added benefits of being part of a Substrate-based blockchain. These benefits include the possibility of integration with other Substrate modules and of connecting to the broader Polkadot network, thereby enabling interoperability not only with other Polkadot parachains but, via bridges, with external blockchains as well, including Ethereum mainnet. Interoperability with other Substrate modules is possible thanks to custom-built \"pre-compiled contract\" APIs, which will allow all basic SRML functionality, including calls between modules, balance transfers, and interchain messaging. Differences between the Substrate EVM module and the Ethereum mainnet EVM include block hashes, which are fetched via the System module. In addition, the underlying EVM engine ( SputnikVM ) has been modified to make it modular, which will allow us to enable users to swap out and customize individual components (such as the gasometer) to their applications' specific needs. Substrate EVM is an SRML module that provides an EVM execution environment for running unmodified Solidity code \u201cnatively\u201d on a Substrate-based blockchain. In essence, Substrate EVM will allow Substrate-based blockchains, including Polkadot parachains, to host a nearly-complete instance of the Ethereum state transition function on-chain, alongside any additional Substrate modules as required for custom functionality. Existing Solidity applications can be deployed and executed in this environment, and will gain the added benefits of being part of a Substrate-based blockchain. Interoperability with other Substrate modules is possible thanks to custom-built \"pre-compiled contract\" APIs, which will allow all basic SRML functionality, including calls between modules, balance transfers, and interchain messaging. \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 hot-swap components = pallets Off-Chain Worker = OCW Remote procedure calls = RPC Framework for Runtime Aggregation of Modularized Entities = FRAME runtime = state transition function pot = The Treasury pallet provides a \"pot\" of funds The Sudo pallet allows for a single account = Sudo verifiable random function = VRF A verification mechanism =e.g. voting, averaging, checking sender signatures, or simply \"trusting\" Substrate Runtime Module Library = SRML Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Researcher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Polkadot]] [[Substrate]]","title":"Substrate framework research intro"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#introducing","text":"Polkadot and Substrate are not dependent on each other . Polkadot parachains can be built and maintained without ever touching Substrate. Substrate-based chains can exist as \u2018solo-chains\u2019 on an independent basis. Substrate is a fully modular blockchain framework that unleashes developers instead of forcing them to work within the confines of others' design decisions. Building a custom blockchain with Substrate offers greater freedom, flexibility, and optimization than building on top of a general-purpose smart-contract blockchain. you're not only free to choose your parameters such gas costs, governance, and consensus, you're also free to choose how your blockchain is deployed and if/how it should communicate with other networks. On my opinion for substrate future(DNA Replication)","title":"Introducing"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#limitations-resolved","text":"For example, reusing the Ethereum codebase implies several limitations: having to place all of your business logic in terms of the EVM , being forced to use one of the two EVM languages , having all business logic dynamically metered, and being limited to Ethereum's transaction pool and lack of core upgradability. Without Substrate, there would be no easy way to build the blockchains that constitute the Polkadot ecosystem, and many builders would be forced into using a constrictive and uniform smart contract environment, limiting innovation and leaving Polkadot\u2019s remarkable heterogeneous sharding system unutilized.","title":"Limitations-Resolved"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#mainmodules","text":"","title":"MainModules"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#frame","text":"business logic is provided through a modular system known as FRAME . is a set of modules and support libraries that simplify runtime development. In Substrate, these modules are called Pallets , each hosting domain-specific logic to include in a chain's runtime. FRAME also provides some helper modules to interact with important Substrate Primitives that provide the interface to the core client. FRAME not only provides a library of commonly used Substrate pallets but also a framework to build custom domain-specific pallets, giving runtime engineers the flexibility to define their runtime's behavior according to their target use case. The result is each pallet has its own discrete logic which can modify the features and functionality of your blockchain's state transition functions. For example, the Balances pallet, which is included in FRAME, defines cryptocurrency capabilities for your blockchain. More specifically, it defines: Storage items that keep track of the tokens a user owns. Functions that users can call to transfer and manage those tokens. APIs which allow other pallets to make use of those tokens and their capabilities. Hooks which allow other pallets to trigger function calls when a user's balance changes. A FRAME pallet is composed of 7 sections: Imports and Dependencies Declaration of the Pallet type Runtime Configuration Trait Runtime Storage Runtime Events Hooks Extrinsics An example is as follows: https://docs.substrate.io/v3/runtime/frame/ Pallets can be composed of as many sections as needed, giving runtime engineers a lot of flexibility on top of the basic skeletons depicted above. Refer to the Substrate Runtime Macros to learn more about adding functionality to a FRAME pallet. @System crate The FRAME System crate frame_system provides low-level types, storage, and functions for your blockchain. All other pallets depend on the System crate as the basis of your Substrate runtime. The System crate defines all the core types for the Substrate runtime , such as: *Origin *Block Number *Account Id *Hash * *Header *Version * *etc... *It also has a number of system-critical storage items, such as: *Account Nonce * *Block Hash *Block Number *Events *etc... Finally, it defines a number of low level functions which can access your blockchain storage, verify the origin of an extrinsic, and more. @Support crate@System crate The FRAME Support Crate frame_support is a collection of Rust macros, types, traits, and modules that simplify the development of Substrate pallets. The support macros expanded at compile time generate boilerplate code needed for the common structure of a pallet and save developers from writing them repeatedly. @Executive pallet@System crate The FRAME Executive Pallet frame_executive acts as the orchestration layer for the runtime. It dispatches incoming extrinsic calls to the respective pallets in the runtime. @Runtime@System crate The runtime library brings together all these components and pallets. It defines which pallets are included with your runtime and configures them to work together to compose your final runtime. When calls are made to your runtime, it uses the Executive pallet to dispatch those calls to the individual pallets.","title":"Frame"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#pallet","text":"A developer may choose to have a pallet that enables smart contracts , or specifically not include pallets to keep their blockchain network lean and reduce attack vectors. For example, a developer may want to enable users to gain access to accounts even if they lose their private keys or other authentication mechanism. In this case, the developer would simply include the Recovery pallet. From the Oracle pallet to the Zero-Knowledge Verifier pallet and the Governance pallet, there are numerous existing pallets that can be integrated from the start or added later with forkless runtime upgrades. Developers can choose and even hot-swap components (pallets) such as the network stack, consensus, even the finality engine. Simply select from the growing list of pallets or create your own. When building with FRAME, the Substrate runtime is composed of several smaller components called pallets. A pallet contains a set of types, storage items, and functions that define a set of features and functionality for a runtime. @Prebuilt pallets https://docs.substrate.io/v3/runtime/frame/ Atomic Swap, Aura, Authority Discovery, Authorship, BABE , Balances, Benchmark, Collective, Contracts, Democracy, Elections Phragm\u00e9n, Elections, GRANDPA, Identity, I'm Online, Indices, Membership, Multisig, Nicks, Offences, Proxy, Recovery, Randomness Collective Flip, Scheduler, Scored Pool, Session, Society, Staking, Sudo, Timestamp, Transaction Payment, Treasury, Utility, Vesting","title":"Pallet"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#execution-environment","text":"Off-chain features run in their own Wasm execution environment outside of the Substrate runtime.","title":"Execution environment"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#conceptes","text":"","title":"Conceptes"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#extrinsics","text":"An extrinsic is a piece of information that comes from outside the chain and is included in a block. Extrinsics fall into three categories: inherents, signed transactions, and unsigned transactions. Note that events are not extrinsics. The chain emits events for pieces of information that are intrinsic to the chain itself. For example, staking rewards are events, not extrinsics, because the reward is triggered by circumstances intrinsic to the chain's logic . The header contains a block height, parent hash, extrinsics root, state root, and digest. @Inherents Inherents are pieces of information that are not signed and only inserted into a block by the block author . They are not gossiped on the network or stored in the transaction queue. For example, the author of the block may insert a timestamp inherent into the block. There is no way to prove that a timestamp is true the way the desire to send funds is proved with a signature. Rather, validators accept or reject the block based on how reasonable the other validators find the timestamp, which may mean it is within some acceptable range of their own system clocks. @SignedTransactions Contain a signature of the account that issued the transaction and stands to pay a fee to have the transaction included on chain. Because the value of including signed transactions on-chain can be recognized prior to execution, they can be gossiped on the network between nodes with a low risk of spam. @UnsignedTransactions Since the transaction is not signed, there is nobody to pay a fee . Because of this, the transaction queue lacks economic logic to prevent spam. Unsigned transactions also lack a nonce, making replay protection difficult . A few transactions warrant using the unsigned variant, but they will require some form of spam prevention based on a custom implementation of signed extension, which can exist on unsigned transactions. An example of unsigned transactions in Substrate is the I'm Online heartbeat transaction sent by authorities . The transaction includes a signature from a Session key, which does not control funds and therefore cannot pay a fee. The transaction pool controls spam by checking if a heartbeat has already been submitted in the session. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Extrinsics"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#features","text":"","title":"Features"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#configurable","text":"@Feeless Unlike many legacy blockchain networks, which have hard limits for transaction throughput, Substrate is configurable. Transaction latency can be alleviated through configurable blocktimes, flexible transaction queues, and/or horizontal scaling. Transaction fees are configurable even to the point of feeless transactions. Development is faster since developers can use the tooling they prefer and select from a growing list of pallets instead of building from scratch. Upgrades happen faster thanks to forkless runtime upgrades.","title":"Configurable"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#light-client-first","text":"Another unique attribute of Substrate is its \u201clight-client-first\u201d design which can run directly in-browser and interact with a chain in a fully trustless way. Traditional approaches for syncing nodes require users to run dedicated hardware and wait a long time for their node to sync, or as a workaround, use a centralized service provider. Substrate light-clients sync lightning fast and drastically increase the decentralization of blockchain networks. Developers can relax, knowing their end users aren\u2019t reliant on a separate node infrastructure susceptible to downtime or hacking.","title":"Light-client-first"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#security","text":"Substrate chains can inherit security from Substrate-based relay chains like Polkadot or Kusama.","title":"Security"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#offchain","text":"Off-chain features run in their own execution environment outside of the Substrate runtime . This creates a separation of concerns and ensures block production is not impacted by long-running off-chain tasks. Although the primary benefit of off-chain features may be cost, there are many other benefits. For example, off-chain features can enable private data to be easily stored and retrievable off-chain to support record deletion and other needs of GDPR-compliant use cases and applications. Off-Chain Worker subsystems allows execution of long-running and possibly non-deterministic tasks (e.g. web requests, encryption/decryption and signing of data, random number generation, CPU-intensive computations, enumeration/aggregation of on-chain data, etc.) that could otherwise require longer than the block execution time. Off-chain workers have access to extended APIs for communicating with the external world: Ability to submit transactions (either signed or unsigned) to the chain to publish computation results. A fully-featured HTTP client allowing the worker to access and fetch data from external services. Access to the local keystore to sign and verify statements or transactions. An additional, local key-value database shared between all off-chain workers. A secure, local entropy source for random number generation. Access to the node's precise local time. The ability to sleep and resume work. Note that the results from off-chain workers are not subject to regular transaction verification. A verification mechanism should be implemented to determine what information gets into the chain. Off-Chain Storage offers storage that is local to a Substrate node that can be accessed both by off-chain workers (both read and write access) and on-chain logic (write access via off-chain indexing but not read access). This allows different worker threads to communicate to each other and to store user or node-specific data that does not require consensus over the whole network. It can also be read using RPC. Off-Chain Indexing allows the runtime, if opted-in, to write directly to the off-chain storage independently from OCWs. This serves as a local/temporary storage for on-chain logic and complement to its on-chain state. Nodes have to opt-in for persistency of this data via --enable-offchain-indexing flag when starting up the Substrate node. Unlike OCWs, which are not executed during initial blockchain synchronization, off-chain indexing is populating the storage every time a block is processed, so the data is always consistent and will be exactly the same for every node with indexing enabled. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Offchain"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#compatibility","text":"","title":"Compatibility"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#srml","text":"SRML provides the basic building blocks for Substrate-based blockchains and includes all the essential functionality for a purpose-built blockchain. Among the various modules included with the SRML is the Contracts module, designed for executing \"native\" Wasm smart contracts on any Substrate-based chain. @Parity Moreover, Parity Technologies is a long-term supporter and builder in the Ethereum ecosystem, and we want to continue to provide support and infrastructure as we can to teams who have built on the Parity platform as we move from \u201cBlockchain 2.0\u201d to \u201c3.0\u201d. As part of this ongoing support, and to ensure that Substrate and Polkadot remain as inclusive as possible to the broader DApp community, we\u2019ve (Parity Team)built an EVM implementation for the SRML. Substrate EVM is an SRML module that provides an EVM execution environment for running unmodified Solidity code \u201cnatively\u201d on a Substrate-based blockchain. In essence, Substrate EVM will allow Substrate-based blockchains, including Polkadot parachains, to host a nearly-complete instance of the Ethereum state transition function on-chain, alongside any additional Substrate modules as required for custom functionality. Existing Solidity applications can be deployed and executed in this environment, and will gain the added benefits of being part of a Substrate-based blockchain. These benefits include the possibility of integration with other Substrate modules and of connecting to the broader Polkadot network, thereby enabling interoperability not only with other Polkadot parachains but, via bridges, with external blockchains as well, including Ethereum mainnet. Interoperability with other Substrate modules is possible thanks to custom-built \"pre-compiled contract\" APIs, which will allow all basic SRML functionality, including calls between modules, balance transfers, and interchain messaging. Differences between the Substrate EVM module and the Ethereum mainnet EVM include block hashes, which are fetched via the System module. In addition, the underlying EVM engine ( SputnikVM ) has been modified to make it modular, which will allow us to enable users to swap out and customize individual components (such as the gasometer) to their applications' specific needs. Substrate EVM is an SRML module that provides an EVM execution environment for running unmodified Solidity code \u201cnatively\u201d on a Substrate-based blockchain. In essence, Substrate EVM will allow Substrate-based blockchains, including Polkadot parachains, to host a nearly-complete instance of the Ethereum state transition function on-chain, alongside any additional Substrate modules as required for custom functionality. Existing Solidity applications can be deployed and executed in this environment, and will gain the added benefits of being part of a Substrate-based blockchain. Interoperability with other Substrate modules is possible thanks to custom-built \"pre-compiled contract\" APIs, which will allow all basic SRML functionality, including calls between modules, balance transfers, and interchain messaging. \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"SRML"},{"location":"public/blockchain/substrate-polka-kus/substrate-framework-research-intro/#literature","text":"hot-swap components = pallets Off-Chain Worker = OCW Remote procedure calls = RPC Framework for Runtime Aggregation of Modularized Entities = FRAME runtime = state transition function pot = The Treasury pallet provides a \"pot\" of funds The Sudo pallet allows for a single account = Sudo verifiable random function = VRF A verification mechanism =e.g. voting, averaging, checking sender signatures, or simply \"trusting\" Substrate Runtime Module Library = SRML Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Researcher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Polkadot]] [[Substrate]]","title":"Literature"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/","tags":["kusama","polkadot_ecosystem","substrate","rust","node","rpc"],"text":"Walk-Through/Substrate/NodeSetup \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb Introducing \u00b6 substrate-node-template Create-your-first-substrate-chain Prerequisites \u00b6 Ubuntu 20.04, Docker 19-20, Ngnix, Nodejs 16.13.2, ReactJs, VirtualBox(Optional). installing \u00b6 Manifest for installing rust and build-essentials on ubuntu 20.04.03 rustup self uninstall apt-get update sudo add-apt-repository \"deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) main universe\" apt-get -u dist-upgrade apt install aptitude sudo aptitude install libc6=2.31-0ubuntu9 sudo aptitude install build-essential apt-get update sudo apt install -y cmake pkg-config libssl-dev git gcc build-essential clang libclang-dev curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y rustup toolchain install nightly --allow-downgrade --profile minimal --component clippy rustup default stable rustup update nightly rustup update stable rustup target add wasm32-unknown-unknown --toolchain nightly rustup component add rust-src --toolchain stable-x86_64-unknown-linux-gnu rustc --version source $HOME/.cargo/env No tested on me Fast Installation: Install all the required dependencies with a single command. (Be patient, this can take up to> 30 minutes) curl https://getsubstrate.io -sSf | bash -s -- --fast Finally step test: Cargo Getting Start \ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f:\ud83d\udc31\u200d\ud83d\udc64 linking_with_cc_failed_exit_code_1/build-essential-fails-because-of-unmet-dependencies \ud83d\udc46\ud83d\udc46\ud83d\udc46 Manifest for cargo and compiling #rustup component add --toolchain=nightly rust-src rustfmt rustup target add wasm32-unknown-unknown apt-get install llvm clang linux-headers-\"$(uname -r)\" apt install llvm clang cargo build --release cargo fix --allow-dirty#cargo fix --edition \u00b6 -lsb_release -a No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 20.04.3 LTS Release: 20.04 Codename: focal -docker --version Docker version 20.10.12, build e91ed57 -ldconfig --version ldconfig (Ubuntu GLIBC 2.31-0ubuntu9.2) 2.31 -cargo --version cargo 1.60.0-nightly (25fcb13 2022-02-01) -rustc --version rustc 1.60.0-nightly (f624427f8 2022-02-06) -rustup show Default host: x86_64-unknown-linux-gnu rustup home: /root/.rustup installed targets for active toolchain -------------------------------------- wasm32-unknown-unknown x86_64-unknown-linux-gnu active toolchain ---------------- nightly-x86_64-unknown-linux-gnu (default) rustc 1.60.0-nightly (f624427f8 2022-02-06) \ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f:\ud83d\udc31\u200d\ud83d\udc64 Error: failed to run custom build command for librocksdb-sys v6 \ud83d\udc46\ud83d\udc46\ud83d\udc46 Single-Node Development Chain \u00b6 This command will start the single-node development chain with persistent state: /substrate-node-template cargo build --release && ./target/release/node-template --ws-external --base-path ./my-chain-state --enable-offchain-indexing true --rpc-cors all --name \"Arman Riazi\" --pruning archive --prometheus-external --chain local --dev #(or --chain fir) ./target/release/node-template --dev Purge the development chain's state: ./target/release/node-template purge-chain --chain local --dev Start the development chain with detailed logging: RUST_LOG=debug RUST_BACKTRACE=1 ./target/release/node-template -lruntime=debug --dev \u270d\ufe0f\u270d\ufe0f\u270d\ufe0f After Running Node(Limited Lines): root@ubuntu:/home/substrate-node-template# ps -ef UID PID PPID C STIME TTY TIME CMD root 1 0 0 12:49 ? 00:00:02 /sbin/init splash root 2 0 0 12:49 ? 00:00:00 [kthreadd] root 3 2 0 12:49 ? 00:00:00 [rcu_gp] root 4 2 0 12:49 ? 00:00:00 [rcu_par_gp] root 6 2 0 12:49 ? 00:00:00 [kworker/0:0H-events_highpri] root 9 2 0 12:49 ? 00:00:00 [mm_percpu_wq] root 10 2 0 12:49 ? 00:00:00 [rcu_tasks_rude_] root 11 2 0 12:49 ? 00:00:00 [rcu_tasks_trace] root 12 2 0 12:49 ? 00:00:00 [ksoftirqd/0] root 13 2 0 12:49 ? 00:00:05 [rcu_sched] root 14 2 0 12:49 ? 00:00:00 [migration/0] root 15 2 0 12:49 ? 00:00:00 [idle_inject/0] root 16 2 0 12:49 ? 00:00:00 [cpuhp/0] root 17 2 0 12:49 ? 00:00:00 [cpuhp/1] root 18 2 0 12:49 ? 00:00:00 [idle_inject/1] root 19 2 0 12:49 ? 00:00:00 [migration/1] root 20 2 0 12:49 ? 00:00:00 [ksoftirqd/1] root 22 2 0 12:49 ? 00:00:00 [kworker/1:0H-events_highpri] root 23 2 0 12:49 ? 00:00:00 [cpuhp/2] root 24 2 0 12:49 ? 00:00:00 [idle_inject/2] root 25 2 0 12:49 ? 00:00:00 [migration/2] root 26 2 0 12:49 ? 00:00:00 [ksoftirqd/2] root 28 2 0 12:49 ? 00:00:00 [kworker/2:0H-events_highpri] root 29 2 0 12:49 ? 00:00:00 [kdevtmpfs] root 30 2 0 12:49 ? 00:00:00 [netns] root 31 2 0 12:49 ? 00:00:00 [inet_frag_wq] root 32 2 0 12:49 ? 00:00:00 [kauditd] root 33 2 0 12:49 ? 00:00:00 [khungtaskd] root 34 2 0 12:49 ? 00:00:00 [oom_reaper] root 35 2 0 12:49 ? 00:00:00 [writeback] root 36 2 0 12:49 ? 00:00:00 [kcompactd0] root 37 2 0 12:49 ? 00:00:00 [ksmd] root 38 2 0 12:49 ? 00:00:00 [khugepaged] root 86 2 0 12:49 ? 00:00:00 [kintegrityd] root 87 2 0 12:49 ? 00:00:00 [kblockd] root 88 2 0 12:49 ? 00:00:00 [blkcg_punt_bio] root 89 2 0 12:49 ? 00:00:00 [tpm_dev_wq] root 90 2 0 12:49 ? 00:00:00 [ata_sff] root 91 2 0 12:49 ? 00:00:00 [md] root 92 2 0 12:49 ? 00:00:00 [edac-poller] root 93 2 0 12:49 ? 00:00:00 [devfreq_wq] root 94 2 0 12:49 ? 00:00:00 [watchdogd] root 96 2 0 12:49 ? 00:00:00 [kworker/0:1H-kblockd] root 98 2 0 12:49 ? 00:00:17 [kswapd0] root 99 2 0 12:49 ? 00:00:00 [ecryptfs-kthrea] root 101 2 0 12:49 ? 00:00:00 [kthrotld] root 102 2 0 12:49 ? 00:00:00 [acpi_thermal_pm] root 103 2 0 12:49 ? 00:00:00 [scsi_eh_0] root 104 2 0 12:49 ? 00:00:00 [scsi_tmf_0] root 105 2 0 12:49 ? 00:00:00 [scsi_eh_1] root 106 2 0 12:49 ? 00:00:00 [scsi_tmf_1] root 108 2 0 12:49 ? 00:00:00 [vfio-irqfd-clea] root 111 2 0 12:49 ? 00:00:00 [ipv6_addrconf] root 120 2 0 12:49 ? 00:00:00 [kstrp] root 123 2 0 12:49 ? 00:00:00 [zswap-shrink] root 124 2 0 12:49 ? 00:00:00 [kworker/u7:0] root 129 2 0 12:49 ? 00:00:00 [charger_manager] root 153 2 0 12:49 ? 00:00:01 [kworker/1:1H-kblockd] root 178 2 0 12:49 ? 00:00:00 [scsi_eh_2] root 179 2 0 12:49 ? 00:00:00 [scsi_tmf_2] root 183 2 0 12:49 ? 00:00:01 [kworker/2:1H-kblockd] root 203 2 0 12:49 ? 00:00:00 [jbd2/sda5-8] root 204 2 0 12:49 ? 00:00:00 [ext4-rsv-conver] root 247 1 0 12:49 ? 00:00:00 /lib/systemd/systemd-journald root 279 1 0 12:49 ? 00:00:00 /lib/systemd/systemd-udevd root 283 2 0 12:49 ? 00:00:00 [loop0] root 343 2 0 12:49 ? 00:00:00 [iprt-VBoxWQueue] root 348 2 0 12:49 ? 00:00:00 [cryptd] root 367 2 0 12:49 ? 00:00:01 [irq/18-vmwgfx] root 371 2 0 12:49 ? 00:00:00 [ttm_swap] root 372 2 0 12:49 ? 00:00:00 [card0-crtc0] systemd+ 584 1 0 12:49 ? 00:00:01 /lib/systemd/systemd-resolved root 618 1 0 12:49 ? 00:00:00 /usr/lib/accountsservice/accounts-daemon root 619 1 0 12:49 ? 00:00:00 /usr/sbin/acpid avahi 622 1 0 12:49 ? 00:00:00 avahi-daemon: running [u2004zero.local] message+ 624 1 0 12:49 ? 00:00:03 /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only root 626 1 0 12:49 ? 00:00:24 /usr/sbin/NetworkManager --no-daemon root 636 1 0 12:49 ? 00:00:00 /usr/sbin/irqbalance --foreground root 639 1 0 12:49 ? 00:00:00 /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers root 643 1 0 12:49 ? 00:00:00 /usr/lib/policykit-1/polkitd --no-debug syslog 647 1 0 12:49 ? 00:00:00 /usr/sbin/rsyslogd -n -iNONE root 650 1 0 12:49 ? 00:00:02 /usr/lib/snapd/snapd root 651 1 0 12:49 ? 00:00:00 /usr/libexec/switcheroo-control root 658 1 0 12:49 ? 00:00:00 /lib/systemd/systemd-logind root 659 1 0 12:49 ? 00:00:00 /usr/lib/udisks2/udisksd root 662 1 0 12:49 ? 00:00:00 /sbin/wpa_supplicant -u -s -O /run/wpa_supplicant avahi 673 622 0 12:49 ? 00:00:00 avahi-daemon: chroot helper root 695 1 0 12:49 ? 00:00:00 /usr/sbin/inetutils-inetd root 724 1 0 12:49 ? 00:00:00 /usr/sbin/cups-browsed root 731 1 0 12:49 ? 00:00:00 /usr/sbin/ModemManager --filter-policy=strict root 734 1 0 12:49 ? 00:00:00 /usr/sbin/cupsd -l root 743 1 0 12:49 ? 00:01:49 /opt/piavpn/bin/pia-daemon root 746 1 0 12:49 ? 00:00:00 /usr/bin/python3 /usr/share/unattended-upgrades/unattended-upgrade-shutdown --wait-for-signal root 747 1 0 12:49 ? 00:00:00 /usr/sbin/winbindd --foreground --no-process-group root 754 1 0 12:49 ? 00:00:12 /usr/bin/containerd root 805 1 0 12:49 ? 00:00:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process on; postgres 833 1 0 12:49 ? 00:00:00 /usr/lib/postgresql/14/bin/postgres -D /var/lib/postgresql/14/main -c config_file=/etc/postgresql/14/main/postgresql.conf root 844 2 0 12:49 ? 00:00:00 bpfilter_umh root 851 747 0 12:49 ? 00:00:00 winbindd: domain child [U2004ZERO] postgres 878 833 0 12:49 ? 00:00:00 postgres: 14/main: checkpointer postgres 879 833 0 12:49 ? 00:00:00 postgres: 14/main: background writer postgres 880 833 0 12:49 ? 00:00:00 postgres: 14/main: walwriter postgres 881 833 0 12:49 ? 00:00:00 postgres: 14/main: autovacuum launcher postgres 883 833 0 12:49 ? 00:00:00 postgres: 14/main: stats collector postgres 884 833 0 12:49 ? 00:00:00 postgres: 14/main: logical replication launcher root 2731 1 0 12:49 ? 00:00:03 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock root 2735 1 0 12:49 ? 00:00:00 /usr/lib/ipsec/starter --daemon charon --nofork whoopsie 2736 1 0 12:49 ? 00:00:00 /usr/bin/whoopsie -f root 2744 1 0 12:49 ? 00:00:00 /usr/sbin/cron -f kernoops 2756 1 0 12:49 ? 00:00:00 /usr/sbin/kerneloops --test kernoops 2764 1 0 12:49 ? 00:00:00 /usr/sbin/kerneloops root 2781 1 0 12:49 ? 00:00:00 /usr/sbin/xl2tpd root 2789 2735 0 12:49 ? 00:00:00 /usr/lib/ipsec/charon root 3249 2731 0 12:49 ? 00:00:00 /usr/bin/docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 3000 -container-ip 172.17.0.2 -container-port 3000 root 3263 2731 0 12:49 ? 00:00:00 /usr/bin/docker-proxy -proto tcp -host-ip :: -host-port 3000 -container-ip 172.17.0.2 -container-port 3000 root 3350 1 0 12:49 ? 00:00:00 /usr/bin/containerd-shim-runc-v2 -namespace moby -id b186d352f80cdecbe7d8ea5759074adbcc9a146f457ed333f4c3fe9cba8bd3f8 -address /run/containe root 3427 3350 0 12:49 pts/0 00:00:00 /bin/bash root 3535 1 0 12:49 ? 00:00:00 /usr/sbin/gdm3 root 3553 1 0 12:49 ? 00:00:02 /usr/sbin/VBoxService --pidfile /var/run/vboxadd-service.sh root 3566 3535 0 12:49 ? 00:00:00 gdm-session-worker [pam/gdm-autologin] u2004ze+ 3590 1 0 12:49 ? 00:00:00 /lib/systemd/systemd --user u2004ze+ 3591 3590 0 12:49 ? 00:00:00 (sd-pam) u2004ze+ 3596 3590 0 12:49 ? 00:00:00 /usr/bin/pulseaudio --daemonize=no --log-target=journal u2004ze+ 3598 3590 0 12:49 ? 00:00:00 /usr/libexec/tracker-miner-fs u2004ze+ 3601 1 0 12:49 ? 00:00:00 /usr/bin/gnome-keyring-daemon --daemonize --login u2004ze+ 3605 3566 0 12:49 tty2 00:00:00 /usr/lib/gdm3/gdm-x-session --run-script env GNOME_SHELL_SESSION_MODE=ubuntu /usr/bin/gnome-session --systemd --session=ubuntu u2004ze+ 3608 3590 0 12:49 ? 00:00:00 /usr/bin/dbus-daemon --session --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only u2004ze+ 3610 3605 0 12:49 tty2 00:01:42 /usr/lib/xorg/Xorg vt2 -displayfd 3 -auth /run/user/1000/gdm/Xauthority -background none -noreset -keeptty -verbose 3 root 3681 1 0 12:49 ? 00:00:00 /usr/lib/upower/upowerd u2004ze+ 3708 3605 0 12:49 tty2 00:00:00 /usr/libexec/gnome-session-binary --systemd --systemd --session=ubuntu u2004ze+ 3818 3708 0 12:49 ? 00:00:00 /usr/bin/ssh-agent /usr/bin/im-launch env GNOME_SHELL_SESSION_MODE=ubuntu /usr/bin/gnome-session --systemd --session=ubuntu u2004ze+ 3971 3590 0 12:49 ? 00:00:00 /usr/libexec/at-spi-bus-launcher u2004ze+ 3976 3971 0 12:49 ? 00:00:00 /usr/bin/dbus-daemon --config-file=/usr/share/defaults/at-spi2/accessibility.conf --nofork --print-address 3 u2004ze+ 3980 3590 0 12:49 ? 00:00:00 /usr/libexec/gnome-session-ctl --monitor u2004ze+ 3987 3590 0 12:49 ? 00:00:00 /usr/libexec/gnome-session-binary --systemd-service --session=ubuntu u2004ze+ 4001 3590 0 12:49 ? 00:01:32 /usr/bin/gnome-shell u2004ze+ 4032 3590 0 12:49 ? 00:00:00 /usr/libexec/at-spi2-registryd --use-gnome-session u2004ze+ 4037 4001 0 12:49 ? 00:00:00 ibus-daemon --panel disable --xim u2004ze+ 5205 5197 0 12:50 pts/0 00:00:00 bash u2004ze+ 5234 3987 0 12:50 ? 00:00:00 update-notifier root 5251 5205 0 12:50 pts/0 00:00:00 sudo su root 5257 5251 0 12:50 pts/0 00:00:00 su root 5258 5257 0 12:50 pts/0 00:00:00 bash root 5285 5258 0 12:52 pts/0 00:00:01 docker exec -it node-armanriazi /bin/bash root 5303 3350 0 12:52 pts/1 00:00:00 /bin/bash root 5403 5303 0 12:53 pts/1 00:00:00 node /opt/yarn-v1.22.15/bin/yarn.js start root 5420 5403 0 12:53 pts/1 00:00:01 /usr/local/bin/node /home/node/app/substrate-front-end-template/.yarn/releases/yarn-3.1.1.cjs start root 5431 5420 0 12:53 pts/1 00:00:00 /usr/local/bin/node /home/node/app/substrate-front-end-template/node_modules/react-app-rewired/bin/index.js start root 5438 5431 0 12:53 pts/1 00:00:16 /usr/local/bin/node /home/node/app/substrate-front-end-template/node_modules/react-app-rewired/scripts/start.js u2004ze+ 25088 4001 0 13:52 ? 00:01:26 /opt/piavpn/bin/pia-client root 27503 2 0 14:20 ? 00:00:01 [kworker/2:2-rcu_gp] root 82028 2 0 16:18 ? 00:00:01 [kworker/0:0-events] root 82133 2 0 16:18 ? 00:00:01 [kworker/1:2-events] root 82779 2 0 16:21 ? 00:00:00 [kworker/1:3-cgroup_destroy] root 83197 2 0 16:27 ? 00:00:00 [kworker/0:1-events] root 83559 2 0 16:37 ? 00:00:00 [kworker/u6:1-events_unbound] root 84293 2 0 17:03 ? 00:00:00 [kworker/u6:0-events_power_efficient] root 84338 2 0 17:13 ? 00:00:00 [kworker/u6:2-events_unbound] root 84348 34026 1 17:16 pts/1 00:00:01 ./target/release/node-template --dev --ws-external root 84704 75818 0 17:18 pts/3 00:00:00 ps -ef Multi-Node Local Testnet \u00b6 If you want to see the multi-node consensus algorithm in action, refer to our Start a Private Network tutorial. Purge the development chain's state: ./target/release/node-template purge-chain --base-path /tmp/alice --chain local ./target/release/node-template purge-chain --base-path /tmp/bob --chain local ./target/release/node-template \\ --base-path /tmp/alice \\ --chain local \\ --alice \\ --port 30333 \\ --ws-port 9945 \\ --rpc-port 9933 \\ --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' \\ --validator --node-key 0000000000000000000000000000000000000000000000000000000000000001 \\ subkey restore Alice ./target/release/node-template \\ --base-path /tmp/bob \\ --chain local \\ --bob \\ --port 30334 \\ --ws-port 9946 \\ --rpc-port 9934 \\ --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' \\ --validator \\ --bootnodes /ip4/192.168.8.110/tcp/30333/p2p/12D3KooWAcKNewtxbgjBFS7dQcEQLtMU79r19UjQiV7opadjoDzX The private network substrate was made by manifest: https://polkadot.js.org/apps/#/settings?rpc=ws://192.168.8.110:9945 Try introductory tutorial for creating your first runtime module \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 Error-Rust-Lang Rustup Start-a-private-network Substrate-based-chain Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f If you liked this article or if it helped you please clap on this post to help the Read.Cash algorithm recommend it to more people. If you have any questions or remarks please feel free to leave a comment below. Alternatively, please feel free to send donations 0xde5D732a5AB44832E1c69b18be30834639F44A2c \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Substrate setup research intro"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/#introducing","text":"substrate-node-template Create-your-first-substrate-chain","title":"Introducing"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/#prerequisites","text":"Ubuntu 20.04, Docker 19-20, Ngnix, Nodejs 16.13.2, ReactJs, VirtualBox(Optional).","title":"Prerequisites"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/#installing","text":"Manifest for installing rust and build-essentials on ubuntu 20.04.03 rustup self uninstall apt-get update sudo add-apt-repository \"deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) main universe\" apt-get -u dist-upgrade apt install aptitude sudo aptitude install libc6=2.31-0ubuntu9 sudo aptitude install build-essential apt-get update sudo apt install -y cmake pkg-config libssl-dev git gcc build-essential clang libclang-dev curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y rustup toolchain install nightly --allow-downgrade --profile minimal --component clippy rustup default stable rustup update nightly rustup update stable rustup target add wasm32-unknown-unknown --toolchain nightly rustup component add rust-src --toolchain stable-x86_64-unknown-linux-gnu rustc --version source $HOME/.cargo/env No tested on me Fast Installation: Install all the required dependencies with a single command. (Be patient, this can take up to> 30 minutes) curl https://getsubstrate.io -sSf | bash -s -- --fast Finally step test: Cargo Getting Start \ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f:\ud83d\udc31\u200d\ud83d\udc64 linking_with_cc_failed_exit_code_1/build-essential-fails-because-of-unmet-dependencies \ud83d\udc46\ud83d\udc46\ud83d\udc46 Manifest for cargo and compiling #rustup component add --toolchain=nightly rust-src rustfmt rustup target add wasm32-unknown-unknown apt-get install llvm clang linux-headers-\"$(uname -r)\" apt install llvm clang cargo build --release","title":"installing"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/#cargo-fix-allow-dirtycargo-fix-edition","text":"-lsb_release -a No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 20.04.3 LTS Release: 20.04 Codename: focal -docker --version Docker version 20.10.12, build e91ed57 -ldconfig --version ldconfig (Ubuntu GLIBC 2.31-0ubuntu9.2) 2.31 -cargo --version cargo 1.60.0-nightly (25fcb13 2022-02-01) -rustc --version rustc 1.60.0-nightly (f624427f8 2022-02-06) -rustup show Default host: x86_64-unknown-linux-gnu rustup home: /root/.rustup installed targets for active toolchain -------------------------------------- wasm32-unknown-unknown x86_64-unknown-linux-gnu active toolchain ---------------- nightly-x86_64-unknown-linux-gnu (default) rustc 1.60.0-nightly (f624427f8 2022-02-06) \ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f:\ud83d\udc31\u200d\ud83d\udc64 Error: failed to run custom build command for librocksdb-sys v6 \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"cargo fix --allow-dirty#cargo fix --edition"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/#single-node-development-chain","text":"This command will start the single-node development chain with persistent state: /substrate-node-template cargo build --release && ./target/release/node-template --ws-external --base-path ./my-chain-state --enable-offchain-indexing true --rpc-cors all --name \"Arman Riazi\" --pruning archive --prometheus-external --chain local --dev #(or --chain fir) ./target/release/node-template --dev Purge the development chain's state: ./target/release/node-template purge-chain --chain local --dev Start the development chain with detailed logging: RUST_LOG=debug RUST_BACKTRACE=1 ./target/release/node-template -lruntime=debug --dev \u270d\ufe0f\u270d\ufe0f\u270d\ufe0f After Running Node(Limited Lines): root@ubuntu:/home/substrate-node-template# ps -ef UID PID PPID C STIME TTY TIME CMD root 1 0 0 12:49 ? 00:00:02 /sbin/init splash root 2 0 0 12:49 ? 00:00:00 [kthreadd] root 3 2 0 12:49 ? 00:00:00 [rcu_gp] root 4 2 0 12:49 ? 00:00:00 [rcu_par_gp] root 6 2 0 12:49 ? 00:00:00 [kworker/0:0H-events_highpri] root 9 2 0 12:49 ? 00:00:00 [mm_percpu_wq] root 10 2 0 12:49 ? 00:00:00 [rcu_tasks_rude_] root 11 2 0 12:49 ? 00:00:00 [rcu_tasks_trace] root 12 2 0 12:49 ? 00:00:00 [ksoftirqd/0] root 13 2 0 12:49 ? 00:00:05 [rcu_sched] root 14 2 0 12:49 ? 00:00:00 [migration/0] root 15 2 0 12:49 ? 00:00:00 [idle_inject/0] root 16 2 0 12:49 ? 00:00:00 [cpuhp/0] root 17 2 0 12:49 ? 00:00:00 [cpuhp/1] root 18 2 0 12:49 ? 00:00:00 [idle_inject/1] root 19 2 0 12:49 ? 00:00:00 [migration/1] root 20 2 0 12:49 ? 00:00:00 [ksoftirqd/1] root 22 2 0 12:49 ? 00:00:00 [kworker/1:0H-events_highpri] root 23 2 0 12:49 ? 00:00:00 [cpuhp/2] root 24 2 0 12:49 ? 00:00:00 [idle_inject/2] root 25 2 0 12:49 ? 00:00:00 [migration/2] root 26 2 0 12:49 ? 00:00:00 [ksoftirqd/2] root 28 2 0 12:49 ? 00:00:00 [kworker/2:0H-events_highpri] root 29 2 0 12:49 ? 00:00:00 [kdevtmpfs] root 30 2 0 12:49 ? 00:00:00 [netns] root 31 2 0 12:49 ? 00:00:00 [inet_frag_wq] root 32 2 0 12:49 ? 00:00:00 [kauditd] root 33 2 0 12:49 ? 00:00:00 [khungtaskd] root 34 2 0 12:49 ? 00:00:00 [oom_reaper] root 35 2 0 12:49 ? 00:00:00 [writeback] root 36 2 0 12:49 ? 00:00:00 [kcompactd0] root 37 2 0 12:49 ? 00:00:00 [ksmd] root 38 2 0 12:49 ? 00:00:00 [khugepaged] root 86 2 0 12:49 ? 00:00:00 [kintegrityd] root 87 2 0 12:49 ? 00:00:00 [kblockd] root 88 2 0 12:49 ? 00:00:00 [blkcg_punt_bio] root 89 2 0 12:49 ? 00:00:00 [tpm_dev_wq] root 90 2 0 12:49 ? 00:00:00 [ata_sff] root 91 2 0 12:49 ? 00:00:00 [md] root 92 2 0 12:49 ? 00:00:00 [edac-poller] root 93 2 0 12:49 ? 00:00:00 [devfreq_wq] root 94 2 0 12:49 ? 00:00:00 [watchdogd] root 96 2 0 12:49 ? 00:00:00 [kworker/0:1H-kblockd] root 98 2 0 12:49 ? 00:00:17 [kswapd0] root 99 2 0 12:49 ? 00:00:00 [ecryptfs-kthrea] root 101 2 0 12:49 ? 00:00:00 [kthrotld] root 102 2 0 12:49 ? 00:00:00 [acpi_thermal_pm] root 103 2 0 12:49 ? 00:00:00 [scsi_eh_0] root 104 2 0 12:49 ? 00:00:00 [scsi_tmf_0] root 105 2 0 12:49 ? 00:00:00 [scsi_eh_1] root 106 2 0 12:49 ? 00:00:00 [scsi_tmf_1] root 108 2 0 12:49 ? 00:00:00 [vfio-irqfd-clea] root 111 2 0 12:49 ? 00:00:00 [ipv6_addrconf] root 120 2 0 12:49 ? 00:00:00 [kstrp] root 123 2 0 12:49 ? 00:00:00 [zswap-shrink] root 124 2 0 12:49 ? 00:00:00 [kworker/u7:0] root 129 2 0 12:49 ? 00:00:00 [charger_manager] root 153 2 0 12:49 ? 00:00:01 [kworker/1:1H-kblockd] root 178 2 0 12:49 ? 00:00:00 [scsi_eh_2] root 179 2 0 12:49 ? 00:00:00 [scsi_tmf_2] root 183 2 0 12:49 ? 00:00:01 [kworker/2:1H-kblockd] root 203 2 0 12:49 ? 00:00:00 [jbd2/sda5-8] root 204 2 0 12:49 ? 00:00:00 [ext4-rsv-conver] root 247 1 0 12:49 ? 00:00:00 /lib/systemd/systemd-journald root 279 1 0 12:49 ? 00:00:00 /lib/systemd/systemd-udevd root 283 2 0 12:49 ? 00:00:00 [loop0] root 343 2 0 12:49 ? 00:00:00 [iprt-VBoxWQueue] root 348 2 0 12:49 ? 00:00:00 [cryptd] root 367 2 0 12:49 ? 00:00:01 [irq/18-vmwgfx] root 371 2 0 12:49 ? 00:00:00 [ttm_swap] root 372 2 0 12:49 ? 00:00:00 [card0-crtc0] systemd+ 584 1 0 12:49 ? 00:00:01 /lib/systemd/systemd-resolved root 618 1 0 12:49 ? 00:00:00 /usr/lib/accountsservice/accounts-daemon root 619 1 0 12:49 ? 00:00:00 /usr/sbin/acpid avahi 622 1 0 12:49 ? 00:00:00 avahi-daemon: running [u2004zero.local] message+ 624 1 0 12:49 ? 00:00:03 /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only root 626 1 0 12:49 ? 00:00:24 /usr/sbin/NetworkManager --no-daemon root 636 1 0 12:49 ? 00:00:00 /usr/sbin/irqbalance --foreground root 639 1 0 12:49 ? 00:00:00 /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers root 643 1 0 12:49 ? 00:00:00 /usr/lib/policykit-1/polkitd --no-debug syslog 647 1 0 12:49 ? 00:00:00 /usr/sbin/rsyslogd -n -iNONE root 650 1 0 12:49 ? 00:00:02 /usr/lib/snapd/snapd root 651 1 0 12:49 ? 00:00:00 /usr/libexec/switcheroo-control root 658 1 0 12:49 ? 00:00:00 /lib/systemd/systemd-logind root 659 1 0 12:49 ? 00:00:00 /usr/lib/udisks2/udisksd root 662 1 0 12:49 ? 00:00:00 /sbin/wpa_supplicant -u -s -O /run/wpa_supplicant avahi 673 622 0 12:49 ? 00:00:00 avahi-daemon: chroot helper root 695 1 0 12:49 ? 00:00:00 /usr/sbin/inetutils-inetd root 724 1 0 12:49 ? 00:00:00 /usr/sbin/cups-browsed root 731 1 0 12:49 ? 00:00:00 /usr/sbin/ModemManager --filter-policy=strict root 734 1 0 12:49 ? 00:00:00 /usr/sbin/cupsd -l root 743 1 0 12:49 ? 00:01:49 /opt/piavpn/bin/pia-daemon root 746 1 0 12:49 ? 00:00:00 /usr/bin/python3 /usr/share/unattended-upgrades/unattended-upgrade-shutdown --wait-for-signal root 747 1 0 12:49 ? 00:00:00 /usr/sbin/winbindd --foreground --no-process-group root 754 1 0 12:49 ? 00:00:12 /usr/bin/containerd root 805 1 0 12:49 ? 00:00:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process on; postgres 833 1 0 12:49 ? 00:00:00 /usr/lib/postgresql/14/bin/postgres -D /var/lib/postgresql/14/main -c config_file=/etc/postgresql/14/main/postgresql.conf root 844 2 0 12:49 ? 00:00:00 bpfilter_umh root 851 747 0 12:49 ? 00:00:00 winbindd: domain child [U2004ZERO] postgres 878 833 0 12:49 ? 00:00:00 postgres: 14/main: checkpointer postgres 879 833 0 12:49 ? 00:00:00 postgres: 14/main: background writer postgres 880 833 0 12:49 ? 00:00:00 postgres: 14/main: walwriter postgres 881 833 0 12:49 ? 00:00:00 postgres: 14/main: autovacuum launcher postgres 883 833 0 12:49 ? 00:00:00 postgres: 14/main: stats collector postgres 884 833 0 12:49 ? 00:00:00 postgres: 14/main: logical replication launcher root 2731 1 0 12:49 ? 00:00:03 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock root 2735 1 0 12:49 ? 00:00:00 /usr/lib/ipsec/starter --daemon charon --nofork whoopsie 2736 1 0 12:49 ? 00:00:00 /usr/bin/whoopsie -f root 2744 1 0 12:49 ? 00:00:00 /usr/sbin/cron -f kernoops 2756 1 0 12:49 ? 00:00:00 /usr/sbin/kerneloops --test kernoops 2764 1 0 12:49 ? 00:00:00 /usr/sbin/kerneloops root 2781 1 0 12:49 ? 00:00:00 /usr/sbin/xl2tpd root 2789 2735 0 12:49 ? 00:00:00 /usr/lib/ipsec/charon root 3249 2731 0 12:49 ? 00:00:00 /usr/bin/docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 3000 -container-ip 172.17.0.2 -container-port 3000 root 3263 2731 0 12:49 ? 00:00:00 /usr/bin/docker-proxy -proto tcp -host-ip :: -host-port 3000 -container-ip 172.17.0.2 -container-port 3000 root 3350 1 0 12:49 ? 00:00:00 /usr/bin/containerd-shim-runc-v2 -namespace moby -id b186d352f80cdecbe7d8ea5759074adbcc9a146f457ed333f4c3fe9cba8bd3f8 -address /run/containe root 3427 3350 0 12:49 pts/0 00:00:00 /bin/bash root 3535 1 0 12:49 ? 00:00:00 /usr/sbin/gdm3 root 3553 1 0 12:49 ? 00:00:02 /usr/sbin/VBoxService --pidfile /var/run/vboxadd-service.sh root 3566 3535 0 12:49 ? 00:00:00 gdm-session-worker [pam/gdm-autologin] u2004ze+ 3590 1 0 12:49 ? 00:00:00 /lib/systemd/systemd --user u2004ze+ 3591 3590 0 12:49 ? 00:00:00 (sd-pam) u2004ze+ 3596 3590 0 12:49 ? 00:00:00 /usr/bin/pulseaudio --daemonize=no --log-target=journal u2004ze+ 3598 3590 0 12:49 ? 00:00:00 /usr/libexec/tracker-miner-fs u2004ze+ 3601 1 0 12:49 ? 00:00:00 /usr/bin/gnome-keyring-daemon --daemonize --login u2004ze+ 3605 3566 0 12:49 tty2 00:00:00 /usr/lib/gdm3/gdm-x-session --run-script env GNOME_SHELL_SESSION_MODE=ubuntu /usr/bin/gnome-session --systemd --session=ubuntu u2004ze+ 3608 3590 0 12:49 ? 00:00:00 /usr/bin/dbus-daemon --session --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only u2004ze+ 3610 3605 0 12:49 tty2 00:01:42 /usr/lib/xorg/Xorg vt2 -displayfd 3 -auth /run/user/1000/gdm/Xauthority -background none -noreset -keeptty -verbose 3 root 3681 1 0 12:49 ? 00:00:00 /usr/lib/upower/upowerd u2004ze+ 3708 3605 0 12:49 tty2 00:00:00 /usr/libexec/gnome-session-binary --systemd --systemd --session=ubuntu u2004ze+ 3818 3708 0 12:49 ? 00:00:00 /usr/bin/ssh-agent /usr/bin/im-launch env GNOME_SHELL_SESSION_MODE=ubuntu /usr/bin/gnome-session --systemd --session=ubuntu u2004ze+ 3971 3590 0 12:49 ? 00:00:00 /usr/libexec/at-spi-bus-launcher u2004ze+ 3976 3971 0 12:49 ? 00:00:00 /usr/bin/dbus-daemon --config-file=/usr/share/defaults/at-spi2/accessibility.conf --nofork --print-address 3 u2004ze+ 3980 3590 0 12:49 ? 00:00:00 /usr/libexec/gnome-session-ctl --monitor u2004ze+ 3987 3590 0 12:49 ? 00:00:00 /usr/libexec/gnome-session-binary --systemd-service --session=ubuntu u2004ze+ 4001 3590 0 12:49 ? 00:01:32 /usr/bin/gnome-shell u2004ze+ 4032 3590 0 12:49 ? 00:00:00 /usr/libexec/at-spi2-registryd --use-gnome-session u2004ze+ 4037 4001 0 12:49 ? 00:00:00 ibus-daemon --panel disable --xim u2004ze+ 5205 5197 0 12:50 pts/0 00:00:00 bash u2004ze+ 5234 3987 0 12:50 ? 00:00:00 update-notifier root 5251 5205 0 12:50 pts/0 00:00:00 sudo su root 5257 5251 0 12:50 pts/0 00:00:00 su root 5258 5257 0 12:50 pts/0 00:00:00 bash root 5285 5258 0 12:52 pts/0 00:00:01 docker exec -it node-armanriazi /bin/bash root 5303 3350 0 12:52 pts/1 00:00:00 /bin/bash root 5403 5303 0 12:53 pts/1 00:00:00 node /opt/yarn-v1.22.15/bin/yarn.js start root 5420 5403 0 12:53 pts/1 00:00:01 /usr/local/bin/node /home/node/app/substrate-front-end-template/.yarn/releases/yarn-3.1.1.cjs start root 5431 5420 0 12:53 pts/1 00:00:00 /usr/local/bin/node /home/node/app/substrate-front-end-template/node_modules/react-app-rewired/bin/index.js start root 5438 5431 0 12:53 pts/1 00:00:16 /usr/local/bin/node /home/node/app/substrate-front-end-template/node_modules/react-app-rewired/scripts/start.js u2004ze+ 25088 4001 0 13:52 ? 00:01:26 /opt/piavpn/bin/pia-client root 27503 2 0 14:20 ? 00:00:01 [kworker/2:2-rcu_gp] root 82028 2 0 16:18 ? 00:00:01 [kworker/0:0-events] root 82133 2 0 16:18 ? 00:00:01 [kworker/1:2-events] root 82779 2 0 16:21 ? 00:00:00 [kworker/1:3-cgroup_destroy] root 83197 2 0 16:27 ? 00:00:00 [kworker/0:1-events] root 83559 2 0 16:37 ? 00:00:00 [kworker/u6:1-events_unbound] root 84293 2 0 17:03 ? 00:00:00 [kworker/u6:0-events_power_efficient] root 84338 2 0 17:13 ? 00:00:00 [kworker/u6:2-events_unbound] root 84348 34026 1 17:16 pts/1 00:00:01 ./target/release/node-template --dev --ws-external root 84704 75818 0 17:18 pts/3 00:00:00 ps -ef","title":"Single-Node Development Chain"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/#multi-node-local-testnet","text":"If you want to see the multi-node consensus algorithm in action, refer to our Start a Private Network tutorial. Purge the development chain's state: ./target/release/node-template purge-chain --base-path /tmp/alice --chain local ./target/release/node-template purge-chain --base-path /tmp/bob --chain local ./target/release/node-template \\ --base-path /tmp/alice \\ --chain local \\ --alice \\ --port 30333 \\ --ws-port 9945 \\ --rpc-port 9933 \\ --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' \\ --validator --node-key 0000000000000000000000000000000000000000000000000000000000000001 \\ subkey restore Alice ./target/release/node-template \\ --base-path /tmp/bob \\ --chain local \\ --bob \\ --port 30334 \\ --ws-port 9946 \\ --rpc-port 9934 \\ --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' \\ --validator \\ --bootnodes /ip4/192.168.8.110/tcp/30333/p2p/12D3KooWAcKNewtxbgjBFS7dQcEQLtMU79r19UjQiV7opadjoDzX The private network substrate was made by manifest: https://polkadot.js.org/apps/#/settings?rpc=ws://192.168.8.110:9945 Try introductory tutorial for creating your first runtime module \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"Multi-Node Local Testnet"},{"location":"public/blockchain/substrate-polka-kus/substrate-setup-research-intro/#literature","text":"Error-Rust-Lang Rustup Start-a-private-network Substrate-based-chain Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f If you liked this article or if it helped you please clap on this post to help the Read.Cash algorithm recommend it to more people. If you have any questions or remarks please feel free to leave a comment below. Alternatively, please feel free to send donations 0xde5D732a5AB44832E1c69b18be30834639F44A2c \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Literature"},{"location":"public/blockchain/substrate-polka-kus/crowdloan/crowdloan-research-intro/","tags":["kusama","polkadot_ecosystem","substrate","crowdloan"],"text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/CrowdLoan(3) \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb Introducing \u00b6 Kusama is a canary network for Polkadot; Kusama is a proving ground for runtime upgrades, on-chain governance, and parachains . The network is a permissionless.Kusama does not support smart contracts natively.The Kusama network is Polkadot's experimental, community-focused R&D network. \ud83d\udc46\ud83d\udc46\ud83d\udc46 AccountThese are transfer and transfer_keep_alive. transfer will allow you to send KSM regardless of the consequence; transfer_keep_alive will not allow you to send an amount that would allow the sending account to be removed due to it going below the existential deposit. By default, Polkadot-JS Apps will use transfer_keep_alive, ensuring that the account you send from cannot drop below the existential deposit of 0.001666 KSM. it may be that you * do not want to keep this account alive (for example, because you are moving all of your funds to a different address). * Note: Even if the transfer fails due to a keep-alive check, the transaction fee will be deducted from the sending account if you attempt to transfer. Currently, Kusama does not use the Assets Pallet, so this is probably not the reason for your tokens having existing references. Currently, Kusama does not use the Recovery Pallet, so this is probably not the reason for your tokens having existing references. On Kusama, you can check if recovery has been set up by checking the recovery.recoverable(AccountId) chain state. This can be found under Developer > Chain state in PolkadotJS Apps. \ud83d\udc46\ud83d\udc46\ud83d\udc46 Parachain-Slots-Auction \u00b6 Polkadot Parachain Auctions do not offer a free and open environment as we have seen with ERC20 tokens, where the only thing needed was a white paper to deploy a smart contract on the Ethereum Blockchain. Such a feature allows for flexibility in the Polkadot ecosystem where every Parachain can create its own set of rules Basically, Polkadot Parachain Auctions are automated candle auctions (with some adjustments relevant to blockchain technology). It means that there is an opening period and an ending period. At any moment the winner can be chosen but we will only find it out at the end. It is not easy to get access to the Polkadot Relay Chain, and, currently, Parachains prefer to use crowdloan mechanism to collect funds to participate in Polkadot Parchain Auctions. To participate in the PolkadotParachain Auction and compete for a slot, prospective Parachains can bid in two ways: Parachains can bid their own DOT, through a single account * Parachains can use crowdloans to crowdsource DOT and bid it in the auctions * Users cannot participate in the Polkadot Parachain Auction directly. Users can only participate indirectly via crowd loans by contributing and locking DOT. Shared security and processing of transactions don\u2019t come for free. One of the ways to access them is to lease a slot on the Relay Chain. Projects compete to place the highest bid to get the slot. The first Polkadot Parachain Auction winner, via the process known as Crowdloan Campaign, raised 32.5 million DOT (around 1.3 billion USD at that time) to lease the slot for two years. A Parachain slot is a scarce resource. Given an increase in the number of Parachains, every few months new Parachains slots will be added. The Polkadot ultimate goal is to have 100 slots. crowdsale-VS-crowdloan \u00b6 crowdsale and crowdloan which makes sense because they sound the same. they are similar but there are some very key differences for example crowdsale I am sure you're familiar with it's kind of like platforms along the lines of kickstarter so you fund a project say creating a backpack that sings and lights up and then you give the funds to eventually get the product knowing that it's not created yet and then the creator uses those funds to make the product and then eventually you'll get that product in the mail so you are buying an actual thing and then you get that thing but you never get your original funds back where a crowdloan is very different so you're finding a specific function for example a parachain slot and it can only be used for that purpose it can't be used for anything else and then all funds that you contribute are delivered back to you once the lease is up so anything you contributed originally comes right back to you and it's not like you're putting funds down and you never see them again but you get something else in return and so parachain teams don't have control over the funds it's locked in the relay chain which prevents rug pull so all of a sudden funds can't just disappear or someone takes all of them it's pretty much impossible for that to happen and then if the first attempt to score slot isn't successful the crowd loan continues to try to score a parachain slot in the next round and then the next round until they do and all crowdloans do have an expiration date and that will all be specified in the outset so you should never be left in the dark you'll always have all the information you need so you can look forward to all the exciting things to come. the other thing to keep in mind is some projects have a rewards cap for their crowd loans so they can only give out so many rewards or they can only take so many contributions to the crowd loan or a certain amount so if you are set on wanting to participate it's always good to do it as soon as you feel ready um just in case you know there's a cut off or in case you can get bonus rewards. ParachainAcution-vs-eBayAcution \u00b6 a common misconception in the cryptocurrency space is that a para chain slot auction is something that you have to actively participate in kind of like an auction on ebay but that actually couldn't be further from the truth and all you have to do is contribute you don't have to bid and the crowdloan does on behalf of the project so there's no stress for you and then there's a difference between a regular auction and then a parachain slot option which is used to decide which pair of chains get to be connected to the relay chain so it's not like bidding on ebay for a handbag or something like that and then there's the concept of a candle auction which means in the ending period which is the last five days the auction can just end at any time and no one knows when this will be no single human knows and it's completely automated and a mystery to everyone and so the crowdloan opens before the auction starts and it stays open until a winner is declared so definitely make sure to contribute while the crowd loan is still open and hopefully before your team scores a slot and you get lots of rewards. There is also the possibility of a malicious bidder or a block producer trying to grief honest bidders by sniping auctions. For this reason, Vickrey auctions, a variant of second price auction in which bids are hidden and only revealed in a later phase, have emerged as a well-regarded mechanic. For example, it is implemented as the mechanism to auction human readable names on the ENS. The Candle auction is another solution that does not need the two-step commit and reveal schemes (a main component of Vickrey auctions), and for this reason allows smart contracts to participate. Polkadot will use a random beacon based on the VRF that's used also in other places of the protocol. The VRF will provide the base of the randomness, which will retroactively determine the end-time of the auction. 1) Slot Action compatition(Weekly) 2) if Won then 3) Parachain Lease Relay chain (Yearly) The slot durations are capped to 1 year and divided into 6-week periods(KSM- 12m/3m=4m); The slot durations are capped to 2 years and divided into 3-month periods (DOT- 24m/3m=8m);Once the parachain lease ends (48 weeks maximum on Kusama, 96 weeks on Polkadot), funds are returned to the contributors. Parachains may lease a slot for any combination of periods of the slot duration. Parachains may lease more than one slot over time, meaning that they could extend their lease to Polkadot past the maximum duration by leasing a contiguous slot. Note: Individual parachain slots are fungible. This means that parachains do not need to always inhabit the same slot, but as long as a parachain inhabits any slot it can continue as a parachain. You Can\u2019t (Technically) Combine Crowdloans and Private Bids Each period of the range 1 - 4 represents a 3-month duration for a total of 2 years. Bidders will submit a configuration of bids specifying the token amount they are willing to bond and for which periods. The slot ranges may be any of the periods 1 - n, where n is the number of periods available for a slot (n will be 8 for both Polkadot and Kusama). highest bidder for any given slot lease period might not always win (see the example below). There is one parachain slot available. Charlie bids 75 for the range 1 - 8. Dave bids 100 for the range 5 - 8. Emily bids 40 for the range 1 - 4. Let's calculate each bidder's valuation according to the algorithm. We do this by multiplying the bond amount by the number of periods in the specified range of the bid. Charlie - 75 * 8 = 600 for range 1 - 8 Dave - 100 * 4 = 400 for range 5 - 8 Emily - 40 * 4 = 160 for range 1 - 4 Although Dave had the highest bid in accordance to token amount, when we do the calculations we see that since he only bid for a range of 4, he would need to share the slot with Emily who bid much less. Together Dave's and Emily's bids only equals a valuation of 560. A random number, which is based on the VRF used by Polkadot, is determined at each block. Additionally, each auction will have a threshold that starts at 0 and increases to 1. The random number produced by the VRF is examined next to the threshold to determine if that block is the end of the auction within the so-called ending period. Charlie's valuation for the entire range is 600. Therefore Charlie is awarded the complete range of the parachain slot. While each parachain auction is scheduled for seven days, the candle auction format means that the \u201cend\u201d date and time is a bit of a wildcard. The first two days are confirmed to be an \u201copen\u201d period of the auction. The following five days, however, fall within the \u201cwick\u201d of this theoretical candle, and the auction will end sometime in this five-day period. so you won\u2019t actually know in real-time when the auction ends. project must specify the following information: Parachain ID/Index (which parachain the bid or crowdloan will support) First and Last Slot (the lease is broken into 8 increments, and projects can bid on a partial or full lease period) While these crowdloan bids occur, the private-bid projects (Turquoise/Salmon) don\u2019t have to enter additional bids. However, after Day 2, it becomes risky to wait since the auction can end at any time. Finally, on Day 4, Salmon Parachain enters a private bid of 5000 DOT and briefly takes the lead in the auction. Unfortunately, on Day 5, Salmon Parachain is quickly outbid by a private bid from Turquoise Parachain AND an increased bid from the Purple Parachain crowdloan module. These antics continue until Day 7 when the highest bid is Purple Parachain with 18,000 DOT. However, importantly, Purple does not win. The winner is Turquoise. Turquoise Parachain wins the slot and is now able to connect to the Kusama network. This will likely happen soon after the slot is won since the lease period begins immediately. After the end of a lease period (48 week periods on Kusama and 96 week lease periods on Polkadot), the slot will be available for renewal or for another project to occupy. The remaining parachains must continue to compete for a slot, assuming their crowdloan modules remain open and the private bidders have the interest in pursuing a slot again, rather than waiting for a less competitive auction. Unbonding takes 28 days on Polkadot and 7 on Kusama . Ensure your staking and democracy holds are cleared. \ud83d\udc46\ud83d\udc46\ud83d\udc46 \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 authorities win slots based on a verifiable random function = VRF the private-bid projects = Individual parachain Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Researcher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Kusama]] [[Polkadot]] [[CrowdLoan]]","title":"Crowdloan research intro"},{"location":"public/blockchain/substrate-polka-kus/crowdloan/crowdloan-research-intro/#introducing","text":"Kusama is a canary network for Polkadot; Kusama is a proving ground for runtime upgrades, on-chain governance, and parachains . The network is a permissionless.Kusama does not support smart contracts natively.The Kusama network is Polkadot's experimental, community-focused R&D network. \ud83d\udc46\ud83d\udc46\ud83d\udc46 AccountThese are transfer and transfer_keep_alive. transfer will allow you to send KSM regardless of the consequence; transfer_keep_alive will not allow you to send an amount that would allow the sending account to be removed due to it going below the existential deposit. By default, Polkadot-JS Apps will use transfer_keep_alive, ensuring that the account you send from cannot drop below the existential deposit of 0.001666 KSM. it may be that you * do not want to keep this account alive (for example, because you are moving all of your funds to a different address). * Note: Even if the transfer fails due to a keep-alive check, the transaction fee will be deducted from the sending account if you attempt to transfer. Currently, Kusama does not use the Assets Pallet, so this is probably not the reason for your tokens having existing references. Currently, Kusama does not use the Recovery Pallet, so this is probably not the reason for your tokens having existing references. On Kusama, you can check if recovery has been set up by checking the recovery.recoverable(AccountId) chain state. This can be found under Developer > Chain state in PolkadotJS Apps. \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Introducing"},{"location":"public/blockchain/substrate-polka-kus/crowdloan/crowdloan-research-intro/#parachain-slots-auction","text":"Polkadot Parachain Auctions do not offer a free and open environment as we have seen with ERC20 tokens, where the only thing needed was a white paper to deploy a smart contract on the Ethereum Blockchain. Such a feature allows for flexibility in the Polkadot ecosystem where every Parachain can create its own set of rules Basically, Polkadot Parachain Auctions are automated candle auctions (with some adjustments relevant to blockchain technology). It means that there is an opening period and an ending period. At any moment the winner can be chosen but we will only find it out at the end. It is not easy to get access to the Polkadot Relay Chain, and, currently, Parachains prefer to use crowdloan mechanism to collect funds to participate in Polkadot Parchain Auctions. To participate in the PolkadotParachain Auction and compete for a slot, prospective Parachains can bid in two ways: Parachains can bid their own DOT, through a single account * Parachains can use crowdloans to crowdsource DOT and bid it in the auctions * Users cannot participate in the Polkadot Parachain Auction directly. Users can only participate indirectly via crowd loans by contributing and locking DOT. Shared security and processing of transactions don\u2019t come for free. One of the ways to access them is to lease a slot on the Relay Chain. Projects compete to place the highest bid to get the slot. The first Polkadot Parachain Auction winner, via the process known as Crowdloan Campaign, raised 32.5 million DOT (around 1.3 billion USD at that time) to lease the slot for two years. A Parachain slot is a scarce resource. Given an increase in the number of Parachains, every few months new Parachains slots will be added. The Polkadot ultimate goal is to have 100 slots.","title":"Parachain-Slots-Auction"},{"location":"public/blockchain/substrate-polka-kus/crowdloan/crowdloan-research-intro/#crowdsale-vs-crowdloan","text":"crowdsale and crowdloan which makes sense because they sound the same. they are similar but there are some very key differences for example crowdsale I am sure you're familiar with it's kind of like platforms along the lines of kickstarter so you fund a project say creating a backpack that sings and lights up and then you give the funds to eventually get the product knowing that it's not created yet and then the creator uses those funds to make the product and then eventually you'll get that product in the mail so you are buying an actual thing and then you get that thing but you never get your original funds back where a crowdloan is very different so you're finding a specific function for example a parachain slot and it can only be used for that purpose it can't be used for anything else and then all funds that you contribute are delivered back to you once the lease is up so anything you contributed originally comes right back to you and it's not like you're putting funds down and you never see them again but you get something else in return and so parachain teams don't have control over the funds it's locked in the relay chain which prevents rug pull so all of a sudden funds can't just disappear or someone takes all of them it's pretty much impossible for that to happen and then if the first attempt to score slot isn't successful the crowd loan continues to try to score a parachain slot in the next round and then the next round until they do and all crowdloans do have an expiration date and that will all be specified in the outset so you should never be left in the dark you'll always have all the information you need so you can look forward to all the exciting things to come. the other thing to keep in mind is some projects have a rewards cap for their crowd loans so they can only give out so many rewards or they can only take so many contributions to the crowd loan or a certain amount so if you are set on wanting to participate it's always good to do it as soon as you feel ready um just in case you know there's a cut off or in case you can get bonus rewards.","title":"crowdsale-VS-crowdloan"},{"location":"public/blockchain/substrate-polka-kus/crowdloan/crowdloan-research-intro/#parachainacution-vs-ebayacution","text":"a common misconception in the cryptocurrency space is that a para chain slot auction is something that you have to actively participate in kind of like an auction on ebay but that actually couldn't be further from the truth and all you have to do is contribute you don't have to bid and the crowdloan does on behalf of the project so there's no stress for you and then there's a difference between a regular auction and then a parachain slot option which is used to decide which pair of chains get to be connected to the relay chain so it's not like bidding on ebay for a handbag or something like that and then there's the concept of a candle auction which means in the ending period which is the last five days the auction can just end at any time and no one knows when this will be no single human knows and it's completely automated and a mystery to everyone and so the crowdloan opens before the auction starts and it stays open until a winner is declared so definitely make sure to contribute while the crowd loan is still open and hopefully before your team scores a slot and you get lots of rewards. There is also the possibility of a malicious bidder or a block producer trying to grief honest bidders by sniping auctions. For this reason, Vickrey auctions, a variant of second price auction in which bids are hidden and only revealed in a later phase, have emerged as a well-regarded mechanic. For example, it is implemented as the mechanism to auction human readable names on the ENS. The Candle auction is another solution that does not need the two-step commit and reveal schemes (a main component of Vickrey auctions), and for this reason allows smart contracts to participate. Polkadot will use a random beacon based on the VRF that's used also in other places of the protocol. The VRF will provide the base of the randomness, which will retroactively determine the end-time of the auction. 1) Slot Action compatition(Weekly) 2) if Won then 3) Parachain Lease Relay chain (Yearly) The slot durations are capped to 1 year and divided into 6-week periods(KSM- 12m/3m=4m); The slot durations are capped to 2 years and divided into 3-month periods (DOT- 24m/3m=8m);Once the parachain lease ends (48 weeks maximum on Kusama, 96 weeks on Polkadot), funds are returned to the contributors. Parachains may lease a slot for any combination of periods of the slot duration. Parachains may lease more than one slot over time, meaning that they could extend their lease to Polkadot past the maximum duration by leasing a contiguous slot. Note: Individual parachain slots are fungible. This means that parachains do not need to always inhabit the same slot, but as long as a parachain inhabits any slot it can continue as a parachain. You Can\u2019t (Technically) Combine Crowdloans and Private Bids Each period of the range 1 - 4 represents a 3-month duration for a total of 2 years. Bidders will submit a configuration of bids specifying the token amount they are willing to bond and for which periods. The slot ranges may be any of the periods 1 - n, where n is the number of periods available for a slot (n will be 8 for both Polkadot and Kusama). highest bidder for any given slot lease period might not always win (see the example below). There is one parachain slot available. Charlie bids 75 for the range 1 - 8. Dave bids 100 for the range 5 - 8. Emily bids 40 for the range 1 - 4. Let's calculate each bidder's valuation according to the algorithm. We do this by multiplying the bond amount by the number of periods in the specified range of the bid. Charlie - 75 * 8 = 600 for range 1 - 8 Dave - 100 * 4 = 400 for range 5 - 8 Emily - 40 * 4 = 160 for range 1 - 4 Although Dave had the highest bid in accordance to token amount, when we do the calculations we see that since he only bid for a range of 4, he would need to share the slot with Emily who bid much less. Together Dave's and Emily's bids only equals a valuation of 560. A random number, which is based on the VRF used by Polkadot, is determined at each block. Additionally, each auction will have a threshold that starts at 0 and increases to 1. The random number produced by the VRF is examined next to the threshold to determine if that block is the end of the auction within the so-called ending period. Charlie's valuation for the entire range is 600. Therefore Charlie is awarded the complete range of the parachain slot. While each parachain auction is scheduled for seven days, the candle auction format means that the \u201cend\u201d date and time is a bit of a wildcard. The first two days are confirmed to be an \u201copen\u201d period of the auction. The following five days, however, fall within the \u201cwick\u201d of this theoretical candle, and the auction will end sometime in this five-day period. so you won\u2019t actually know in real-time when the auction ends. project must specify the following information: Parachain ID/Index (which parachain the bid or crowdloan will support) First and Last Slot (the lease is broken into 8 increments, and projects can bid on a partial or full lease period) While these crowdloan bids occur, the private-bid projects (Turquoise/Salmon) don\u2019t have to enter additional bids. However, after Day 2, it becomes risky to wait since the auction can end at any time. Finally, on Day 4, Salmon Parachain enters a private bid of 5000 DOT and briefly takes the lead in the auction. Unfortunately, on Day 5, Salmon Parachain is quickly outbid by a private bid from Turquoise Parachain AND an increased bid from the Purple Parachain crowdloan module. These antics continue until Day 7 when the highest bid is Purple Parachain with 18,000 DOT. However, importantly, Purple does not win. The winner is Turquoise. Turquoise Parachain wins the slot and is now able to connect to the Kusama network. This will likely happen soon after the slot is won since the lease period begins immediately. After the end of a lease period (48 week periods on Kusama and 96 week lease periods on Polkadot), the slot will be available for renewal or for another project to occupy. The remaining parachains must continue to compete for a slot, assuming their crowdloan modules remain open and the private bidders have the interest in pursuing a slot again, rather than waiting for a less competitive auction. Unbonding takes 28 days on Polkadot and 7 on Kusama . Ensure your staking and democracy holds are cleared. \ud83d\udc46\ud83d\udc46\ud83d\udc46 \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"ParachainAcution-vs-eBayAcution"},{"location":"public/blockchain/substrate-polka-kus/crowdloan/crowdloan-research-intro/#literature","text":"authorities win slots based on a verifiable random function = VRF the private-bid projects = Individual parachain Substrate-Glossary \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Researcher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Kusama]] [[Polkadot]] [[CrowdLoan]]","title":"Literature"},{"location":"public/blockchain/wasm/ewasm-research-intro/","tags":["substrate","polkadot_ecosystem","webassembly","wasm","llvm"],"text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/EWASM(5) \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb Introducing \u00b6 WebAssembly (or Wasm as a contraction) is a new, portable, size- and load-time-efficient format. A few key points: WebAssembly defines an instruction set, intermediate source format (WAST) and a binary encoded format (WASM). WebAssembly has a few higher level features, such as the ability to import and execute outside methods defined via an interface. WASM \u00b6 Fast. WebAssembly achieves near native performance. Compared with the Java, Python or JavaScript runtimes, it can be 10x to 100x faster (how is this possible?). It is also much faster than Docker, especially in cold start and system access. Safe. WebAssembly is a sandbox with a capability-based security model. It is not only safer than native binaries, but also safer than OS-level containers like Docker. Yet it provides access to the underlying system, icnluding new hardware features. Portable. WebAssembly apps can be written in C, C++, Rust, Go, and run without change on different OS and hardware platforms. Manageable. WebAssembly programs can be provisioned, started, hot swapped, stopped, and moved around by other applications. Goals \u00b6 To provide a specification of ewasm contract semantics and the Ethereum interface To provide an EVM transcompiler, preferably as an ewasm contract To provide a metering injector, preferably as an ewasm contract To provide a VM implementation for executing ewasm contracts To implement an ewasm backend in the Solidity compiler To provide a library and instructions for writing contracts in Rust To provide a library and instructions for writing contracts in C. ImportantContent \u00b6 The project VP Hung-Ying Tai (hydai) from Second State shared the current research content and future direction of Ewasm VM. The content is very exciting, including EVM bytecode, Webassembly, Ewasm1.0 and Ewasm2.0. PALLET \u00b6 While supporting the EVM pallet to provide seamless compatibility with all existing Ethereum applications, ParaState also provides developers with a next-gen smart contract implementation environment, EWASM (Ethereum-flavored WebAssembly) . All existing Ethereum smart contracts work on ParaState\u2019s Ewasm VM (Pallet SSVM) without any change.We see more and more parachain projects like Acala, Clover Finance, and Darwinia etc to integrate the EVM pallet into their parachains in order to interact with Ethereum ecosystem. EEI \u00b6 Ethereum defines the EEI to allow the client Corresponding function libraries can be implemented in different languages, and it is easier to complete prototypes and upgrades. A set of methods available to ewasm contracts. The smart contract of Ewasm 2.0 is renamed Execution Environments (EE). LLVM \u00b6 LLVM includes a WebAssembly backend to generate WASM output. Major browser JavaScript engines will notably have native support for WebAssembly, including but not limited to: Google's V8 engine (Node.js and Chromium-based browsers), Microsoft's Chakra engine (Microsoft Edge), Mozilla's Spidermonkey engine (Firefox and Thunderbird). * Other non-browser implementations exist too: wasm-jit-prototype (a standalone VM using an LLVM backend), wabt (a stack-based interpreter), ml-proto (the OCaml reference interpreter), etc. it future-proofs the Ethereum protocol by bringing the LLVM and WebAssembly developer communities into the Polkadot ecosystem. It is your best choice among one-stop development platforms for next-gen Web3 applications. It is Ethereum on Steroids. SecondState developers recently built a Solidity to Ewasm compiler called Soll. solc/solc --strict-assembly --optimize ~/simple_storage/simple_storage_yul_ir.txt SewUp \u00b6 The Second State EWasm Utility Program (SewUp) is a library that helps you sew up your Ethereum project with Rust, just like development in a common backend. Set-up-Sewup [Tutorial-Hello-World]](https://docs.parastate.io/developers-resources/sewup-ewasm/tutorial-hello-world) \ud83d\udc46\ud83d\udc46\ud83d\udc46 @SSVN @SOLL@LLVM @Compiler@AOT@JIT @WasmEdge @DAO @STAKE \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 Ewasm contract: a contract adhering to the ewasm specification Ethereum environment interface = EEI metering: the act of measuring execution cost in a deterministic way metering injector: a transformation tool inserting metering code to an ewasm contract EVM transcompiler: an EVM bytecode (the current Ethereum VM) to ewasm transcompiler. See this chapter. \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Ewasm research intro"},{"location":"public/blockchain/wasm/ewasm-research-intro/#introducing","text":"WebAssembly (or Wasm as a contraction) is a new, portable, size- and load-time-efficient format. A few key points: WebAssembly defines an instruction set, intermediate source format (WAST) and a binary encoded format (WASM). WebAssembly has a few higher level features, such as the ability to import and execute outside methods defined via an interface.","title":"Introducing"},{"location":"public/blockchain/wasm/ewasm-research-intro/#wasm","text":"Fast. WebAssembly achieves near native performance. Compared with the Java, Python or JavaScript runtimes, it can be 10x to 100x faster (how is this possible?). It is also much faster than Docker, especially in cold start and system access. Safe. WebAssembly is a sandbox with a capability-based security model. It is not only safer than native binaries, but also safer than OS-level containers like Docker. Yet it provides access to the underlying system, icnluding new hardware features. Portable. WebAssembly apps can be written in C, C++, Rust, Go, and run without change on different OS and hardware platforms. Manageable. WebAssembly programs can be provisioned, started, hot swapped, stopped, and moved around by other applications.","title":"WASM"},{"location":"public/blockchain/wasm/ewasm-research-intro/#goals","text":"To provide a specification of ewasm contract semantics and the Ethereum interface To provide an EVM transcompiler, preferably as an ewasm contract To provide a metering injector, preferably as an ewasm contract To provide a VM implementation for executing ewasm contracts To implement an ewasm backend in the Solidity compiler To provide a library and instructions for writing contracts in Rust To provide a library and instructions for writing contracts in C.","title":"Goals"},{"location":"public/blockchain/wasm/ewasm-research-intro/#importantcontent","text":"The project VP Hung-Ying Tai (hydai) from Second State shared the current research content and future direction of Ewasm VM. The content is very exciting, including EVM bytecode, Webassembly, Ewasm1.0 and Ewasm2.0.","title":"ImportantContent"},{"location":"public/blockchain/wasm/ewasm-research-intro/#pallet","text":"While supporting the EVM pallet to provide seamless compatibility with all existing Ethereum applications, ParaState also provides developers with a next-gen smart contract implementation environment, EWASM (Ethereum-flavored WebAssembly) . All existing Ethereum smart contracts work on ParaState\u2019s Ewasm VM (Pallet SSVM) without any change.We see more and more parachain projects like Acala, Clover Finance, and Darwinia etc to integrate the EVM pallet into their parachains in order to interact with Ethereum ecosystem.","title":"PALLET"},{"location":"public/blockchain/wasm/ewasm-research-intro/#eei","text":"Ethereum defines the EEI to allow the client Corresponding function libraries can be implemented in different languages, and it is easier to complete prototypes and upgrades. A set of methods available to ewasm contracts. The smart contract of Ewasm 2.0 is renamed Execution Environments (EE).","title":"EEI"},{"location":"public/blockchain/wasm/ewasm-research-intro/#llvm","text":"LLVM includes a WebAssembly backend to generate WASM output. Major browser JavaScript engines will notably have native support for WebAssembly, including but not limited to: Google's V8 engine (Node.js and Chromium-based browsers), Microsoft's Chakra engine (Microsoft Edge), Mozilla's Spidermonkey engine (Firefox and Thunderbird). * Other non-browser implementations exist too: wasm-jit-prototype (a standalone VM using an LLVM backend), wabt (a stack-based interpreter), ml-proto (the OCaml reference interpreter), etc. it future-proofs the Ethereum protocol by bringing the LLVM and WebAssembly developer communities into the Polkadot ecosystem. It is your best choice among one-stop development platforms for next-gen Web3 applications. It is Ethereum on Steroids. SecondState developers recently built a Solidity to Ewasm compiler called Soll. solc/solc --strict-assembly --optimize ~/simple_storage/simple_storage_yul_ir.txt","title":"LLVM"},{"location":"public/blockchain/wasm/ewasm-research-intro/#sewup","text":"The Second State EWasm Utility Program (SewUp) is a library that helps you sew up your Ethereum project with Rust, just like development in a common backend. Set-up-Sewup [Tutorial-Hello-World]](https://docs.parastate.io/developers-resources/sewup-ewasm/tutorial-hello-world) \ud83d\udc46\ud83d\udc46\ud83d\udc46 @SSVN @SOLL@LLVM @Compiler@AOT@JIT @WasmEdge @DAO @STAKE \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"SewUp"},{"location":"public/blockchain/wasm/ewasm-research-intro/#literature","text":"Ewasm contract: a contract adhering to the ewasm specification Ethereum environment interface = EEI metering: the act of measuring execution cost in a deterministic way metering injector: a transformation tool inserting metering code to an ewasm contract EVM transcompiler: an EVM bytecode (the current Ethereum VM) to ewasm transcompiler. See this chapter. \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4fArman-Riazi\ud83e\udd1d [[Polkadot-Ecosystem-Research]] [[Substrate]]","title":"Literature"},{"location":"public/cryptocurrency/cryptocurrency/","tags":["cryprocurrency","trade"],"text":"Cryptocurrency \u00b6 Trading-Technical-Fundamental","title":"Cryptocurrency"},{"location":"public/cryptocurrency/cryptocurrency/#cryptocurrency","text":"Trading-Technical-Fundamental","title":"Cryptocurrency"},{"location":"public/cryptocurrency/trade/","tags":["cryprocurrency","trade"],"text":"Trading-Technical-Fundamental \u00b6 Crypto Trading All the information calculated for you in other cells","title":"Trading-Technical-Fundamental"},{"location":"public/cryptocurrency/trade/#trading-technical-fundamental","text":"Crypto Trading All the information calculated for you in other cells","title":"Trading-Technical-Fundamental"},{"location":"public/day-notes/2022/","text":"04","title":"2022"},{"location":"public/day-notes/2022/04/","text":"2022-04-01 2022-04-02 2022-04-03","title":"04"},{"location":"public/day-notes/2022/04/days/2022-04-15/","text":"Published Website Captured 3 movie About me, Guide website, Solidity Teach to Mr.kia","title":"2022 04 15"},{"location":"public/day-notes/2022/04/days/2022-04-16/","text":"Social business network","title":"2022 04 16"},{"location":"public/day-notes/2022/04/days/2022-04-17/","text":"Teach to Mr.kia","title":"2022 04 17"},{"location":"public/devops/CICD/","tags":["devops","cicd"],"text":"CICD \u00b6 Features \u00b6 Automation publish Fast Release On-premise Cloud-Native Run Analyzer Test/Stage Customized Pipelines Good Solution for #Microservice Management product release per team Quote I captured 6h about implement of ci-cd with kubernetes and docker that I did not want upload it. Info #VSTS #CICD #Pipline #TFS-Code2018 #Rancher #CICD #CaaS #CloudNative Rancher - CaaS","title":"CICD"},{"location":"public/devops/CICD/#cicd","text":"","title":"CICD"},{"location":"public/devops/CICD/#features","text":"Automation publish Fast Release On-premise Cloud-Native Run Analyzer Test/Stage Customized Pipelines Good Solution for #Microservice Management product release per team Quote I captured 6h about implement of ci-cd with kubernetes and docker that I did not want upload it. Info #VSTS #CICD #Pipline #TFS-Code2018 #Rancher #CICD #CaaS #CloudNative Rancher - CaaS","title":"Features"},{"location":"public/devops/Cloud/","tags":["devops","cloud"],"text":"I worked a little bit on AWS. I used services like #Cloud9 for online editor like gitpod. I am into IBM cloud for Couchdb (+ Medium link) and Blockchain as a service. My master thesis is about cloud simulation.[[master]]","title":"Cloud"},{"location":"public/devops/Devops/","tags":["devops"],"text":"DevOps \u00b6 Kubernetes Rancher Docker CICD Elastic-Search Cloud Virtualization Quote I success to launched #Microservice either of [[dotnetcore]] and a sample with python I captured 6h about implement of ci-cd with [[kubernetes]] and docker that I did not want upload it. For devOps you should better know a little bit about programing languages but it will be ok, if you do not know. e.g I have not write any code by python but I was able to [[[deploy]] it.For devops you need to know about configuration, esxi, on-permise, cloud, windows server, linux dist/ubuntu that is out of scope for now surely.","title":"DevOps"},{"location":"public/devops/Devops/#devops","text":"Kubernetes Rancher Docker CICD Elastic-Search Cloud Virtualization Quote I success to launched #Microservice either of [[dotnetcore]] and a sample with python I captured 6h about implement of ci-cd with [[kubernetes]] and docker that I did not want upload it. For devOps you should better know a little bit about programing languages but it will be ok, if you do not know. e.g I have not write any code by python but I was able to [[[deploy]] it.For devops you need to know about configuration, esxi, on-permise, cloud, windows server, linux dist/ubuntu that is out of scope for now surely.","title":"DevOps"},{"location":"public/devops/Docker/","tags":["devops","docker","container"],"text":"Docker \u00b6 DevOps: Docker registry Basic Authentication and HTTPS There are two links for handling insecure and docker\u2019 notices about different solutions although we proposed a secure registry so it is better to know a little bit of another information. (Registry, Insecure) ufw allow http ufw allow https curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -apt-key fingerprint 0EBFCD88 apt install ca-certificates curl openssh-server ufw apt-transport-https -y apt update apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \u201cdeb [arch=amd64] https://download.docker.com/linux/ubuntu$(lsb_release -cs) \\stable\u201d apt-get install docker-ce docker-ce-cli containerd.io usermod -aG docker linuxusername usermod -aG docker root docker run hello-world docker ps -a docker pull registry:2 (optional)reboot *docker run \u2014 entrypoint htpasswd registery:2 -Bbn dockerregistry dockerregistery > auth/htpasswd *docker run -d -p 5000:5000 \u2014 restart=always \u2014 name registry -v /opt/auth:/auth -e \u201cREGISTRY_AUTH=htpasswd\u201d -e \u201cREGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\u201d -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -v /opt/certs:/certs -v /opt/data:/var/lib/registry -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/server.crt -e REGISTRY_HTTP_TLS_KEY=/certs/server.key registry:2 *curl -kiv -H \u201cAuthorization: Basic $(echo -n \u201cdockerregistry:dockerregistry\u201d | base64)\u201d https://localhost:5000/v2 *docker login localhost:5000 *docker pull nginx:latest Good luck","title":"Docker"},{"location":"public/devops/Docker/#docker","text":"DevOps: Docker registry Basic Authentication and HTTPS There are two links for handling insecure and docker\u2019 notices about different solutions although we proposed a secure registry so it is better to know a little bit of another information. (Registry, Insecure) ufw allow http ufw allow https curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -apt-key fingerprint 0EBFCD88 apt install ca-certificates curl openssh-server ufw apt-transport-https -y apt update apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - add-apt-repository \u201cdeb [arch=amd64] https://download.docker.com/linux/ubuntu$(lsb_release -cs) \\stable\u201d apt-get install docker-ce docker-ce-cli containerd.io usermod -aG docker linuxusername usermod -aG docker root docker run hello-world docker ps -a docker pull registry:2 (optional)reboot *docker run \u2014 entrypoint htpasswd registery:2 -Bbn dockerregistry dockerregistery > auth/htpasswd *docker run -d -p 5000:5000 \u2014 restart=always \u2014 name registry -v /opt/auth:/auth -e \u201cREGISTRY_AUTH=htpasswd\u201d -e \u201cREGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\u201d -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -v /opt/certs:/certs -v /opt/data:/var/lib/registry -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/server.crt -e REGISTRY_HTTP_TLS_KEY=/certs/server.key registry:2 *curl -kiv -H \u201cAuthorization: Basic $(echo -n \u201cdockerregistry:dockerregistry\u201d | base64)\u201d https://localhost:5000/v2 *docker login localhost:5000 *docker pull nginx:latest Good luck","title":"Docker"},{"location":"public/devops/Elastic-Search/","tags":["elastic","search","devops"],"text":"Elastic-Search \u00b6 Features \u00b6 Rest API Database Search Crawler Analyze Dashboard Quaryable Scalability Machine learning Quote To Configure ELK stack you need a lot of hardware resource I rented VPS to work in 2020. My experience says it is so power-full and all-in-one database rather than the other DBs. Info ELK-Dashboard ELK-captured 2020 Report of Gartner 2020 about ELK stack Dashboards(Location, System APIs, Logs of resources system, Filter,Advance search,...)","title":"Elastic-Search"},{"location":"public/devops/Elastic-Search/#elastic-search","text":"","title":"Elastic-Search"},{"location":"public/devops/Elastic-Search/#features","text":"Rest API Database Search Crawler Analyze Dashboard Quaryable Scalability Machine learning Quote To Configure ELK stack you need a lot of hardware resource I rented VPS to work in 2020. My experience says it is so power-full and all-in-one database rather than the other DBs. Info ELK-Dashboard ELK-captured 2020 Report of Gartner 2020 about ELK stack Dashboards(Location, System APIs, Logs of resources system, Filter,Advance search,...)","title":"Features"},{"location":"public/devops/Kubernetes/","tags":["devops","cicd","kubernetes"],"text":"Kubernetes \u00b6 Capabilities: Scheduling and orchestrating application containers As an Infrastructure for Microservices Integrate with hundreds of tools such as (ELK, Rancher, ...) Optimal use of consume resources To increase speed and self-organize while the team doing develop Protecting the Website from Attacks Website maintenance without interruption and guaranteed It has been defined go through the CaaS layers like Rancher, but we know that this service itself is a Micro PaaS. I prefer to use kubernetes in the Rancher. Quote I eager to try it again especially use it in [[HyperLedger-IBM]] projects. Info Version ~2018 Show used Features Show Part 1- used kubernetes version 1.0","title":"Kubernetes"},{"location":"public/devops/Kubernetes/#kubernetes","text":"Capabilities: Scheduling and orchestrating application containers As an Infrastructure for Microservices Integrate with hundreds of tools such as (ELK, Rancher, ...) Optimal use of consume resources To increase speed and self-organize while the team doing develop Protecting the Website from Attacks Website maintenance without interruption and guaranteed It has been defined go through the CaaS layers like Rancher, but we know that this service itself is a Micro PaaS. I prefer to use kubernetes in the Rancher. Quote I eager to try it again especially use it in [[HyperLedger-IBM]] projects. Info Version ~2018 Show used Features Show Part 1- used kubernetes version 1.0","title":"Kubernetes"},{"location":"public/devops/Rancher/","tags":["container","rancher","kubernetes","caas","devops"],"text":"Rancher \u00b6 One Platform for Kubernetes Management Rancher is a complete software stack for teams adopting containers. It addresses the operational and security challenges of managing multiple Kubernetes clusters, while providing DevOps teams with integrated tools for running containerized workloads. Rancher Kubernetes Engine (RKE) is a CNCF-certified #[[Kubernetes]] distribution that runs entirely within Docker containers. It works on bare-metal and virtualized servers. RKE solves the problem of installation complexity, a common issue in the Kubernetes community. With RKE, the installation and operation of Kubernetes is both simplified and easily automated, and it\u2019s entirely independent of the operating system and platform you\u2019re running. As long as you can run a supported version of Docker, you can deploy and run Kubernetes with RKE.Rancher has got [[CICD]] pipelines Quote Rancher is a CaaS platform and service provider that you can use it on cloud or #air-gap #high-avalibility. I deployed the Rancher via Helm and It was fascinated when I found kubernetes on rancher without trying to scratch. Rancher has got RKE-Cli like Google kubernetes and Amazon kubernetes. Air-Gap configuration: nodes: - address: 172.18.3.10 internal_address: 192.168.11.1 user: ubuntu role: [controlplane,worker,etcd] - address: 172.18.3.15 internal_address: 192.168.22.2 user: ubuntu role: [controlplane,worker,etcd] - address: 172.18.3.16 internal_address: 192.168.33.3 user: ubuntu role: [controlplane,worker,etcd] services: etcd: snapshot: true For Air-Gap HA you need to getting docker images(Version-2018): busybox minio/minio:RELEASE.2018-05-25T19-49-13Z rancher/alertmanager-helper:v0.0.2 rancher/calico-cni:v3.1.1 rancher/calico-cni:v3.1.3 rancher/calico-ctl:v2.0.0 rancher/calico-node:v3.1.1 rancher/calico-node:v3.1.3 rancher/cluster-proportional-autoscaler-amd64:1.0.0 rancher/coreos-etcd:v3.1.12 rancher/coreos-etcd:v3.2.18 rancher/coreos-etcd:v3.2.24 rancher/coreos-flannel-cni:v0.2.0 rancher/coreos-flannel-cni:v0.3.0 rancher/coreos-flannel:v0.10.0 rancher/coreos-flannel:v0.9.1 rancher/docker-elasticsearch-kubernetes:5.6.2 rancher/fluentd-helper:v0.1.2 rancher/fluentd:v0.1.10 rancher/hyperkube:v1.10.12-rancher1 rancher/hyperkube:v1.11.6-rancher1 rancher/hyperkube:v1.12.4-rancher1 rancher/hyperkube:v1.9.7-rancher2 rancher/jenkins-jnlp-slave:3.10-1-alpine rancher/jenkins-plugins-docker:17.12 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.10 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.13 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.7 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.8 rancher/k8s-dns-kube-dns-amd64:1.14.10 rancher/k8s-dns-kube-dns-amd64:1.14.13 rancher/k8s-dns-kube-dns-amd64:1.14.7 rancher/k8s-dns-kube-dns-amd64:1.14.8 rancher/k8s-dns-sidecar-amd64:1.14.10 rancher/k8s-dns-sidecar-amd64:1.14.13 rancher/k8s-dns-sidecar-amd64:1.14.7 rancher/k8s-dns-sidecar-amd64:1.14.8 rancher/kibana:5.6.4 rancher/log-aggregator:v0.1.3 rancher/metrics-server-amd64:v0.2.1 rancher/metrics-server-amd64:v0.3.1 rancher/nginx-ingress-controller:0.16.2-rancher1 rancher/nginx-ingress-controller-defaultbackend:1.4 rancher/pause-amd64:3.0 rancher/pause-amd64:3.1 rancher/pipeline-jenkins-server:v0.1.0 rancher/pipeline-tools:v0.1.0 rancher/prom-alertmanager:v0.15.2 rancher/rancher-agent:v2.1.5 rancher/rancher:v2.1.5 rancher/rke-tools:v0.1.13 rancher/rke-tools:v0.1.15 rancher/rke-tools:v0.1.16 rancher/coreos-etcd:v3.2.18 rancher/rke-tools:v0.1.15 rancher/k8s-dns-kube-dns-amd64:1.14.10 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.10 rancher/k8s-dns-sidecar-amd64:1.14.10 rancher/cluster-proportional-autoscaler-amd64:1.0.0 rancher/hyperkube:v1.11.6-rancher1 rancher/coreos-flannel:v0.10.0 rancher/coreos-flannel-cni:v0.3.0 rancher/calico-node:v3.1.3 rancher/calico-cni:v3.1.3 rancher/calico-ctl:v2.0.0 weaveworks/weave-kube:2.1.2 weaveworks/weave-npc:2.1.2 rancher/pause-amd64:3.1 rancher/nginx-ingress-controller:0.16.2-rancher1 rancher/nginx-ingress-controller-defaultbackend:1.4 rancher/metrics-server-amd64:v0.2.1 I deployed Microservice .Netcore Ecommerce on Air-Gap as HA Info","title":"Rancher"},{"location":"public/devops/Rancher/#rancher","text":"One Platform for Kubernetes Management Rancher is a complete software stack for teams adopting containers. It addresses the operational and security challenges of managing multiple Kubernetes clusters, while providing DevOps teams with integrated tools for running containerized workloads. Rancher Kubernetes Engine (RKE) is a CNCF-certified #[[Kubernetes]] distribution that runs entirely within Docker containers. It works on bare-metal and virtualized servers. RKE solves the problem of installation complexity, a common issue in the Kubernetes community. With RKE, the installation and operation of Kubernetes is both simplified and easily automated, and it\u2019s entirely independent of the operating system and platform you\u2019re running. As long as you can run a supported version of Docker, you can deploy and run Kubernetes with RKE.Rancher has got [[CICD]] pipelines Quote Rancher is a CaaS platform and service provider that you can use it on cloud or #air-gap #high-avalibility. I deployed the Rancher via Helm and It was fascinated when I found kubernetes on rancher without trying to scratch. Rancher has got RKE-Cli like Google kubernetes and Amazon kubernetes. Air-Gap configuration: nodes: - address: 172.18.3.10 internal_address: 192.168.11.1 user: ubuntu role: [controlplane,worker,etcd] - address: 172.18.3.15 internal_address: 192.168.22.2 user: ubuntu role: [controlplane,worker,etcd] - address: 172.18.3.16 internal_address: 192.168.33.3 user: ubuntu role: [controlplane,worker,etcd] services: etcd: snapshot: true For Air-Gap HA you need to getting docker images(Version-2018): busybox minio/minio:RELEASE.2018-05-25T19-49-13Z rancher/alertmanager-helper:v0.0.2 rancher/calico-cni:v3.1.1 rancher/calico-cni:v3.1.3 rancher/calico-ctl:v2.0.0 rancher/calico-node:v3.1.1 rancher/calico-node:v3.1.3 rancher/cluster-proportional-autoscaler-amd64:1.0.0 rancher/coreos-etcd:v3.1.12 rancher/coreos-etcd:v3.2.18 rancher/coreos-etcd:v3.2.24 rancher/coreos-flannel-cni:v0.2.0 rancher/coreos-flannel-cni:v0.3.0 rancher/coreos-flannel:v0.10.0 rancher/coreos-flannel:v0.9.1 rancher/docker-elasticsearch-kubernetes:5.6.2 rancher/fluentd-helper:v0.1.2 rancher/fluentd:v0.1.10 rancher/hyperkube:v1.10.12-rancher1 rancher/hyperkube:v1.11.6-rancher1 rancher/hyperkube:v1.12.4-rancher1 rancher/hyperkube:v1.9.7-rancher2 rancher/jenkins-jnlp-slave:3.10-1-alpine rancher/jenkins-plugins-docker:17.12 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.10 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.13 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.7 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.8 rancher/k8s-dns-kube-dns-amd64:1.14.10 rancher/k8s-dns-kube-dns-amd64:1.14.13 rancher/k8s-dns-kube-dns-amd64:1.14.7 rancher/k8s-dns-kube-dns-amd64:1.14.8 rancher/k8s-dns-sidecar-amd64:1.14.10 rancher/k8s-dns-sidecar-amd64:1.14.13 rancher/k8s-dns-sidecar-amd64:1.14.7 rancher/k8s-dns-sidecar-amd64:1.14.8 rancher/kibana:5.6.4 rancher/log-aggregator:v0.1.3 rancher/metrics-server-amd64:v0.2.1 rancher/metrics-server-amd64:v0.3.1 rancher/nginx-ingress-controller:0.16.2-rancher1 rancher/nginx-ingress-controller-defaultbackend:1.4 rancher/pause-amd64:3.0 rancher/pause-amd64:3.1 rancher/pipeline-jenkins-server:v0.1.0 rancher/pipeline-tools:v0.1.0 rancher/prom-alertmanager:v0.15.2 rancher/rancher-agent:v2.1.5 rancher/rancher:v2.1.5 rancher/rke-tools:v0.1.13 rancher/rke-tools:v0.1.15 rancher/rke-tools:v0.1.16 rancher/coreos-etcd:v3.2.18 rancher/rke-tools:v0.1.15 rancher/k8s-dns-kube-dns-amd64:1.14.10 rancher/k8s-dns-dnsmasq-nanny-amd64:1.14.10 rancher/k8s-dns-sidecar-amd64:1.14.10 rancher/cluster-proportional-autoscaler-amd64:1.0.0 rancher/hyperkube:v1.11.6-rancher1 rancher/coreos-flannel:v0.10.0 rancher/coreos-flannel-cni:v0.3.0 rancher/calico-node:v3.1.3 rancher/calico-cni:v3.1.3 rancher/calico-ctl:v2.0.0 weaveworks/weave-kube:2.1.2 weaveworks/weave-npc:2.1.2 rancher/pause-amd64:3.1 rancher/nginx-ingress-controller:0.16.2-rancher1 rancher/nginx-ingress-controller-defaultbackend:1.4 rancher/metrics-server-amd64:v0.2.1 I deployed Microservice .Netcore Ecommerce on Air-Gap as HA Info","title":"Rancher"},{"location":"public/devops/Virtualization/","tags":["vsphere","devops","cloud","esxi","virtualization"],"text":"Virualization \u00b6 [[VSphere]] 7.1- Features \u00b6 Server virtualization Optimal use of resources Reduce processing costs and power consumption To use the [[Kubernetes]] with high speed execution Remote communication to a server Run multiple operating systems simultaneously Info To know virtualization is obligate for blockchain developers. Senior full-stack developers have associated with it. My [[master]] thesis have being demonstrated cloud and virtualization. The virtualization concepts are simulated as kind of [[Container]] and virtual machine.","title":"Virualization"},{"location":"public/devops/Virtualization/#virualization","text":"","title":"Virualization"},{"location":"public/devops/Virtualization/#vsphere-71-features","text":"Server virtualization Optimal use of resources Reduce processing costs and power consumption To use the [[Kubernetes]] with high speed execution Remote communication to a server Run multiple operating systems simultaneously Info To know virtualization is obligate for blockchain developers. Senior full-stack developers have associated with it. My [[master]] thesis have being demonstrated cloud and virtualization. The virtualization concepts are simulated as kind of [[Container]] and virtual machine.","title":"[[VSphere]] 7.1- Features"},{"location":"public/fun/music/","text":"Shadmehr Aghili - Love Celine Dion - The Best French AliReza Assar - Epic Darush - Fall in Deep","title":"Music"},{"location":"public/issues/Issues-Nodejs/","text":"Failure: NodeJs AssertionError [ERR_ASSERTION]","title":"Issues Nodejs"},{"location":"public/mynotes/exp-2021cryprotrading/","text":"Experience loss of money because of trading crypto in 2021 \ud83e\udd15 \u00b6 I used to make a financial plan and I was responsible for paying 6% monthly Interest to investor and then I lost 73.000$ because in 2021 everybody said bitcoin will be 120.000-240.000$ but I decided to sell at the price of 70.000$ but It was not happening. I do not have any team for managing orders exactly and doing base on my good plan. This activity making psychological effects but I tried to get feel better by reading books, meditation, patience, recovery mind so on ... I wonder to let you know 73.000 $ is the value of 2.000.000.000 Rial.it was harmful in situations of unsuited economic in a country. Due to my interest and my experience with the Blockchain these things will still be worth something when I have finished paying off the debt \"To everyone who finds the current investment climate hard, diffcult, and somewhat confusing, I would say, 'Welcome to adult life.'\" - [[Charlie Munger]]","title":"Experience loss of money because of trading crypto in 2021 \ud83e\udd15"},{"location":"public/mynotes/exp-2021cryprotrading/#experience-loss-of-money-because-of-trading-crypto-in-2021","text":"I used to make a financial plan and I was responsible for paying 6% monthly Interest to investor and then I lost 73.000$ because in 2021 everybody said bitcoin will be 120.000-240.000$ but I decided to sell at the price of 70.000$ but It was not happening. I do not have any team for managing orders exactly and doing base on my good plan. This activity making psychological effects but I tried to get feel better by reading books, meditation, patience, recovery mind so on ... I wonder to let you know 73.000 $ is the value of 2.000.000.000 Rial.it was harmful in situations of unsuited economic in a country. Due to my interest and my experience with the Blockchain these things will still be worth something when I have finished paying off the debt \"To everyone who finds the current investment climate hard, diffcult, and somewhat confusing, I would say, 'Welcome to adult life.'\" - [[Charlie Munger]]","title":"Experience loss of money because of trading crypto in 2021 \ud83e\udd15"},{"location":"public/other/2021-year-review/","text":"Joe Previte See all posts 2021 Year in Review Last updated: 01/06/2022 2021 This year feels like a blur. I keep thinking 2021 and 2020 were actually the same year due to the pandemic. 2020 was a wild year because I joined Facebook/Meta, moved the entire family to Seattle, moved back to Arizona, left Facebook/Meta, bought a house and started at Coder. Even writing that last sentence feels tiring. There was a lot happening. But fast-forward to 2021 and it was actually a wonderful year. Working Full-Time on Open Source for Coder I joined Coder in December 2020 as an Open Source TypeScript Engineer. My responsibility was and still is to maintain an open source project called code-server, which is VS Code in the browser. I feel very grateful to have this job and work on open source every day. My work is all public on GitHub and anyone can go see it. And I get to interact with the community on a regular basis. Sometimes people help us debug issues. Other times they raise PRs and fix issues for us. It\u2019s amazing! And I\u2019ve really been enjoying my time at Coder. It\u2019s one of the first places where I look forward to going to work and I\u2019m learning new things everyday. I would say I looked forward to work 90% of the year. Yes, I had bad days. But I also have many many days where I am thinking about work on the weekend because I\u2019m so excited about this space. DevTools, specifically IDEs, is an exciting space. I do genuinely believe remote development is the future and I\u2019m happy I get to contribute to it. Becoming a Dad The other amazing part of the year was becoming a dad! In October, our first daughter (and first kid) was born. I really didn\u2019t know what to expect becoming a parent, but now I\u2019m starting to understand what it means. The biggest realization is how much attention I paid to things that don\u2019t matter before she was born. Now, I realize all I want is to take care of my family (wife, daughter and two dogs) and have a job that I enjoy. That\u2019s basically it. Everything else is icing on the cake. I also have a ton of respect for single parents. How do you do it?! I could never. It takes a village to raise a child. Thankfully we have lots of family here in Arizona to help us. 2021 Highlights Here are some of my other highlights for the year: attempted my first SaaS started livestreaming on Twitch 3,174 GitHub Contributions $36,942.02 in side income revenue 119 hours in the gym, 208 workouts, 1,774,602lbs lifted Goals for 2022 I try to practice systems over goals but I have 3 main things I\u2019m focusing on for 2022. Be the Best Dad and Husband I feel very fortunate that we had our first baby in 2021. Now I want to do everything I can to be the best dad for her and the best husband for my wife. I will be mindful when I\u2019m with them. Protect them, love them and take care of them. One of this biggest things I\u2019d like to do is generate wealth so they have long-term financial support. Since I\u2019m the breadwinner in the family, I\u2019d like to earn and save enough so that if something terrible happens, money isn\u2019t an issue for them. Launch TS Course I launched my first course - Vim for VSCode - in 2020. I started working on a TypeScript course in 2021. In 2022, I will partner with egghead and launch the TypeScript course. The goal is to have industry-level impact akin to Testing JavaScript or Epic React. Double Side-Project Income (> $50k) I\u2019d like to double my side-project income. On the low-end, it should be over $50k. To actually double it though, it should be closer to $75k. I plan to do this through my courses (Vim & TypeScript) and job board & job referrals. We\u2019ll see. It feels like I\u2019m shooting for the moon, but it can\u2019t hurt to try. Conclusion That\u2019s all! Thanks for reading. If you have questions or comments, or just want to say hey, shoot me a DM on Twitter! Join the Newsletter I send a monthly newsletter with 1 exciting thing, 1 helpful thing, and new jobs. Email* awesomeperson@gmail.com By subscribing, you agree with Revue\u2019s Terms of Service and Privacy Policy. \u00a9 2022 Joe Previte","title":"2021 year review"},{"location":"public/other/Charlie%20Munger/","text":"","title":"Charlie Munger"},{"location":"public/other/guide-website/","text":"","title":"Guide website"},{"location":"public/other/learn-quickly/","text":"How to Learn Quickly \u00b6 A few months back, I set out a goal to learn Language deeply in 3 months and I did it. Since then, others have asked how they can do the same. The outcome is a result of using something that I like to call the Fast Framework. This guide will teach you how you can use it to learn anything quickly. Imagine you\u2019re in racing a car. Your goal is to cross the finish line. Taking this analogy, we break the framework into three phases: Make your Map \u00b6 Stay on Track \u00b6 Cross the Finishline \u00b6 In each phase, I\u2019ll cover different aspects that will help you learn fast and reach your goal. I\u2019ll use learning Language as the example. The first phase will cover the foundation for your learning project. Think of this as vision, timeframe, timeline, and organization. In the phase after, the focus will be staying on track and I\u2019ll discuss aspects related to accountability, momentum, sharing, and focus. In the final phase of the journey, the goal is to finish strong and cross the finishline. There, I\u2019ll talk about practice, confidence, vocabulary, and depth. Make your Map \u00b6 The first step is to make your map. This will help answer questions like: What does it mean to \u201clearn [insert thing]\u201c? \u00b6 How long will the project take? \u00b6 What are the expected outcomes? \u00b6 How am I going to organize my learning project? \u00b6 Write a Clear Vision \u00b6 For the vision, define your project and use the Objective Key Results (OKRs) framework. If you aren\u2019t familiar, this was popularized by the book \u201dMeasure What Matters\u201d and is used at companies like Google and Intuit. First, define what you expect to achieve. In my Language learning project, I wrote: Learn Language deeply and become the [Company] \u201cin-house expert\u201d That will be your Objective. Next, figure out how you\u2019re going to measure it. We refer to these as the Key Results. Continuing with my previous project, I wrote: Read \u201cProgramming Language\u201d by Boris Cherny \u00b6 Read the Official Language Handbook \u00b6 Produce small code examples for all concepts \u00b6 Contribute to Language, the language \u00b6 Contribute to Language-cheatsheets/react-Language-cheatsheet \u00b6 Don\u2019t rush through this part. \u00b6 Spend some time thinking about your objective and what you need to achieve to get there. Completing your key results should allow you to confidently say you\u2019ve completed your objective. With this vision in mind, you now have clarity on it means when you say \u201clearn [X]\u201d and you know what you expect to achieve. Establish a Timeframe \u00b6 You don\u2019t want to be racing on this map forever. You need to be realistic and ask yourself how much time you have for this. Estimating time to complete tasks is hard. You can use what I like to call the Timeframe Formula: Take the length of months you want to work on this, multiple by 4 to give the amount in weeks. Then multiple it by the number of hours per week that you want to dedicate. For example, when I did a similar project, I gave myself 3 months with 8 hours per week. Using the Timeframe Formula, you get: 3 months x 4 weeks/month x 8 hours/week = 96 hours total. You now have your timeframe. Use this to set expectations on how much time you plan to dedicate each week. Build a Timeline \u00b6 The next thing you need to add to your map is a timeline. Think of this as a week by week calendar. The timeframe answers the question of how long and the timeline answers the what will I do each week. It helps you think less because you will already know what to do for that week. It won\u2019t be perfect. You may need to readjust, but you will have removed friction. An example \u00b6 Week 1 (June 1) Programming Language Chapter 1 - Introduction Chapter 2 - Language: a 10_000 foot view Book exercises Chapter 3 - All About Types Book exercises Official Language Handbook Basic Types Variable Declarations You know yourself best. Think back to the Timeframe Formula. The example estimated 8hrs/week and 12 weeks in total. Knowing how fast you work (i.e. read, code, etc.), you would adjust accordingly. A complete timeline would have all the weeks filled out. Two important tips: \u00b6 Leave ~10% buffer towards the end \u00b6 Give yourself some breathing room \u00b6 Life comes up and you may fall behind. That\u2019s where the buffer comes in! Some weeks, you may find that you complete everything in 6 hours. No need to fill those two other hours if you don\u2019t want to. Reward yourself with rest. \u00b6 With a timeline, you are good to go! Keep it Organized \u00b6 You want to stay organized on this journey. That means a place to keep track of your timeline, log any notes or things you learn, and have visual indicators for the progress you\u2019re making. I use Notion for this because it supports project management well. I make a place for the project. I add the timeline and use checkboxes. Then, I check them off as I go and take notes as I\u2019m learning. Here is a non-exhaustive list of tools you might want to check out: Notion \u00b6 Trello \u00b6 Asana \u00b6 GitHub Projects \u00b6 Basecamp \u00b6 You could also use an analog tool such as a pen and paper. Stay on Track \u00b6 Now that we have our map, we are ready for the next phase: stay on track. In this phase, the goal is to focus on developing the systems that will help you stay accountable, build momentum, share with others and, stay focused. Keep Yourself Accountable \u00b6 You always want to stay accountable for your project. Think of this as your race crew. They make sure you\u2019re fueled, your tires are rotated, you\u2019re hydrated, and you\u2019re ready to finish the race. We want a similar type of support and accountability. It could be: a group of friends a family member a friend online All you need is at least one person with whom you can share updates. They don\u2019t have to know Language or even know how to code. But they do need to be someone with whom you can check-in regularly. For Language, I recommend looking for 2-3 people who will join you in your Language journey. I would post: on Twitter, using the #100DaysOfCode or #CodeNewbie hashtags on Dev.to, using the #Language and #discuss tags to start a discussion and share your project on the Language Discord For your own project, come up with a similar list of options. Explore them all. See where you find the most success and stick with it. 2-3 people is ideal, but at least 1 other person works fine. Build Momentum \u00b6 You want momentum. Momentum will keep you going on the track and heading towards the finish line. Think small wins, milestones and success spirals. Small wins are the little accomplishments that we oftentimes take for granted. Examples are things like learning a new word or understanding a concept. Celebrate these. Milestones are the next step up. These can either be date-based or achievement-based. Date-based would be hitting the 1-month mark in your 3-month timeframe for your learning project. Achievement-based would be finishing one of your key results. Either way, these are things to be celebrated and help you sustain the momentum. Success spiral is a term I first heard in Motivation Hack by Nick Winter. It\u2019s the idea that you set yourself up for success for starting small and moving outwards, like a spiral. In this case with Language, maybe you say, \u201cI\u2019m going to write one line of Language a day.\u201d Sounds trivial, right? Good, it should. You start there, establish the habit, then build upwards and outwards. Upwards meaning you continue doing it every day. Outwards meaning you increase the lines of code (without losing the habit). Share with Others \u00b6 Yoda quote, \"Always pass on what you have learned.\" One of the most important parts of staying on track is sharing with others and Learning in Public. There are various mediums you can choose from for sharing: Tweets Blog Posts Podcasts Videos Tutorials Courses Any of these ways work - and there are probably more I didn\u2019t list. This will aid your project for a few reasons: Help you retain what you\u2019re learning Build expertise in the area Meet others who are learning When I was learning Language, I tweeted as I learned. Not only did I meet other Language community members, but people corrected me or taught me new things. Towards the end, people started tweeted me asking for Language help. I didn\u2019t always know the answer, but my sharing with others and learning in public helped me build reputation and credibility. I even ended up attracting the attention of an editor for a tech blog who paid me to write a few Language articles. As you can see, it pays to share with others. Keep Your Focus \u00b6 The last piece I want to touch on for staying on track is keeping your focus. To stay on track, you have to keep yourself focused. The first and foremost is limit your focus. Ideally, learning Language is your main focus. I wouldn\u2019t suggest doing this and learning Rust or another language or something else. Keeping your attention on one project increases the likelihood you\u2019ll stay on track. The other thing you might want to try is deep work. An idea by Cal Newport, it\u2019s where you create an environment that lets you focus on that project for a certain amount of time (such as 1 hour or more) without distractions. Figure out when you\u2019re most productive. For me, it\u2019s in the morning before work. I wake up early, go through my routine, and then spend some time learning. Lastly, find tools to help you stay focused. I am a big fan of the Pomodoro Technique. I have an app called Stretchly that reminds me to take a 20-second break every 20 minutes and a 5-minute break every 40 minutes. This allows me to focus for that period and then rest. It then repeats itself like a cycle. Cross the Finishline \u00b6 The last and final leg of this learning journey is cross the finishline. You should make it there and feel accomplished. Here, you want to use systems that will help you practice, build confidence, remember vocabulary, and go for depth. Practice \u00b6 Learning means nothing without practice. With your new Language knowledge, you can build projects or contribute to open source. This is where the application phase of the learning cycle appears. It doesn\u2019t matter what you build, but that the act of building happens. When I was learning, I followed a tutorial to build a tiny compiler. It was written in JavaScript, but I did it in Language. This forced me to figure out things on my own. If you\u2019re learning something related to code, another idea is contributing to open source. Practice is where you learn the most. Build Confidence \u00b6 You want to build confidence in whatever you\u2019re learning. This will make you feel comfortable using your new knowledge. In the case of Language, you want to build Language Confidence. There are various ways to do this including: teaching others \u00b6 sharing (as we said before) \u00b6 reviewing what you\u2019ve learned \u00b6 helping others \u00b6 Many of these things translate over to other topics as well. \u00b6 The main thing is to feel confident in using your new skills or knowledge. Don\u2019t Skip Vocab \u00b6 Vocabulary is often overlooked. Don\u2019t skip out on it! It helps build confidence and it will solidify what you know. It\u2019s also a great tool to fight imposter syndrome. Knowing the vocabulary will allow you to build expertise. To learn and remember vocabulary, use a spaced-repetition system such as Anki. I used it with my Language learning project. You can use it to remember things such as: terminology \u00b6 concepts \u00b6 patterns \u00b6 syntax \u00b6 Take the thing you\u2019re learning, break it down into pieces and then build a list of vocabulary or concepts around those. Study these. This will benefit you in the long-run. Go for Depth \u00b6 The last thing in this phase is going for depth. Deep learning leads to deep understanding. There are two techniques you can use to deepen what you learn. The first is called the Feynman Technique. Take a concept you are learning, such as type inference in Language and explain it as you would to a seven-year-old. The idea is that if you can\u2019t do that, you don\u2019t know the concept well enough. Note: the age of the person to whom you\u2019re explaining your learning concept can vary. Focus on being able to explain something you understand to someone with little knowledge or context. The second technique I want to point out is called Ultralearning. In his book, Scott Young explains Ultralearning as, a strategy for aggressive, self-directed learning. Scott Young Think of it as taking something, being aggressive with how much or how fast you can learn it, and diving deep. You can use this with your learning projects. While you\u2019re learning, take notes of questions you have or concepts you don\u2019t quite understand. Then at the end of your project, see if those questions remain. If they do, start a new learning project and focus on answering those questions. As you can imagine, if you do this with a topic, you\u2019ll have several learning projects and soon start to develop expertise in this subject. It\u2019s very powerful. Summary \u00b6 The most important takeaway is this: use systems to help you learn better and faster. They will serve as your map, keep you on track and help you cross the finishline. If you were to do this with a programming language like Language, you would develop a proficiency, hopefully even expertise in the language. The next steps are to go out and use your new knowledge in the world! See what you can build. Find ways to help other people. And if you\u2019re ambitious, I challenge you to go deeper after you finish your first learning project. Use this framework and do another round of it. See how much you can learn! You\u2019ll never know the opportunities that may show up as a result. Tweak this learning framework to your liking and try it out on other projects - even non-technical ones. Adjust as needed. See how it works. Special thanks to my friends Sean, swyx, and Prince for reviewing and giving feedback.","title":"How to Learn Quickly"},{"location":"public/other/learn-quickly/#how-to-learn-quickly","text":"A few months back, I set out a goal to learn Language deeply in 3 months and I did it. Since then, others have asked how they can do the same. The outcome is a result of using something that I like to call the Fast Framework. This guide will teach you how you can use it to learn anything quickly. Imagine you\u2019re in racing a car. Your goal is to cross the finish line. Taking this analogy, we break the framework into three phases:","title":"How to Learn Quickly"},{"location":"public/other/learn-quickly/#make-your-map","text":"","title":"Make your Map"},{"location":"public/other/learn-quickly/#stay-on-track","text":"","title":"Stay on Track"},{"location":"public/other/learn-quickly/#cross-the-finishline","text":"In each phase, I\u2019ll cover different aspects that will help you learn fast and reach your goal. I\u2019ll use learning Language as the example. The first phase will cover the foundation for your learning project. Think of this as vision, timeframe, timeline, and organization. In the phase after, the focus will be staying on track and I\u2019ll discuss aspects related to accountability, momentum, sharing, and focus. In the final phase of the journey, the goal is to finish strong and cross the finishline. There, I\u2019ll talk about practice, confidence, vocabulary, and depth.","title":"Cross the Finishline"},{"location":"public/other/learn-quickly/#make-your-map_1","text":"The first step is to make your map. This will help answer questions like:","title":"Make your Map"},{"location":"public/other/learn-quickly/#what-does-it-mean-to-learn-insert-thing","text":"","title":"What does it mean to \u201clearn [insert thing]\u201c?"},{"location":"public/other/learn-quickly/#how-long-will-the-project-take","text":"","title":"How long will the project take?"},{"location":"public/other/learn-quickly/#what-are-the-expected-outcomes","text":"","title":"What are the expected outcomes?"},{"location":"public/other/learn-quickly/#how-am-i-going-to-organize-my-learning-project","text":"","title":"How am I going to organize my learning project?"},{"location":"public/other/learn-quickly/#write-a-clear-vision","text":"For the vision, define your project and use the Objective Key Results (OKRs) framework. If you aren\u2019t familiar, this was popularized by the book \u201dMeasure What Matters\u201d and is used at companies like Google and Intuit. First, define what you expect to achieve. In my Language learning project, I wrote: Learn Language deeply and become the [Company] \u201cin-house expert\u201d That will be your Objective. Next, figure out how you\u2019re going to measure it. We refer to these as the Key Results. Continuing with my previous project, I wrote:","title":"Write a Clear Vision"},{"location":"public/other/learn-quickly/#read-programming-language-by-boris-cherny","text":"","title":"Read \u201cProgramming Language\u201d by Boris Cherny"},{"location":"public/other/learn-quickly/#read-the-official-language-handbook","text":"","title":"Read the Official Language Handbook"},{"location":"public/other/learn-quickly/#produce-small-code-examples-for-all-concepts","text":"","title":"Produce small code examples for all concepts"},{"location":"public/other/learn-quickly/#contribute-to-language-the-language","text":"","title":"Contribute to Language, the language"},{"location":"public/other/learn-quickly/#contribute-to-language-cheatsheetsreact-language-cheatsheet","text":"","title":"Contribute to Language-cheatsheets/react-Language-cheatsheet"},{"location":"public/other/learn-quickly/#dont-rush-through-this-part","text":"Spend some time thinking about your objective and what you need to achieve to get there. Completing your key results should allow you to confidently say you\u2019ve completed your objective. With this vision in mind, you now have clarity on it means when you say \u201clearn [X]\u201d and you know what you expect to achieve.","title":"Don\u2019t rush through this part."},{"location":"public/other/learn-quickly/#establish-a-timeframe","text":"You don\u2019t want to be racing on this map forever. You need to be realistic and ask yourself how much time you have for this. Estimating time to complete tasks is hard. You can use what I like to call the Timeframe Formula: Take the length of months you want to work on this, multiple by 4 to give the amount in weeks. Then multiple it by the number of hours per week that you want to dedicate. For example, when I did a similar project, I gave myself 3 months with 8 hours per week. Using the Timeframe Formula, you get: 3 months x 4 weeks/month x 8 hours/week = 96 hours total. You now have your timeframe. Use this to set expectations on how much time you plan to dedicate each week.","title":"Establish a Timeframe"},{"location":"public/other/learn-quickly/#build-a-timeline","text":"The next thing you need to add to your map is a timeline. Think of this as a week by week calendar. The timeframe answers the question of how long and the timeline answers the what will I do each week. It helps you think less because you will already know what to do for that week. It won\u2019t be perfect. You may need to readjust, but you will have removed friction.","title":"Build a Timeline"},{"location":"public/other/learn-quickly/#an-example","text":"Week 1 (June 1) Programming Language Chapter 1 - Introduction Chapter 2 - Language: a 10_000 foot view Book exercises Chapter 3 - All About Types Book exercises Official Language Handbook Basic Types Variable Declarations You know yourself best. Think back to the Timeframe Formula. The example estimated 8hrs/week and 12 weeks in total. Knowing how fast you work (i.e. read, code, etc.), you would adjust accordingly. A complete timeline would have all the weeks filled out.","title":"An example"},{"location":"public/other/learn-quickly/#two-important-tips","text":"","title":"Two important tips:"},{"location":"public/other/learn-quickly/#leave-10-buffer-towards-the-end","text":"","title":"Leave ~10% buffer towards the end"},{"location":"public/other/learn-quickly/#give-yourself-some-breathing-room","text":"","title":"Give yourself some breathing room"},{"location":"public/other/learn-quickly/#life-comes-up-and-you-may-fall-behind-thats-where-the-buffer-comes-in-some-weeks-you-may-find-that-you-complete-everything-in-6-hours-no-need-to-fill-those-two-other-hours-if-you-dont-want-to-reward-yourself-with-rest","text":"With a timeline, you are good to go!","title":"Life comes up and you may fall behind. That\u2019s where the buffer comes in! Some weeks, you may find that you complete everything in 6 hours. No need to fill those two other hours if you don\u2019t want to. Reward yourself with rest."},{"location":"public/other/learn-quickly/#keep-it-organized","text":"You want to stay organized on this journey. That means a place to keep track of your timeline, log any notes or things you learn, and have visual indicators for the progress you\u2019re making. I use Notion for this because it supports project management well. I make a place for the project. I add the timeline and use checkboxes. Then, I check them off as I go and take notes as I\u2019m learning. Here is a non-exhaustive list of tools you might want to check out:","title":"Keep it Organized"},{"location":"public/other/learn-quickly/#notion","text":"","title":"Notion"},{"location":"public/other/learn-quickly/#trello","text":"","title":"Trello"},{"location":"public/other/learn-quickly/#asana","text":"","title":"Asana"},{"location":"public/other/learn-quickly/#github-projects","text":"","title":"GitHub Projects"},{"location":"public/other/learn-quickly/#basecamp","text":"You could also use an analog tool such as a pen and paper.","title":"Basecamp"},{"location":"public/other/learn-quickly/#stay-on-track_1","text":"Now that we have our map, we are ready for the next phase: stay on track. In this phase, the goal is to focus on developing the systems that will help you stay accountable, build momentum, share with others and, stay focused.","title":"Stay on Track"},{"location":"public/other/learn-quickly/#keep-yourself-accountable","text":"You always want to stay accountable for your project. Think of this as your race crew. They make sure you\u2019re fueled, your tires are rotated, you\u2019re hydrated, and you\u2019re ready to finish the race. We want a similar type of support and accountability. It could be: a group of friends a family member a friend online All you need is at least one person with whom you can share updates. They don\u2019t have to know Language or even know how to code. But they do need to be someone with whom you can check-in regularly. For Language, I recommend looking for 2-3 people who will join you in your Language journey. I would post: on Twitter, using the #100DaysOfCode or #CodeNewbie hashtags on Dev.to, using the #Language and #discuss tags to start a discussion and share your project on the Language Discord For your own project, come up with a similar list of options. Explore them all. See where you find the most success and stick with it. 2-3 people is ideal, but at least 1 other person works fine.","title":"Keep Yourself Accountable"},{"location":"public/other/learn-quickly/#build-momentum","text":"You want momentum. Momentum will keep you going on the track and heading towards the finish line. Think small wins, milestones and success spirals. Small wins are the little accomplishments that we oftentimes take for granted. Examples are things like learning a new word or understanding a concept. Celebrate these. Milestones are the next step up. These can either be date-based or achievement-based. Date-based would be hitting the 1-month mark in your 3-month timeframe for your learning project. Achievement-based would be finishing one of your key results. Either way, these are things to be celebrated and help you sustain the momentum. Success spiral is a term I first heard in Motivation Hack by Nick Winter. It\u2019s the idea that you set yourself up for success for starting small and moving outwards, like a spiral. In this case with Language, maybe you say, \u201cI\u2019m going to write one line of Language a day.\u201d Sounds trivial, right? Good, it should. You start there, establish the habit, then build upwards and outwards. Upwards meaning you continue doing it every day. Outwards meaning you increase the lines of code (without losing the habit).","title":"Build Momentum"},{"location":"public/other/learn-quickly/#share-with-others","text":"Yoda quote, \"Always pass on what you have learned.\" One of the most important parts of staying on track is sharing with others and Learning in Public. There are various mediums you can choose from for sharing: Tweets Blog Posts Podcasts Videos Tutorials Courses Any of these ways work - and there are probably more I didn\u2019t list. This will aid your project for a few reasons: Help you retain what you\u2019re learning Build expertise in the area Meet others who are learning When I was learning Language, I tweeted as I learned. Not only did I meet other Language community members, but people corrected me or taught me new things. Towards the end, people started tweeted me asking for Language help. I didn\u2019t always know the answer, but my sharing with others and learning in public helped me build reputation and credibility. I even ended up attracting the attention of an editor for a tech blog who paid me to write a few Language articles. As you can see, it pays to share with others.","title":"Share with Others"},{"location":"public/other/learn-quickly/#keep-your-focus","text":"The last piece I want to touch on for staying on track is keeping your focus. To stay on track, you have to keep yourself focused. The first and foremost is limit your focus. Ideally, learning Language is your main focus. I wouldn\u2019t suggest doing this and learning Rust or another language or something else. Keeping your attention on one project increases the likelihood you\u2019ll stay on track. The other thing you might want to try is deep work. An idea by Cal Newport, it\u2019s where you create an environment that lets you focus on that project for a certain amount of time (such as 1 hour or more) without distractions. Figure out when you\u2019re most productive. For me, it\u2019s in the morning before work. I wake up early, go through my routine, and then spend some time learning. Lastly, find tools to help you stay focused. I am a big fan of the Pomodoro Technique. I have an app called Stretchly that reminds me to take a 20-second break every 20 minutes and a 5-minute break every 40 minutes. This allows me to focus for that period and then rest. It then repeats itself like a cycle.","title":"Keep Your Focus"},{"location":"public/other/learn-quickly/#cross-the-finishline_1","text":"The last and final leg of this learning journey is cross the finishline. You should make it there and feel accomplished. Here, you want to use systems that will help you practice, build confidence, remember vocabulary, and go for depth.","title":"Cross the Finishline"},{"location":"public/other/learn-quickly/#practice","text":"Learning means nothing without practice. With your new Language knowledge, you can build projects or contribute to open source. This is where the application phase of the learning cycle appears. It doesn\u2019t matter what you build, but that the act of building happens. When I was learning, I followed a tutorial to build a tiny compiler. It was written in JavaScript, but I did it in Language. This forced me to figure out things on my own. If you\u2019re learning something related to code, another idea is contributing to open source. Practice is where you learn the most.","title":"Practice"},{"location":"public/other/learn-quickly/#build-confidence","text":"You want to build confidence in whatever you\u2019re learning. This will make you feel comfortable using your new knowledge. In the case of Language, you want to build Language Confidence. There are various ways to do this including:","title":"Build Confidence"},{"location":"public/other/learn-quickly/#teaching-others","text":"","title":"teaching others"},{"location":"public/other/learn-quickly/#sharing-as-we-said-before","text":"","title":"sharing (as we said before)"},{"location":"public/other/learn-quickly/#reviewing-what-youve-learned","text":"","title":"reviewing what you\u2019ve learned"},{"location":"public/other/learn-quickly/#helping-others","text":"","title":"helping others"},{"location":"public/other/learn-quickly/#many-of-these-things-translate-over-to-other-topics-as-well","text":"The main thing is to feel confident in using your new skills or knowledge.","title":"Many of these things translate over to other topics as well."},{"location":"public/other/learn-quickly/#dont-skip-vocab","text":"Vocabulary is often overlooked. Don\u2019t skip out on it! It helps build confidence and it will solidify what you know. It\u2019s also a great tool to fight imposter syndrome. Knowing the vocabulary will allow you to build expertise. To learn and remember vocabulary, use a spaced-repetition system such as Anki. I used it with my Language learning project. You can use it to remember things such as:","title":"Don\u2019t Skip Vocab"},{"location":"public/other/learn-quickly/#terminology","text":"","title":"terminology"},{"location":"public/other/learn-quickly/#concepts","text":"","title":"concepts"},{"location":"public/other/learn-quickly/#patterns","text":"","title":"patterns"},{"location":"public/other/learn-quickly/#syntax","text":"Take the thing you\u2019re learning, break it down into pieces and then build a list of vocabulary or concepts around those. Study these. This will benefit you in the long-run.","title":"syntax"},{"location":"public/other/learn-quickly/#go-for-depth","text":"The last thing in this phase is going for depth. Deep learning leads to deep understanding. There are two techniques you can use to deepen what you learn. The first is called the Feynman Technique. Take a concept you are learning, such as type inference in Language and explain it as you would to a seven-year-old. The idea is that if you can\u2019t do that, you don\u2019t know the concept well enough. Note: the age of the person to whom you\u2019re explaining your learning concept can vary. Focus on being able to explain something you understand to someone with little knowledge or context. The second technique I want to point out is called Ultralearning. In his book, Scott Young explains Ultralearning as, a strategy for aggressive, self-directed learning. Scott Young Think of it as taking something, being aggressive with how much or how fast you can learn it, and diving deep. You can use this with your learning projects. While you\u2019re learning, take notes of questions you have or concepts you don\u2019t quite understand. Then at the end of your project, see if those questions remain. If they do, start a new learning project and focus on answering those questions. As you can imagine, if you do this with a topic, you\u2019ll have several learning projects and soon start to develop expertise in this subject. It\u2019s very powerful.","title":"Go for Depth"},{"location":"public/other/learn-quickly/#summary","text":"The most important takeaway is this: use systems to help you learn better and faster. They will serve as your map, keep you on track and help you cross the finishline. If you were to do this with a programming language like Language, you would develop a proficiency, hopefully even expertise in the language. The next steps are to go out and use your new knowledge in the world! See what you can build. Find ways to help other people. And if you\u2019re ambitious, I challenge you to go deeper after you finish your first learning project. Use this framework and do another round of it. See how much you can learn! You\u2019ll never know the opportunities that may show up as a result. Tweak this learning framework to your liking and try it out on other projects - even non-technical ones. Adjust as needed. See how it works. Special thanks to my friends Sean, swyx, and Prince for reviewing and giving feedback.","title":"Summary"},{"location":"public/other/main/","text":"Video Guide-Website roadmap 2021-year-review uses learn-quickly outer-links","title":"Main"},{"location":"public/other/no-included-uses/","text":"One of my favorite things to share with others is setups! It\u2019s fun to see what others use and share my own setup. To make things easier, I\u2019ve broken it into two categories: gear and software. Gear This is a mix of personal and work gear. Some I bought myself (new or used) and other parts were paid for by my company. Desk Setup Here is everything related to how my desk is set up at home. Desk I use a standing desk, specifically the Autonomous SmartDesk2 - Home Office. Chair With a work stipend, I purchased an Autonomous ErgoChair 2. Laptop For work, I have a MacBook Pro 16-inch and at home, I use an iMac or a 13-inch MacBook. Laptop Stand At home, I\u2019m usually working with one monitor (laptop) so I use a laptop stand to not have to bend over. I invested in the Roost a while back. It\u2019s a bit overpriced, but lightweight and does the job. Now, I might look at one of the competitors if I were to buy one today. Keyboard I switch between an Apple Magic Keyboard (personal) and a Kinesis Freestyle Edge (work). The Edge is a split keyboard and I am a huge fan! Mouse I switch between an Apple Magic Trackpad (personal) and an MX Logitech Vertical Mouse (work). Microphone I use Shure BETA 87A (thanks to my friends at egghead). Microphone Boom Arm I started streaming for work so I invested in a boom arm and went with the Rode PSA1. Big fan! Webcam Part of what I do for work is record videos so they let me buy a new webcam: Logitech BRIO. I am very happy with it! Works well for streaming and video meetings. Streamdeck Again, I stared streaming for work so they let me buy an Elegato Stream Deck 15-key. Software Most of this is software I use to work efficiently and productively. I\u2019ve switched back and forth between a lot of tools, but this is what I\u2019m using currently. Editor and Terminal IDE I switched from Sublime to VS Code years ago and I can\u2019t see myself going back. I used to use the Sublime keybindings in VS Code. However, last year I switched to the Vim keybindings. It took some time to reach the same speed, but I would say I\u2019ve surpassed my previous speed and added a few new tricks thanks to Vim. Terminal I use iTerm2. A friend told me about it a while ago. I switched to it and haven\u2019t looked back. Theme I switch between themes. Right now, I\u2019m using Noctis and happy with it. zsh and prezto I use zsh and prezto on top of that. Starship I found this by luck while exploring Rust. If anything, it lets you easily customize emojis used within your terminal for different programs. Productivity Random desktop apps that I use for productivity or other reasons. Notion I am HUGE Notion fan! I pay for the personal plan to get unlimited blocks and use it both for personal and work. I use it for task/project management and structure it using the P.A.R.A. method. Trello Trello has a special place in my heart. I have a few boards to keep track of project ideas and other personal stuff. ScreenFlow Similar to the microphone from egghead, I use ScreenFlow to record and edit my videos (mostly screencasts). Gifox 2 For PRs and showing things to friends or coworkers, I use Gifox 2. I paid for the pro version and use it on both my personal and work machine. Stretchly Stretchly is a handy app for reminding me to take breaks. Clippy or Flycut A coworker once told me about his clipboard history app. I thought it was genius and since then have used both Flycut and Clippy. Alfred As of writing this, I haven\u2019t caved to buy the Alfred Powerpack (though I may\u2026), I mainly use it because it\u2019s faster than Spotlight on macOS and does some cool things like let you shutdown your mac by typing \u201cshutdown.\u201d Rocket I like emojis a lot. I bought Rocket and am a huge fan. Flux Although maOS now has a built-in dimming feature, I don\u2019t find it to be as great as Flux so I use Flux to dim my screen/remove bluelight as the sunsets. Keeping You Awake Keeping You Awake is a fantastic app for preventing your mac from going to sleep. Spectacle and Rectangle For window management, I use Spectacle (personal) or Rectangle (work).","title":"No included uses"},{"location":"public/other/outer-links/","text":"Links Last updated: 09/19/2021 These are all the important links you should know about. Featured Streaming on Twitch - I stream about webdev, indie hacking and web3. Vim for VSCode - hands-on course that teaches you how to use Vim inside VSCode Joe\u2019s Jobs - my job board which has the best jobs in product, engineering, OSS and more. New roles drop every Tuesday. dip.chat - accountability groups for developers Basics of TypeScript - this is a weekly Telegram newsletter, but will eventually be a TypeScript course monthly newsletter - related to programming and learning. I also share goodies and deals here. I\u2019m also actively seeking out companies that are interested in collaborating. If that\u2019s you, DM me on Twitter or shoot me an email joe at this domain. Other Things I\u2019ve done in the past that may be of interest to you: The Beginner\u2019s Guide to Figma - pro course on egghead Shareable Custom Hooks in React - pro course on egghead","title":"Outer links"},{"location":"public/other/roadmap/","text":"RoadMap \u00b6 I had a lot of fun making this a challenge for myself! I feel more motivated to continue contributing to Rust OSS What\u2019s next? Next up in my Ultralerning Plan is to: build and ship a small project in Rust I already built a small temperature converter suggested by the Rust Lang Book at the end of Chapter 3. However, for this particular goal, I assigned myself the task to \u201cBuild a small web server app (bunny1 clone).\u201d I already started on the project and have made solid progress. I still need to refactor a few pieces and ship it. After, I\u2019ll share a blog post about how I built it and a link so you can check it out.","title":"RoadMap"},{"location":"public/other/roadmap/#roadmap","text":"I had a lot of fun making this a challenge for myself! I feel more motivated to continue contributing to Rust OSS What\u2019s next? Next up in my Ultralerning Plan is to: build and ship a small project in Rust I already built a small temperature converter suggested by the Rust Lang Book at the end of Chapter 3. However, for this particular goal, I assigned myself the task to \u201cBuild a small web server app (bunny1 clone).\u201d I already started on the project and have made solid progress. I still need to refactor a few pieces and ship it. After, I\u2019ll share a blog post about how I built it and a link so you can check it out.","title":"RoadMap"},{"location":"public/programming/armanriazi-movies-reactjs/","tags":["github","couchdb","ibm","reactjs","nodejs","expressjs","api","restapi","cloud","sample","cicd","devops"],"text":"armanriazi-movies-reactjs \u00b6 online: armanriazi-movies-reactjs.herokuapp Improved speed and performance. I developed a sample-project base on [[Reactjs]], [[Nodejs]], [[Couchdb]], [[IBM]] ,and [[Cloud]], on [[Heroku]] [[CICD]]. I wanted to start work on reactjs that I think it has a main components include grid, list, search, connected to db. I have got satisfied with mix of couchdb and reactjs! Why not! both of them are good choice for frontend and database with o/i json. Github Repository [[Github-ArmanRiazi]]","title":"armanriazi-movies-reactjs"},{"location":"public/programming/armanriazi-movies-reactjs/#armanriazi-movies-reactjs","text":"online: armanriazi-movies-reactjs.herokuapp Improved speed and performance. I developed a sample-project base on [[Reactjs]], [[Nodejs]], [[Couchdb]], [[IBM]] ,and [[Cloud]], on [[Heroku]] [[CICD]]. I wanted to start work on reactjs that I think it has a main components include grid, list, search, connected to db. I have got satisfied with mix of couchdb and reactjs! Why not! both of them are good choice for frontend and database with o/i json. Github Repository [[Github-ArmanRiazi]]","title":"armanriazi-movies-reactjs"},{"location":"public/programming/armanriazi-vidly-api/","tags":["github","couchdb","ibm","reactjs","nodejs","expressjs","api","restapi","cloud","sample","cicd","devops"],"text":"armanriazi-vidly-api \u00b6 online: armanriazi-vidly-api.herokuapp Improved speed and performance. I developed a sample-project base on #expressjs, [[Restapi]], [[Api]], [[Nodejs]], [[Couchdb]], [[IBM]] ,and [[Cloud]], on [[Heroku]] [[CICD]]. I wanted to start work on reactjs that I think it has a main components include grid, list, search, connected to db. I have got satisfied with mix of couchdb and reactjs! Why not! both of them are good choice for frontend and database with o/i json. Example APIs Query Genre: https://armanriazi-vidly-api.herokuapp.com/api/genres/name/comedy Token Generate: https://armanriazi-vidly-api.herokuapp.com/api/auth/yourRefToken Github Repository [[Github-ArmanRiazi]]","title":"armanriazi-vidly-api"},{"location":"public/programming/armanriazi-vidly-api/#armanriazi-vidly-api","text":"online: armanriazi-vidly-api.herokuapp Improved speed and performance. I developed a sample-project base on #expressjs, [[Restapi]], [[Api]], [[Nodejs]], [[Couchdb]], [[IBM]] ,and [[Cloud]], on [[Heroku]] [[CICD]]. I wanted to start work on reactjs that I think it has a main components include grid, list, search, connected to db. I have got satisfied with mix of couchdb and reactjs! Why not! both of them are good choice for frontend and database with o/i json. Example APIs Query Genre: https://armanriazi-vidly-api.herokuapp.com/api/genres/name/comedy Token Generate: https://armanriazi-vidly-api.herokuapp.com/api/auth/yourRefToken Github Repository [[Github-ArmanRiazi]]","title":"armanriazi-vidly-api"},{"location":"public/programming/programming/","tags":["rust","programming","codebase","github"],"text":"Rust Rust Rust","title":"Programming"},{"location":"public/programming/rust/rust-lang-ecosystem/","text":"Understanding the Rust Ecosystem \u00b6 Last updated: 06/15/2020(Copied) Rust, a systems-programming language, which prides itself on being Stack Overflow\u2019s \u201c most loved language for five years in row \u201d and GitHub\u2019s second fastest growing (235% 2018-2019) has gained popularity both at companies like Amazon, FB, Discord and externally within the programming community. For part of my job, I have been focused on developing my own understanding of the space. I work within the DevTools pillar and focus primarily on programming languages. My main priority for H1 of 2020 has been Rust. The goal of this article is: To paint a high-level overview of the ecosystem The article covers various aspects of the ecosystem including community, companies using the language, selling points, etc. Overview \u00b6 One of the hardest parts of understanding a programming language is setting the boundaries for what you encapsulate as part of and not part of the ecosystem. I gathered input coworkers and mentors in order to set the criteria for this project. For our purposes, I choose to limit it to the following areas, which you\u2019ll see below. For each section, you can expect: A brief description of how I defined the section Key highlights from the ecosystem for that area of the ecosystem Academic Research \u00b6 Things that fall under this category might be research papers, academic presentations, and anything related. It was difficult to find much in this area, but here are a few highlights: Memory-Safety Challenge Considered Solved? An Empirical Study with All Rust CVEs What can the programming language Rust do for astrophysics? RustBelt: Securing the Foundations of the RustProgramming Language Rust-Like Borrowing with 2nd-Class Values (Short Paper) Safe Systems Programming in Rust:The Promise and the Challenge Fearless Concurrency? Understanding Concurrent Programming Safety in Real-World Rust Software As you can tell from skimming the headings, researchers are looking at Rust\u2019s use cases, security, memory management, type-safety and concurrency. It\u2019s unfortunate there isn\u2019t an easy way to stay on top of academic research within Rust. Demographics \u00b6 When you look at the programming language, how do you know who is using it? What industries do they work in? Fortunately, the Rust Survey 2019 Results provides insight related to demographics. Based on the results, here are the key highlights: Respondents\u2019 top five languages: English, Chinese, German, French and Japanese Top five industries using Rust: Backend Web Applications, Distributed Systems, Embedded Devices, IT and Network Programming Top three titles for Rust users: Programmer/Software Engineer, Systems Architect, Web Developer/Front End Developer It\u2019s unfortunate that we do not have more information related to demographics such as gender, ethnicity, race, etc. There was an attempt to gather some of this information in the 2016 survey . Know that this section contains a small glimpse into the people of the Rust and is far from complete or representative of the ecosystem. Community \u00b6 Community itself is a huge category. I tried my best to break it into subcategories for things that might fit here. In general, think of this area as the various places where members of the community congregate (online and in-person), groups who write code, and foundations. These are a combination of chat platforms, but also places where updates are shared with the community. Here are some worth noting: Chat Platforms Discord (35,597 members total) The Rust Programming Language (25,135 members) Rust Programming Language Community Server (10,462 members) Rust lang Slack (3,046 people) Rust Team Zulip (655 people) (mainly focused on people who work on Rust itself) Conferences FOSDEM RustConf Rusty Days RustFest Netherlands Rust + GNOME Hackfest Rust Latam RustLab Oxidize List of 2020 events on the Rust lang blog Core contributors Governance - all the different core team members associated with each team GitHub Rustlang org members GitHub committers - over 2k people have contributed to /rust repo Rust team alumni - people who worked on a Rust team previously Forums Users forum (14.2k) Internals forum (6.8k) r/rust -Reddit (100k people) Meetups Stats (meetups with the topic \u201crust\u201d ) 73,706 members 1,749 interested 204 Meetups 145 cities 42 countries Groups (not all listed, some highlights) Desert Rust (Phoenix, AZ) Minneapolis Rust Meetup Rusty Bay Area Meetup Rust Bangalore Rust Berlin Rust in Blockchain Rust Los Angeles Rust London User Group Rust Dev in Mountain View Meetup Rust Denver Rust NYC Rust Nairobi Rust Paris San Diego Rust Seattle Rust Meetup Utah Rust Miscellaneous RFCs (2.9k stars) - where technical decisions are made in regards to Rust This Week in Rust - weekly newsletter Programs Rust\u2019s Reach (currently on hold due to lack of funding and people) - \u201cmentorship like program between participants from URGs and Rust team members\u201d Rust Bridge (1 chapter) - \u201ca workshop focused on getting underrepresented people with a background in another programming language to learn Rust and join the community.\u201d *These stats were taken on 5/19/2020 As you can see, the community category extends itself across many platforms and mediums online. It\u2019s easy to overwhelm oneself with all the places you can go to get involved. The beautiful part is that there is no shortage of finding ways to meet others within the community. *For the data in the \u201cMeetups > Stats\u201d category, you\u2019ll notice that it includes some meetups that are not specifically for Rust so take that number with a grain of salt. Companies \u00b6 It would be impossible to list all the companies that use Rust. This is a sub-selection of notable companies (more well-known) that are using or investing in Rust, ideally along with articles where they share how they\u2019re using it or helping the ecosystem: Amazon AWS is sponsoring the Rust programming language - AWS Open Source Blog (October 2019) \u201c\u2026 AWS staff open-sourced a virtualization technology named Firecracker that was coded primarily in Rust \u201d - zdnet.com article (October 2019) \u201c_As Rust starts to take up a larger chunk of Amazon\u2019s backend code, the company is making sure the project has the means to continue to evolve and fix security issues.\u201d _-_ _ zdnet.com article (October 2019) AWS sponsors RustConf - AWS Open Source Blog (2018 - 2020) Apple Rust for server-side Linux on Apple Cloud Traffic (March 2020) Atlassian (makers of Jira) Use Rust in the backend for analyzing terabytes of source code Cloudflare Cloudflare uses Rust in production for WebAssembly edge computing as well as a lot of foundational infrastructure (2018-2019) Discord \u201cWhy Discord is switching from Go to Rust\u201d - (February 2020) 11.9K claps \u201cUsing Rust to Scale Elixir for 11 Million Concurrent Users\u201d - (May 2019) 6.4K claps Dropbox Dropbox is highlighted on the /production page of the rust-lang.org website - (currently - March 2020) Go-ing to Rust: Optimizing Storage at Dropbox - (November 2017) Dropbox is mentioned on official Rust lang blog - (May 2017) \u201cThe Epic Story of Dropbox\u2019s Exodus From the Amazon Cloud Empire\u201d - (March 2016) Facebook Developers have named Rust their most-loved programming language five years in a row. Here\u2019s why developers at Facebook, Dropbox, and Amazon all adore it - (June 2020) The Relay Team is experimenting with a \u201crewrite of the Relay compiler in Rust\u201d (May 2020) Mononoke, the new Mercurial backend, was written from scratch in Rust GitHub GitHub donating VMs for GitHub Actions (April 2020) Google Rust makes up increasingly large parts of Google\u2019s Fuchsia operating system Chrome OS\u2019s virtualization infrastructure and several other components are in Rust Android uses Rust Chromium is beginning to adopt Rust Google released an \u201cunofficial\u201d project called [tarpc](https://github.com/google/tarpc) \u201cAn RPC framework for Rust\u201d Microsoft Microsoft featured on /sponsors page \u201cMicrosoft opens up Rust-inspired Project Verona programming language on GitHub\u201d - (Jan 2020) \u201cMicrosoft looks to Rust language to beat memory vulnerabilities\u201d - (Dec 2019) \u201cMicrosoft Exploring Rust as the Solution for Safe Software\u201d - (Nov 2019) Azure Pipelines sponsoring Rust - (Oct 2019) Microsoft looking into Rust for security reasons . - (July 2019) \u201cMicrosoft eyes Mozilla\u2019s Rust to obliterate C++ memory security flaws\u201d - (July 2019) Azure IoT Edge has been using Rust since at least 2018 Mozilla Rust is used in Firefox through a project called Oxidation Mozilla is writing a browser written in Rust called Servo \u201cRust 2018 is here\u2026 but what is it?\u201d - (Dec 2018) \u201cMozilla binds Firefox\u2019s fate to the Rust language\u201d - (Feb 2017) \u201cProject for porting C to Rust gains Mozilla\u2019s backing\u201d - (Oct 2016) npm Performance critical registry service architecture is Rust Reddit Uses Rust for comment processing Twitter Build team has been using Rust in production for ~3 years and intend for it to make up a large portion of their codebase going forward Yelp Yelp is featured under the \u201cRust in production\u201d section of rust-lang.org , they talk about how they use it in this talk - (Aug 2018) Honorable Mentions There is a list of production users on the rust-lang.org website \u201cA Snapshot of Rust\u2019s Popularity in July 2018\u201d Nike using Rust Language \u00b6 Think core library, compiler, type system. Basically all the code that makes up the language and some of the tools that help with writing code in Rust. Books & References Asynchronous Programming In Rust Book Command Line Applications in Rust The Rust Programming Language Book The Cargo Book - info about the rust package manager The Rustonomicon Book - the dark arts of unsafe Rust The Rust Reference Book Rust Compiler Error Index - book on all the rust compiler errors rustdoc Book - all about rustdoc and writing documentation in Rust std - standard library docs Code & DevTools Cargo the package manager + build system Core language Rust-clippy - official linter Rustfmt - official formatter rustc - the Rust compiler (inside the core language) Language Frameworks \u00b6 What would a programming language be without frameworks? Thankfully, the community resource rust-web-framework-comparison made this research easy. Here is a long list: Client frameworks actix-web ( homepage / repository / api docs ) reqwest (- / repository / documentation ) hyper ( homepage / repository / documentation ) jsonrpc (- / repository / documentation ) Frontend frameworks (WASM) stdweb ( - / repository / documentation ) A standard library for the client-side Web yew ( homepage / repository / documentation ) - A frontend framework inspired by Elm and React (based on stdweb) percy ( homepage / repository / - ) - A modular toolkit for building isomorphic web apps seed ( homepage / repository / - ) - A Rust framework for creating web apps draco ( - / repository / documentation ) - A frontend framework inspired by Redux and Elm smithy ( homepage - / repository / - documentation ) - A front-end framework squark ( - / repository / documentation ) - Rust frontend framework, for web browser and more. willow ( homepage - / repository / - ) - A frontend framework inspired by Elm dodrio ( - / repository / documentation ) - A fast, bump-allocated virtual DOM library. dominator ( - / repository / documentation - Zero cost declarative DOM library using FRP signals for Rust!. mika ( homepage / repository / - ) - A signal-based framework for building front-end app, it tries to help, but may cause annoyances. Server frameworks actix-web ( homepage / repository / documentation / user guide ) gotham ( homepage / repository / documentation / examples ) iron ( homepage / repository / documentation ) nickel ( homepage / repository / documentation ) rocket ( homepage / repository / documentation ) rouille ( - / repository / documentation ) Thruster ( - / repository / documentation / examples ) Tide ( - / repository / documentation / examples ) tower-web ( - / repository / documentation / examples ) warp ( - / repository / documentation / examples ) Static site generators zola ( homepage / repository / documentation ) Templating frameworks tera ( homepage / repository / documentation ) mustache (- / repository / documentation ) liquid (- / repository / - ) handlebars (- / repository / documentation ) horrorshow (- / repository / documentation ) maud ( homepage / repository / documentation ) askama (- / repository / documentation ) stpl (- / repository / - ) ructe (- / repository / documentation ) typed-html (- / repository / documentation ) Websocket frameworks websocket ( homepage / repository / documentation ) ws-rs ( homepage / repository / documentation ) tungstenite ( - / repository / documentation ) actix-web ( homepage / repository / documentation ) Again, this is a bit overwhelming for a new person learning Rust. It\u2019s difficult to know what to choose. However, it\u2019s also a benefit having the ability to try out various solutions and see what works best. Learning \u00b6 Similar to the Community category, learning can be quite difficult to narrow down. I have tried my best to highlight the main areas and a few examples for each category. Know that this list is non-exhaustive and more a brief survey into this area of the ecosystem. Articles A collection of notable Rust bloggers Each week, This Week in Rust shares articles Fearless Rust Bloggers Learning Rust - Pascal Precht Read Rust - Rust blog post aggregator Writing an OS in Rust Books Programming Rust - O\u2019Reilly Media Rust in Action - Manning Bootcamps No response on Rust users forum No response on Twitter NobleProg Rust microcourse Classes (specifically academic, in universities) Northwestern University Rust being taught at University of Maryland, College Park Stanford\u2019s Programming Languages course dedicates 3.5 weeks to Rust Stanford\u2019s Operating Systems course in Rust University of Pennsylvania University of Virginia (first class) Tutorials Rustlings - Small exercises to get you used to reading and writing Rust code rust-learning - detailed list of awesome learning materials Tour of Rust - Step by step guide through the features of the Rust programming language Courses Intro to Rust - YouTube Rust Crash Course - YouTube Rust Projects - YouTube The Rust Programming Language - Udemy Using Web Assembly with Rust - egghead Write your First Program with Rust - egghead Videos Learning Rust - two people pair-programming and going chapter by chapter through the Rust Lang Book Into_rust - screencast series Workshops Ferrous Systems - paid workshops for companies and teams RustBridge - an organization that is part of the official Rust group. Systems Programming with Rust (at a conference) Packages \u00b6 One of the most important aspects of a programming language ecosystem is a way to share code with others. In the Rust ecosystem, the most common way is through packages, more commonly referred to as \u201ccrates\u201d. Below are links to two places where you can share code (your own private registry or the public one): Cloudsmith - create your own private cargo registry crates.io - \u201cThe Rust community\u2019s crate registry\u201d libs.rs - \u201cFast, lightweight, opinionated, unofficial alternative to crates.io\u201d Platforms \u00b6 The objective for this section was to figure out where Rust code can run. What platforms or systems are people targeting or building for? We saw a few of these mentioned in the Frameworks section. Here are the most common ones I could find (and some examples): Browser WebAssembly Wasm-bindgem Rust to WASM + Next CLI Apps clap Build binaries for Linux, macOS and Windows Embedded Devices https://www.rust-lang.org/what/embedded Operating System Writing an OS in Rust Mobile Apps Building an iOS App in Rust, Part 1: Getting Started with Rust Example project for building a library for iOS + Android in Rust Server Deploying to Heroku Anywhere? Rust Once, Run Everywhere Selling Points \u00b6 Everyone will have their favorite reasons for using one language over another. I tried to select articles related to the selling points, but also highlight features of the language brought up by people who advocate for it. Articles How often does Rust change? Rust programming language: Seven reasons why you should learn it in 2019 What is Rust and why is it so popular? Why Rust? Why should I use Rust? Features Borrow checker (\u201c Rust has a static garbage collector \u201d) Community Ownership model Package manager Performance Productivity Excellent documentation Built-in tools (cargo, fmt, clippy) Smart memory-management Type system Other Used by big companies (talk about Facebook, Microsoft, Amazon, etc.) *Note: this section also piggybacks off the Use Cases section (coming up). Beyond this, I would encourage you to read the results from the Rust 2019 survey which asked \u201cWhy not use Rust\u201d . Not all points relate to selling points, but it may provide insight into what would sell people on using Rust if these things were fixed. Tools \u00b6 The tools used for writing and using the programming language is an aspect we sometimes forget. This affects the developer experience and can drive or hinder the ecosystem. Here are some highlights: Benchmarking criterion - Statistics-driven Microbenchmarking Built-in testing support Cargo Build (macOS, Windows, Linux) Clippy Rustdoc rustfmt IDE support https://www.rust-lang.org/tools Hover over documentation in editor Rust Playground - test code online, share with others Use Cases \u00b6 Deriving some of the tops results from the Rust Survey 2019 , here are the main industries/applications that responded in the survey and are using Rust: Top 10 from survey Backend Web Applications Distributed Systems Embedded Devices Enterprise Software Frontend Web Applications Internet of Things IT Network Programming Security Technology Other Blockchain ( Libra Move ) Solana Deno - uses JavaScript engine written in Rust 1.0 Announcement Summary \u00b6 Reflecting on what we have covered thus far, we can see that the Rust ecosystem is well-developed and growing. This is not a conclusive/comprehensive list of the ecosystem or the companies using it. From my knowledge, Rust is used at big companies such as Amazon, Apple, Microsoft and Google. They are all investing in the language. We\u2019ve covered the ecosystem from a bird\u2019s-eye view as we see it today. Here are the main things to walk away with: Overview The community is ubiquitous both online and in-person There is no shortage of books or references to read from the official Rust groups Rust can be used for writing web, mobile, and CLI apps, servers embedded devices, and OS\u2019s Rust is fast, well-documented, type-safe, manages memory efficiently, but has a steep learning curve What\u2019s next? \u00b6 We plan to use this information when making decisions and building strategies for us to get involved with the Rust ecosystem. If you\u2019d like to collaborate with us, please reach out to me over DMs on Twitter ! We would love to work with you. Thank you for reading! Thank you \u00b6 To close out, I\u2019d like to give thanks to the following people for their contributions and feedback. I appreciate all of you! David Tolnay Pedro Rittner Jk Jensen Joe Savona Nell Shamrell-Harrington Lauren Tan Kathy Kam Cami Williams Joel Marcey Join the Newsletter \u00b6 I send a monthly newsletter with 1 exciting thing, 1 helpful thing, and new jobs. Email* By subscribing, you agree with Revue\u2019s Terms of Service \u00a92022 Joe Previte","title":"Rust lang ecosystem"},{"location":"public/programming/rust/rust-lang-ecosystem/#understanding-the-rust-ecosystem","text":"Last updated: 06/15/2020(Copied) Rust, a systems-programming language, which prides itself on being Stack Overflow\u2019s \u201c most loved language for five years in row \u201d and GitHub\u2019s second fastest growing (235% 2018-2019) has gained popularity both at companies like Amazon, FB, Discord and externally within the programming community. For part of my job, I have been focused on developing my own understanding of the space. I work within the DevTools pillar and focus primarily on programming languages. My main priority for H1 of 2020 has been Rust. The goal of this article is: To paint a high-level overview of the ecosystem The article covers various aspects of the ecosystem including community, companies using the language, selling points, etc.","title":"Understanding the Rust Ecosystem"},{"location":"public/programming/rust/rust-lang-ecosystem/#overview","text":"One of the hardest parts of understanding a programming language is setting the boundaries for what you encapsulate as part of and not part of the ecosystem. I gathered input coworkers and mentors in order to set the criteria for this project. For our purposes, I choose to limit it to the following areas, which you\u2019ll see below. For each section, you can expect: A brief description of how I defined the section Key highlights from the ecosystem for that area of the ecosystem","title":"Overview"},{"location":"public/programming/rust/rust-lang-ecosystem/#academic-research","text":"Things that fall under this category might be research papers, academic presentations, and anything related. It was difficult to find much in this area, but here are a few highlights: Memory-Safety Challenge Considered Solved? An Empirical Study with All Rust CVEs What can the programming language Rust do for astrophysics? RustBelt: Securing the Foundations of the RustProgramming Language Rust-Like Borrowing with 2nd-Class Values (Short Paper) Safe Systems Programming in Rust:The Promise and the Challenge Fearless Concurrency? Understanding Concurrent Programming Safety in Real-World Rust Software As you can tell from skimming the headings, researchers are looking at Rust\u2019s use cases, security, memory management, type-safety and concurrency. It\u2019s unfortunate there isn\u2019t an easy way to stay on top of academic research within Rust.","title":"Academic Research"},{"location":"public/programming/rust/rust-lang-ecosystem/#demographics","text":"When you look at the programming language, how do you know who is using it? What industries do they work in? Fortunately, the Rust Survey 2019 Results provides insight related to demographics. Based on the results, here are the key highlights: Respondents\u2019 top five languages: English, Chinese, German, French and Japanese Top five industries using Rust: Backend Web Applications, Distributed Systems, Embedded Devices, IT and Network Programming Top three titles for Rust users: Programmer/Software Engineer, Systems Architect, Web Developer/Front End Developer It\u2019s unfortunate that we do not have more information related to demographics such as gender, ethnicity, race, etc. There was an attempt to gather some of this information in the 2016 survey . Know that this section contains a small glimpse into the people of the Rust and is far from complete or representative of the ecosystem.","title":"Demographics"},{"location":"public/programming/rust/rust-lang-ecosystem/#community","text":"Community itself is a huge category. I tried my best to break it into subcategories for things that might fit here. In general, think of this area as the various places where members of the community congregate (online and in-person), groups who write code, and foundations. These are a combination of chat platforms, but also places where updates are shared with the community. Here are some worth noting: Chat Platforms Discord (35,597 members total) The Rust Programming Language (25,135 members) Rust Programming Language Community Server (10,462 members) Rust lang Slack (3,046 people) Rust Team Zulip (655 people) (mainly focused on people who work on Rust itself) Conferences FOSDEM RustConf Rusty Days RustFest Netherlands Rust + GNOME Hackfest Rust Latam RustLab Oxidize List of 2020 events on the Rust lang blog Core contributors Governance - all the different core team members associated with each team GitHub Rustlang org members GitHub committers - over 2k people have contributed to /rust repo Rust team alumni - people who worked on a Rust team previously Forums Users forum (14.2k) Internals forum (6.8k) r/rust -Reddit (100k people) Meetups Stats (meetups with the topic \u201crust\u201d ) 73,706 members 1,749 interested 204 Meetups 145 cities 42 countries Groups (not all listed, some highlights) Desert Rust (Phoenix, AZ) Minneapolis Rust Meetup Rusty Bay Area Meetup Rust Bangalore Rust Berlin Rust in Blockchain Rust Los Angeles Rust London User Group Rust Dev in Mountain View Meetup Rust Denver Rust NYC Rust Nairobi Rust Paris San Diego Rust Seattle Rust Meetup Utah Rust Miscellaneous RFCs (2.9k stars) - where technical decisions are made in regards to Rust This Week in Rust - weekly newsletter Programs Rust\u2019s Reach (currently on hold due to lack of funding and people) - \u201cmentorship like program between participants from URGs and Rust team members\u201d Rust Bridge (1 chapter) - \u201ca workshop focused on getting underrepresented people with a background in another programming language to learn Rust and join the community.\u201d *These stats were taken on 5/19/2020 As you can see, the community category extends itself across many platforms and mediums online. It\u2019s easy to overwhelm oneself with all the places you can go to get involved. The beautiful part is that there is no shortage of finding ways to meet others within the community. *For the data in the \u201cMeetups > Stats\u201d category, you\u2019ll notice that it includes some meetups that are not specifically for Rust so take that number with a grain of salt.","title":"Community"},{"location":"public/programming/rust/rust-lang-ecosystem/#companies","text":"It would be impossible to list all the companies that use Rust. This is a sub-selection of notable companies (more well-known) that are using or investing in Rust, ideally along with articles where they share how they\u2019re using it or helping the ecosystem: Amazon AWS is sponsoring the Rust programming language - AWS Open Source Blog (October 2019) \u201c\u2026 AWS staff open-sourced a virtualization technology named Firecracker that was coded primarily in Rust \u201d - zdnet.com article (October 2019) \u201c_As Rust starts to take up a larger chunk of Amazon\u2019s backend code, the company is making sure the project has the means to continue to evolve and fix security issues.\u201d _-_ _ zdnet.com article (October 2019) AWS sponsors RustConf - AWS Open Source Blog (2018 - 2020) Apple Rust for server-side Linux on Apple Cloud Traffic (March 2020) Atlassian (makers of Jira) Use Rust in the backend for analyzing terabytes of source code Cloudflare Cloudflare uses Rust in production for WebAssembly edge computing as well as a lot of foundational infrastructure (2018-2019) Discord \u201cWhy Discord is switching from Go to Rust\u201d - (February 2020) 11.9K claps \u201cUsing Rust to Scale Elixir for 11 Million Concurrent Users\u201d - (May 2019) 6.4K claps Dropbox Dropbox is highlighted on the /production page of the rust-lang.org website - (currently - March 2020) Go-ing to Rust: Optimizing Storage at Dropbox - (November 2017) Dropbox is mentioned on official Rust lang blog - (May 2017) \u201cThe Epic Story of Dropbox\u2019s Exodus From the Amazon Cloud Empire\u201d - (March 2016) Facebook Developers have named Rust their most-loved programming language five years in a row. Here\u2019s why developers at Facebook, Dropbox, and Amazon all adore it - (June 2020) The Relay Team is experimenting with a \u201crewrite of the Relay compiler in Rust\u201d (May 2020) Mononoke, the new Mercurial backend, was written from scratch in Rust GitHub GitHub donating VMs for GitHub Actions (April 2020) Google Rust makes up increasingly large parts of Google\u2019s Fuchsia operating system Chrome OS\u2019s virtualization infrastructure and several other components are in Rust Android uses Rust Chromium is beginning to adopt Rust Google released an \u201cunofficial\u201d project called [tarpc](https://github.com/google/tarpc) \u201cAn RPC framework for Rust\u201d Microsoft Microsoft featured on /sponsors page \u201cMicrosoft opens up Rust-inspired Project Verona programming language on GitHub\u201d - (Jan 2020) \u201cMicrosoft looks to Rust language to beat memory vulnerabilities\u201d - (Dec 2019) \u201cMicrosoft Exploring Rust as the Solution for Safe Software\u201d - (Nov 2019) Azure Pipelines sponsoring Rust - (Oct 2019) Microsoft looking into Rust for security reasons . - (July 2019) \u201cMicrosoft eyes Mozilla\u2019s Rust to obliterate C++ memory security flaws\u201d - (July 2019) Azure IoT Edge has been using Rust since at least 2018 Mozilla Rust is used in Firefox through a project called Oxidation Mozilla is writing a browser written in Rust called Servo \u201cRust 2018 is here\u2026 but what is it?\u201d - (Dec 2018) \u201cMozilla binds Firefox\u2019s fate to the Rust language\u201d - (Feb 2017) \u201cProject for porting C to Rust gains Mozilla\u2019s backing\u201d - (Oct 2016) npm Performance critical registry service architecture is Rust Reddit Uses Rust for comment processing Twitter Build team has been using Rust in production for ~3 years and intend for it to make up a large portion of their codebase going forward Yelp Yelp is featured under the \u201cRust in production\u201d section of rust-lang.org , they talk about how they use it in this talk - (Aug 2018) Honorable Mentions There is a list of production users on the rust-lang.org website \u201cA Snapshot of Rust\u2019s Popularity in July 2018\u201d Nike using Rust","title":"Companies"},{"location":"public/programming/rust/rust-lang-ecosystem/#language","text":"Think core library, compiler, type system. Basically all the code that makes up the language and some of the tools that help with writing code in Rust. Books & References Asynchronous Programming In Rust Book Command Line Applications in Rust The Rust Programming Language Book The Cargo Book - info about the rust package manager The Rustonomicon Book - the dark arts of unsafe Rust The Rust Reference Book Rust Compiler Error Index - book on all the rust compiler errors rustdoc Book - all about rustdoc and writing documentation in Rust std - standard library docs Code & DevTools Cargo the package manager + build system Core language Rust-clippy - official linter Rustfmt - official formatter rustc - the Rust compiler (inside the core language)","title":"Language"},{"location":"public/programming/rust/rust-lang-ecosystem/#language-frameworks","text":"What would a programming language be without frameworks? Thankfully, the community resource rust-web-framework-comparison made this research easy. Here is a long list: Client frameworks actix-web ( homepage / repository / api docs ) reqwest (- / repository / documentation ) hyper ( homepage / repository / documentation ) jsonrpc (- / repository / documentation ) Frontend frameworks (WASM) stdweb ( - / repository / documentation ) A standard library for the client-side Web yew ( homepage / repository / documentation ) - A frontend framework inspired by Elm and React (based on stdweb) percy ( homepage / repository / - ) - A modular toolkit for building isomorphic web apps seed ( homepage / repository / - ) - A Rust framework for creating web apps draco ( - / repository / documentation ) - A frontend framework inspired by Redux and Elm smithy ( homepage - / repository / - documentation ) - A front-end framework squark ( - / repository / documentation ) - Rust frontend framework, for web browser and more. willow ( homepage - / repository / - ) - A frontend framework inspired by Elm dodrio ( - / repository / documentation ) - A fast, bump-allocated virtual DOM library. dominator ( - / repository / documentation - Zero cost declarative DOM library using FRP signals for Rust!. mika ( homepage / repository / - ) - A signal-based framework for building front-end app, it tries to help, but may cause annoyances. Server frameworks actix-web ( homepage / repository / documentation / user guide ) gotham ( homepage / repository / documentation / examples ) iron ( homepage / repository / documentation ) nickel ( homepage / repository / documentation ) rocket ( homepage / repository / documentation ) rouille ( - / repository / documentation ) Thruster ( - / repository / documentation / examples ) Tide ( - / repository / documentation / examples ) tower-web ( - / repository / documentation / examples ) warp ( - / repository / documentation / examples ) Static site generators zola ( homepage / repository / documentation ) Templating frameworks tera ( homepage / repository / documentation ) mustache (- / repository / documentation ) liquid (- / repository / - ) handlebars (- / repository / documentation ) horrorshow (- / repository / documentation ) maud ( homepage / repository / documentation ) askama (- / repository / documentation ) stpl (- / repository / - ) ructe (- / repository / documentation ) typed-html (- / repository / documentation ) Websocket frameworks websocket ( homepage / repository / documentation ) ws-rs ( homepage / repository / documentation ) tungstenite ( - / repository / documentation ) actix-web ( homepage / repository / documentation ) Again, this is a bit overwhelming for a new person learning Rust. It\u2019s difficult to know what to choose. However, it\u2019s also a benefit having the ability to try out various solutions and see what works best.","title":"Language Frameworks"},{"location":"public/programming/rust/rust-lang-ecosystem/#learning","text":"Similar to the Community category, learning can be quite difficult to narrow down. I have tried my best to highlight the main areas and a few examples for each category. Know that this list is non-exhaustive and more a brief survey into this area of the ecosystem. Articles A collection of notable Rust bloggers Each week, This Week in Rust shares articles Fearless Rust Bloggers Learning Rust - Pascal Precht Read Rust - Rust blog post aggregator Writing an OS in Rust Books Programming Rust - O\u2019Reilly Media Rust in Action - Manning Bootcamps No response on Rust users forum No response on Twitter NobleProg Rust microcourse Classes (specifically academic, in universities) Northwestern University Rust being taught at University of Maryland, College Park Stanford\u2019s Programming Languages course dedicates 3.5 weeks to Rust Stanford\u2019s Operating Systems course in Rust University of Pennsylvania University of Virginia (first class) Tutorials Rustlings - Small exercises to get you used to reading and writing Rust code rust-learning - detailed list of awesome learning materials Tour of Rust - Step by step guide through the features of the Rust programming language Courses Intro to Rust - YouTube Rust Crash Course - YouTube Rust Projects - YouTube The Rust Programming Language - Udemy Using Web Assembly with Rust - egghead Write your First Program with Rust - egghead Videos Learning Rust - two people pair-programming and going chapter by chapter through the Rust Lang Book Into_rust - screencast series Workshops Ferrous Systems - paid workshops for companies and teams RustBridge - an organization that is part of the official Rust group. Systems Programming with Rust (at a conference)","title":"Learning"},{"location":"public/programming/rust/rust-lang-ecosystem/#packages","text":"One of the most important aspects of a programming language ecosystem is a way to share code with others. In the Rust ecosystem, the most common way is through packages, more commonly referred to as \u201ccrates\u201d. Below are links to two places where you can share code (your own private registry or the public one): Cloudsmith - create your own private cargo registry crates.io - \u201cThe Rust community\u2019s crate registry\u201d libs.rs - \u201cFast, lightweight, opinionated, unofficial alternative to crates.io\u201d","title":"Packages"},{"location":"public/programming/rust/rust-lang-ecosystem/#platforms","text":"The objective for this section was to figure out where Rust code can run. What platforms or systems are people targeting or building for? We saw a few of these mentioned in the Frameworks section. Here are the most common ones I could find (and some examples): Browser WebAssembly Wasm-bindgem Rust to WASM + Next CLI Apps clap Build binaries for Linux, macOS and Windows Embedded Devices https://www.rust-lang.org/what/embedded Operating System Writing an OS in Rust Mobile Apps Building an iOS App in Rust, Part 1: Getting Started with Rust Example project for building a library for iOS + Android in Rust Server Deploying to Heroku Anywhere? Rust Once, Run Everywhere","title":"Platforms"},{"location":"public/programming/rust/rust-lang-ecosystem/#selling-points","text":"Everyone will have their favorite reasons for using one language over another. I tried to select articles related to the selling points, but also highlight features of the language brought up by people who advocate for it. Articles How often does Rust change? Rust programming language: Seven reasons why you should learn it in 2019 What is Rust and why is it so popular? Why Rust? Why should I use Rust? Features Borrow checker (\u201c Rust has a static garbage collector \u201d) Community Ownership model Package manager Performance Productivity Excellent documentation Built-in tools (cargo, fmt, clippy) Smart memory-management Type system Other Used by big companies (talk about Facebook, Microsoft, Amazon, etc.) *Note: this section also piggybacks off the Use Cases section (coming up). Beyond this, I would encourage you to read the results from the Rust 2019 survey which asked \u201cWhy not use Rust\u201d . Not all points relate to selling points, but it may provide insight into what would sell people on using Rust if these things were fixed.","title":"Selling Points"},{"location":"public/programming/rust/rust-lang-ecosystem/#tools","text":"The tools used for writing and using the programming language is an aspect we sometimes forget. This affects the developer experience and can drive or hinder the ecosystem. Here are some highlights: Benchmarking criterion - Statistics-driven Microbenchmarking Built-in testing support Cargo Build (macOS, Windows, Linux) Clippy Rustdoc rustfmt IDE support https://www.rust-lang.org/tools Hover over documentation in editor Rust Playground - test code online, share with others","title":"Tools"},{"location":"public/programming/rust/rust-lang-ecosystem/#use-cases","text":"Deriving some of the tops results from the Rust Survey 2019 , here are the main industries/applications that responded in the survey and are using Rust: Top 10 from survey Backend Web Applications Distributed Systems Embedded Devices Enterprise Software Frontend Web Applications Internet of Things IT Network Programming Security Technology Other Blockchain ( Libra Move ) Solana Deno - uses JavaScript engine written in Rust 1.0 Announcement","title":"Use Cases"},{"location":"public/programming/rust/rust-lang-ecosystem/#summary","text":"Reflecting on what we have covered thus far, we can see that the Rust ecosystem is well-developed and growing. This is not a conclusive/comprehensive list of the ecosystem or the companies using it. From my knowledge, Rust is used at big companies such as Amazon, Apple, Microsoft and Google. They are all investing in the language. We\u2019ve covered the ecosystem from a bird\u2019s-eye view as we see it today. Here are the main things to walk away with: Overview The community is ubiquitous both online and in-person There is no shortage of books or references to read from the official Rust groups Rust can be used for writing web, mobile, and CLI apps, servers embedded devices, and OS\u2019s Rust is fast, well-documented, type-safe, manages memory efficiently, but has a steep learning curve","title":"Summary"},{"location":"public/programming/rust/rust-lang-ecosystem/#whats-next","text":"We plan to use this information when making decisions and building strategies for us to get involved with the Rust ecosystem. If you\u2019d like to collaborate with us, please reach out to me over DMs on Twitter ! We would love to work with you. Thank you for reading!","title":"What\u2019s next?"},{"location":"public/programming/rust/rust-lang-ecosystem/#thank-you","text":"To close out, I\u2019d like to give thanks to the following people for their contributions and feedback. I appreciate all of you! David Tolnay Pedro Rittner Jk Jensen Joe Savona Nell Shamrell-Harrington Lauren Tan Kathy Kam Cami Williams Joel Marcey","title":"Thank you"},{"location":"public/programming/rust/rust-lang-ecosystem/#join-the-newsletter","text":"I send a monthly newsletter with 1 exciting thing, 1 helpful thing, and new jobs. Email* By subscribing, you agree with Revue\u2019s Terms of Service \u00a92022 Joe Previte","title":"Join the Newsletter"},{"location":"public/programming/rust/rust-lang-research-intro/","text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Rust-Lang/Part(7) \u00b6 Dr.Gavin-Wood #Polkadot#kusama#ParaState#Substrate#Rust-Lang \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb 1 Features \u00b6 \ud83d\udc46\ud83d\udc46\ud83d\udc46 Crates \u00b6 Alloc \u00b6 The Rust core allocation and collections library This library provides smart pointers and collections for managing heap-allocated values. This library, like libcore, normally doesn\u2019t need to be used directly since its contents are re-exported in the std crate. Crates that use the #![no_std] attribute however will typically not depend on std, so they\u2019d use this crate instead. https://doc.rust-lang.org/alloc/index.html Core \u00b6 The Rust Core Library The Rust Core Library is the dependency-free1 foundation of The Rust Standard Library. It is the portable glue between the language and its libraries, defining the intrinsic and primitive building blocks of all Rust code. It links to no upstream libraries, no system libraries, and no libc. The core library is minimal: it isn\u2019t even aware of heap allocation, nor does it provide concurrency or I/O. These things require platform integration, and this library is platform-agnostic. https://doc.rust-lang.org/core/index.html Crate proc_macroCopy \u00b6 A support library for macro authors when defining new macros. This library, provided by the standard distribution, provides the types consumed in the interfaces of procedurally defined macro definitions such as function-like macros #[proc_macro], macro attributes #[proc_macro_attribute] and custom derive attributes#[proc_macro_derive]. https://doc.rust-lang.org/proc_macro/index.html Std(The Rust Standard Library) \u00b6 The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec and Option , library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things. std is available to all Rust crates by default. Therefore, the standard library can be accessed in use statements through the path std, as in use std::env. https://doc.rust-lang.org/std/index.html Test \u00b6 Support code for rustc\u2019s built in unit-test and micro-benchmarking framework. Almost all user code will only be interested in Bencher and black_box . All other interactions (such as writing tests and benchmarks themselves) should be done via the #[test] and #[bench] attributes. See the Testing Chapter of the book for more details. https://doc.rust-lang.org/test/index.html \ud83d\udc46\ud83d\udc46\ud83d\udc46 Memory \u00b6 Rust programs have 3 memory regions where data is stored: Data memory - For data that is fixed in size and static (i.e. always available through life of program). Consider the text in your program (e.g. \"Hello World!\"): This text's bytes are only ever read from one place and therefore can be stored in this region. Compilers make lots of optimizations with this kind of data, and they are generally considered very fast to use since locations are known and fixed. Stack memory - For data that is declared as variables within a function. The location of this memory never changes for the duration of a function call; because of this compilers can optimize code so stack data is very fast to access. Heap memory - For data that is created while the application is running. Data in this region may be added, moved, removed, resized, etc. Because of its dynamic nature it's generally considered slower to use, but it allows for much more creative usages of memory. When data is added to this region we call it an allocation . When data is removed from this section we call it a deallocation . Thread \u00b6 LifeTime \u00b6 @Static A static variable is a memory resource created at compile-time that exists through a program start to finish . They must have their types explicitly specified so special lifetime lasting the entire program execution. A static lifetime is a memory resource that lasts indefinitely to the end of a program. Note that by this definition some static lifetime resources can be created at runtime. Lifetime specifiers always start with a ' (e.g. 'a, 'b, 'c). Resources with static lifetimes have a special lifetime specifier 'static. 'static resources will never drop. If static lifetime resources contain references they must all be 'static (anything less would not live long enough). fn main() { let mut foo = Foo { x: 42 }; let x = &mut foo.x; *x = 13; // x is dropped here, allowing us to create a non-mutable reference let y = do_something(&foo); println!(\"{} {}\", y, foo.x); // y is dropped here // foo is dropped here } /* Standard Output 42 */ Memory detail: Modifying static variables is inherently dangerous because they are globally accessable to be read from by anyone introducing the possibility of a data race. static X: T = T(); Global variable with 'static lifetime, single memory location. T: 'static Same; does esp. not mean value t will live 'static, only that it could. Language Sugar: Rvalue Static Promotion Makes references to constants 'static, e.g., &42, &None, &mut []. Promote constexpr rvalues to values in static memory instead of stack slots, and expose those in the language by being able to directly create 'static references to them. This would allow code like let x: &'static u32 = &42 to work. static PI: f64 = 3.1415; fn main() { // static variables can also be scoped to a function static mut SECRET: &'static str = \"swordfish\"; // string literals have a 'static lifetime let msg: &'static str = \"Hello World!\"; let p: &'static f64 = &PI; println!(\"{} {}\", msg, p); // You can break some rules, but you must be explicit unsafe { // we can set SECRET to a string literal because it is also `static SECRET = \"abracadabra\"; println!(\"{}\", SECRET); } } /* Standard Output Hello World! 3.1415 abracadabra */ @Unsafe If you still had access to (via unsafe) they might still look like valid S, but any attempt to use them as valid S is undefined behavior. \u2193 https://cheats.rs/#unsafe-unsound-undefined-dark side of force Try to avoid \"unsafe {}\", often safer, faster solution without it. Exception: FFI. Arc \u00b6 @Safe Arc presents us with a couple of use statements that include threads and something called Arc. Arc represents a thread-safe reference-counting pointer, and Arc stands for Atomically Reference Counted. You may know of this idea from old iOS Objective-C code or something like that. // arc1.rs // Make this code compile by filling in a value for `shared_numbers` where the // TODO comment is and create an initial binding for `child_numbers` // somewhere. Try not to create any copies of the `numbers` Vec! // Execute `rustlings hint arc1` for hints :) use std::sync::Arc; use std::thread; fn main() { let numbers: Vec<_> = (0..100u32).collect(); let shared_numbers = Arc::new(numbers); let mut joinhandles = Vec::new(); for offset in 0..8 { let child_numbers = shared_numbers.clone(); joinhandles.push(thread::spawn(move || { let mut i = offset; let mut sum = 0; while i < child_numbers.len() { sum += child_numbers[i]; i += 5; } println!(\"Sum of offset {} is {}\", offset, sum); })); } for handle in joinhandles.into_iter() { handle.join().unwrap(); } } What Arc does is provides shared ownership of a value allocated in the heap. Invoking clone on Arc gives you a new Arc instance, which points to the same allocation on the heap as the original source Arc. What Arc will do is then increase the reference count, and it will not drop the value inside of the Arc until the last reference has dropped. In this code, what we need to do is set a value for shared_numbers and then also create an initial binding for child_numbers such that we can use the value inside of the multiple threads that are spawned for the range zero to eight. Note that numbers here is a Vec which we've told the Rust compiler to infer the type of with this <_>, and also told that the type by using a range of to 100 as u32. For shared_numbers, what we'll do is create a new Arc . Note that we also need to use new binding for child_numbers. We have a number of places we could put it, including right below shared_numbers or inside of this loop. We're going to do this inside of the loop so that we create a new clone and increase the Arc reference counter for every offset that we spawn a new thread for. Note that shared_numbers is a new Arc that contains the Vec for each offset in the range zero to eight, which we spawn a thread for child_numbers, clones shared_numbers, which increments the Arc counter and allows child_numbers to access the same data \ud83d\udc46\ud83d\udc46\ud83d\udc46 \u270d\ufe0f\u270d\ufe0f\u270d\ufe0f Let's Start - to setup in 5min https://www.gitpod.io/docs/languages/rust#rust-in-gitpod Getting started with Toturial Introduction - Rust By Example Learn Rust - Rust Programming Language Tour of Rust - Let's go on an adventure! In-Depth Rust Tutorials for 2022 | egghead.io https://rust-lang.github.io/rustup/examples.html \ud83d\udcda\ud83d\udcda\ud83d\udcda Literature \u00b6 https://doc.rust-lang.org/error-index.html Cargo Getting Start \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f If you liked this article or if it helped you please clap on this post to help the Read.Cash algorithm recommend it to more people. If you have any questions or remarks please feel free to leave a comment below. Alternatively, please feel free to send donations 0xde5D732a5AB44832E1c69b18be30834639F44A2c \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4f#Arman-Riazi\ud83e\udd1d","title":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Rust-Lang/Part(7)"},{"location":"public/programming/rust/rust-lang-research-intro/#highlighted-deep-dive-into-polkadotsubstratekusamarust-langpart7","text":"Dr.Gavin-Wood #Polkadot#kusama#ParaState#Substrate#Rust-Lang \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc69\u200d\ud83c\udfeb 1","title":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Rust-Lang/Part(7)"},{"location":"public/programming/rust/rust-lang-research-intro/#features","text":"\ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Features"},{"location":"public/programming/rust/rust-lang-research-intro/#crates","text":"","title":"Crates"},{"location":"public/programming/rust/rust-lang-research-intro/#alloc","text":"The Rust core allocation and collections library This library provides smart pointers and collections for managing heap-allocated values. This library, like libcore, normally doesn\u2019t need to be used directly since its contents are re-exported in the std crate. Crates that use the #![no_std] attribute however will typically not depend on std, so they\u2019d use this crate instead. https://doc.rust-lang.org/alloc/index.html","title":"Alloc"},{"location":"public/programming/rust/rust-lang-research-intro/#core","text":"The Rust Core Library The Rust Core Library is the dependency-free1 foundation of The Rust Standard Library. It is the portable glue between the language and its libraries, defining the intrinsic and primitive building blocks of all Rust code. It links to no upstream libraries, no system libraries, and no libc. The core library is minimal: it isn\u2019t even aware of heap allocation, nor does it provide concurrency or I/O. These things require platform integration, and this library is platform-agnostic. https://doc.rust-lang.org/core/index.html","title":"Core"},{"location":"public/programming/rust/rust-lang-research-intro/#crate-proc_macrocopy","text":"A support library for macro authors when defining new macros. This library, provided by the standard distribution, provides the types consumed in the interfaces of procedurally defined macro definitions such as function-like macros #[proc_macro], macro attributes #[proc_macro_attribute] and custom derive attributes#[proc_macro_derive]. https://doc.rust-lang.org/proc_macro/index.html","title":"Crate proc_macroCopy"},{"location":"public/programming/rust/rust-lang-research-intro/#stdthe-rust-standard-library","text":"The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec and Option , library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things. std is available to all Rust crates by default. Therefore, the standard library can be accessed in use statements through the path std, as in use std::env. https://doc.rust-lang.org/std/index.html","title":"Std(The Rust Standard Library)"},{"location":"public/programming/rust/rust-lang-research-intro/#test","text":"Support code for rustc\u2019s built in unit-test and micro-benchmarking framework. Almost all user code will only be interested in Bencher and black_box . All other interactions (such as writing tests and benchmarks themselves) should be done via the #[test] and #[bench] attributes. See the Testing Chapter of the book for more details. https://doc.rust-lang.org/test/index.html \ud83d\udc46\ud83d\udc46\ud83d\udc46","title":"Test"},{"location":"public/programming/rust/rust-lang-research-intro/#memory","text":"Rust programs have 3 memory regions where data is stored: Data memory - For data that is fixed in size and static (i.e. always available through life of program). Consider the text in your program (e.g. \"Hello World!\"): This text's bytes are only ever read from one place and therefore can be stored in this region. Compilers make lots of optimizations with this kind of data, and they are generally considered very fast to use since locations are known and fixed. Stack memory - For data that is declared as variables within a function. The location of this memory never changes for the duration of a function call; because of this compilers can optimize code so stack data is very fast to access. Heap memory - For data that is created while the application is running. Data in this region may be added, moved, removed, resized, etc. Because of its dynamic nature it's generally considered slower to use, but it allows for much more creative usages of memory. When data is added to this region we call it an allocation . When data is removed from this section we call it a deallocation .","title":"Memory"},{"location":"public/programming/rust/rust-lang-research-intro/#thread","text":"","title":"Thread"},{"location":"public/programming/rust/rust-lang-research-intro/#lifetime","text":"@Static A static variable is a memory resource created at compile-time that exists through a program start to finish . They must have their types explicitly specified so special lifetime lasting the entire program execution. A static lifetime is a memory resource that lasts indefinitely to the end of a program. Note that by this definition some static lifetime resources can be created at runtime. Lifetime specifiers always start with a ' (e.g. 'a, 'b, 'c). Resources with static lifetimes have a special lifetime specifier 'static. 'static resources will never drop. If static lifetime resources contain references they must all be 'static (anything less would not live long enough). fn main() { let mut foo = Foo { x: 42 }; let x = &mut foo.x; *x = 13; // x is dropped here, allowing us to create a non-mutable reference let y = do_something(&foo); println!(\"{} {}\", y, foo.x); // y is dropped here // foo is dropped here } /* Standard Output 42 */ Memory detail: Modifying static variables is inherently dangerous because they are globally accessable to be read from by anyone introducing the possibility of a data race. static X: T = T(); Global variable with 'static lifetime, single memory location. T: 'static Same; does esp. not mean value t will live 'static, only that it could. Language Sugar: Rvalue Static Promotion Makes references to constants 'static, e.g., &42, &None, &mut []. Promote constexpr rvalues to values in static memory instead of stack slots, and expose those in the language by being able to directly create 'static references to them. This would allow code like let x: &'static u32 = &42 to work. static PI: f64 = 3.1415; fn main() { // static variables can also be scoped to a function static mut SECRET: &'static str = \"swordfish\"; // string literals have a 'static lifetime let msg: &'static str = \"Hello World!\"; let p: &'static f64 = &PI; println!(\"{} {}\", msg, p); // You can break some rules, but you must be explicit unsafe { // we can set SECRET to a string literal because it is also `static SECRET = \"abracadabra\"; println!(\"{}\", SECRET); } } /* Standard Output Hello World! 3.1415 abracadabra */ @Unsafe If you still had access to (via unsafe) they might still look like valid S, but any attempt to use them as valid S is undefined behavior. \u2193 https://cheats.rs/#unsafe-unsound-undefined-dark side of force Try to avoid \"unsafe {}\", often safer, faster solution without it. Exception: FFI.","title":"LifeTime"},{"location":"public/programming/rust/rust-lang-research-intro/#arc","text":"@Safe Arc presents us with a couple of use statements that include threads and something called Arc. Arc represents a thread-safe reference-counting pointer, and Arc stands for Atomically Reference Counted. You may know of this idea from old iOS Objective-C code or something like that. // arc1.rs // Make this code compile by filling in a value for `shared_numbers` where the // TODO comment is and create an initial binding for `child_numbers` // somewhere. Try not to create any copies of the `numbers` Vec! // Execute `rustlings hint arc1` for hints :) use std::sync::Arc; use std::thread; fn main() { let numbers: Vec<_> = (0..100u32).collect(); let shared_numbers = Arc::new(numbers); let mut joinhandles = Vec::new(); for offset in 0..8 { let child_numbers = shared_numbers.clone(); joinhandles.push(thread::spawn(move || { let mut i = offset; let mut sum = 0; while i < child_numbers.len() { sum += child_numbers[i]; i += 5; } println!(\"Sum of offset {} is {}\", offset, sum); })); } for handle in joinhandles.into_iter() { handle.join().unwrap(); } } What Arc does is provides shared ownership of a value allocated in the heap. Invoking clone on Arc gives you a new Arc instance, which points to the same allocation on the heap as the original source Arc. What Arc will do is then increase the reference count, and it will not drop the value inside of the Arc until the last reference has dropped. In this code, what we need to do is set a value for shared_numbers and then also create an initial binding for child_numbers such that we can use the value inside of the multiple threads that are spawned for the range zero to eight. Note that numbers here is a Vec which we've told the Rust compiler to infer the type of with this <_>, and also told that the type by using a range of to 100 as u32. For shared_numbers, what we'll do is create a new Arc . Note that we also need to use new binding for child_numbers. We have a number of places we could put it, including right below shared_numbers or inside of this loop. We're going to do this inside of the loop so that we create a new clone and increase the Arc reference counter for every offset that we spawn a new thread for. Note that shared_numbers is a new Arc that contains the Vec for each offset in the range zero to eight, which we spawn a thread for child_numbers, clones shared_numbers, which increments the Arc counter and allows child_numbers to access the same data \ud83d\udc46\ud83d\udc46\ud83d\udc46 \u270d\ufe0f\u270d\ufe0f\u270d\ufe0f Let's Start - to setup in 5min https://www.gitpod.io/docs/languages/rust#rust-in-gitpod Getting started with Toturial Introduction - Rust By Example Learn Rust - Rust Programming Language Tour of Rust - Let's go on an adventure! In-Depth Rust Tutorials for 2022 | egghead.io https://rust-lang.github.io/rustup/examples.html \ud83d\udcda\ud83d\udcda\ud83d\udcda","title":"Arc"},{"location":"public/programming/rust/rust-lang-research-intro/#literature","text":"https://doc.rust-lang.org/error-index.html Cargo Getting Start \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f If you liked this article or if it helped you please clap on this post to help the Read.Cash algorithm recommend it to more people. If you have any questions or remarks please feel free to leave a comment below. Alternatively, please feel free to send donations 0xde5D732a5AB44832E1c69b18be30834639F44A2c \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Reseacher & Organized by: \ud83d\ude4f#Arman-Riazi\ud83e\udd1d","title":"Literature"},{"location":"public/programming/rust/rust-learning-plan-chapter-1-notes/","text":"Rust Learning Plan & Chapter 1 Notes Last updated: 03/06/2020 Hello and welcome! This might be the first time we meet so I thought I\u2019d start this post off with a short introduction. I\u2019m Joe and previously I worked with JavaScript building web apps and mobile apps. Now, I\u2019m learning Rust both for personal reasons and work-related reasons. One of my primary focuses for this half of the year is Rust! Beyond that though, I am personally excited about Rust because: it\u2019s exciting it\u2019s type-safe (Yay, coming from TypeScript!) it\u2019s performant it has excellent documentation it has a strong community I dabbled a bit about a year ago doing some exercises on exercism but now learning Rust is a high priority. You might be interested in Rust because you can build: CLI tools Web apps (compile to WASM, or Web Assembly) Web servers And many other exciting things! For March, I decided to put together a plan to learn a little bit of Rust. The purpose is to start building projects with Rust and get involved in the community. Here\u2019s what the plan looks like: Learn enough Rust to be dangerous, measured by: ability to understand and explain basic concepts in Rust ability to contribute code to an open source project in the Rust community ability to build and ship a small project in Rust I\u2019ve taken these objectives and broken them out into actionable tasks. They are as follows: Read Chapters 1-3 of the Rust Lang Book (by Steve Klabnik and Carol Nichols, with contributions from the Rust Community) Write 3 blog posts Contribute to an open source project (bug fix or docs) Build a small web server app (bunny1 clone) This is the first blog post in the series, which covers my notes and thoughts on Chapter 1 of the Rust Lang Book. If you read Chapter 1 and would like to discuss, let\u2019s have a conversation! Tweet @ me or shoot me a DM on Twitter. Notes on Chapter 1 The first chapter in the Rust Lang Book is a friendly introduction to Rust. It covers enough of the basics to get started. You download Rust and then write your first program, which prints \u201cHello, World!\u201d Here are things I wrote down while reading the first chapter online: rustup is the preferred version manager Coming from the JavaScript world, I\u2019m used to scouring the internet for a decent node version manager. The common goto is nvm. Lucky for us, the Rust team supplies an official version manager and it\u2019s called rustup. Free, offline docs - out-of-the-box I noted this after rereading some of Chapter 1. rustup comes with a version of the docs that you can launch and read offline \ud83d\ude31 How genius is that?! rustup doc cargo commands are like npm commands Similar to how we use npm in the JS world for packaging and building our projects, cargo serves a similar purpose for Rust. Rust leans towards snake_case In JS, I used camelCase when naming things. It seems like the Rust community leans towards snake_case. This was evident during the hello world exercise. We named the project directory hello_world. My assumption may be premature. semicolons have meaning There is a great debate in JS - semicolons or no semicolons? While the choice is mainly conventional in JavaScript, Rust is a bit different. Most of the time, you\u2019ll use them to declare the end of an expression. Here\u2019s an example: // Rust example println!(\"Hello, world!\"); Like all good rules in programming languages, there is an exception! If you don\u2019t include it in a code block, it returns the last line. Here\u2019s what that looks like: // Rust if x < 5 { x + 1 } There is no semicolon but this will still return x plus 1. Reminds me of the arrow function implicit return in JavaScript: // JavaScript const firstName = () => 'Rusty' Rust has an official code formatter If you\u2019re not familiar with the Prettier, it\u2019s an opinionated code formatter. It supports a lot of different languages. I believe it\u2019s the most used one in JavaScript. A positive note about Rust is that they have an official formatter called rustfmt. And even better, the Rust book says, The Rust team plans to eventually include this tool with the standard Rust distribution Official formatting - hooray! Another thing we don\u2019t have to worry about. Rust uses macros I wasn\u2019t familiar with this because JavaScript does not have them. They look like functions, but according to Computer Hope, macros are \u201ca tool that allows a developer to re-use code.\u201d I thought it was like a function, but they have a note saying, A macro is not the same as a function. Functions require special instructions and computational overhead to safely pass arguments and return values. A macro is a way to repeat frequently-used lines of code. Here is an example using the println! macro in Rust: // Rust println!(\"Howdy, friend!\"); The \u201c!\u201d in \u201cprintln!\u201d means it\u2019s a macro After learning about macros, I asked myself, \u201cBut how do you know if it\u2019s a local function vs. macro?\u201d Then I realized, it\u2019s the !. That\u2019s the pattern to look for. \u201cBinary executable\u201d is fancy terms for \u201ccomputer-ready-file\u201d I\u2019ve heard the term \u201cbinary executable.\u201d I know what \u201cbinary\u201d means and I know what \u201cexecutable\u201d means, but I highlighted this anyway. In layperson terms, it means the computer can read and execute it without anyone\u2019s help. Compile before you run, you must When I learned JavaScript, I never fully understood the whole compiled vs interpreted lingo. Well, now I have a basic understanding. In most cases, a JavaScript engine (like V8) \u201ccompiles JavaScript code into machine code at execution by implementing a JIT (Just-In-Time) compiler.\u201d Notice though, the JS engine does this, not the developer. In Rust (and many other languages), there is a compile step that you, the developer, must do. So you must compile your code before you can run it. Ahead-of-time compilation is awesome I hadn\u2019t previously heard this phrase \u201cahead-of-time compilation\u201d but now I get what it is and why it\u2019s awesome. You compile your program and it outputs a file. Because you compiled \u201cahead of time\u201d \ud83d\ude09 you can send it to a friend who can then run it on their machine without having Rust. That\u2019s amazing! At least coming from JS/Python. With Rust, it\u2019s already ready to go! cargo new, what it do? Going back to our npm comparison, it is like npm init and creates a new Rust project. What makes it even better though is that it includes a .gitignore file for you. It\u2019s fantastic. crates are like npm packages Crates are bundled up pieces of code. Similar to the JS world, you install a package from npm, you do the same with Rust, but with crates. I love the term \u201ccrate.\u201d It\u2019s kind of fun to say and isn\u2019t an everyday term like \u201cpackages\u201d. The official crates registry is crates.io. The other differentiating factor is that crates.io is \u201cmanaged by members of the Crates.io and Rust core teams.\u201d I hope this means it\u2019s more sustainable and community-driven. Rust encourages project folder structure Coming from the JS world, you can put your files in any directory you want (most of the time). You then tell your bundler where to look. What I like about Rust is that it encourages a project folder structure out the gate. According to the book, \u201cCargo expects your source files to live inside the src directory.\u201d This is great! One less thing for us to think about. You can, of course, override this by setting the path value in your cargo.toml (I googled out of curiosity). cargo check - \u201cAm I doing this right?\u201d cargo check will check your source code without building it. This is a good way to iterate quickly. cargo build \u2014release - \u201cShip it!\u201d This one is more of a reminder for me. When you\u2019re ready to ship your code to production, add the release flag to your build step: cargo build --release fn: function keyword is only two letters In JavaScript, we have to use seven keystrokes to declare a function. That\u2019s a lot! But in Rust, we only need to write two: fn. How cool is that? We\u2019re five keystrokes richer in Rust. What\u2019s next? As previously mentioned, next up for me is Chapter 2 of the Rust Lang Book. Here, they\u2019ll walk us through programming a guessing game - hooray! I\u2019m excited about this. The next blog post in this series will cover my notes on building my first real project in Rust. Until then, happy coding my fellow Rustaceans! \ud83e\udd80 P.S. - I included a glossary and cheatsheet at the end here. Enjoy! Glossary I covered a decent number of new words (at least for me) in this post. I find it helpful to remind myself what they each mean. Here are they are described in my own words: ahead-of-time compilation - compiling beforehand binary executable - a file that a computer already understands Cargo - Rust\u2019s official build system and package manager crate - a bundle of code that you can use in your project crates.io - the official Rust package registry developer advocate - someone who can talk about and write code and works with the dev community macro - it\u2019s like a global function Rustacean - a Rust community member rustup - the official Rust version manager WASM - Web Assembly Cheatsheet Most of the commands that were covered in Chapter 1: Install Rust with rustup curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh Update to the latest version of Rust rustup update Check your version of Rust rustc --version Open the docs for Rust locally (available offline too) rustup doc Manually compile a file rustc main.rs Check your version of cargo cargo --version Create a new Rust program cargo new Example for a project named hello_world \u00b6 cargo new hello_world Check that Rust program compiles cargo check Build a Rust program cargo build Run a Rust program cargo run Build a Rust program for production cargo build --release","title":"Rust learning plan chapter 1 notes"},{"location":"public/programming/rust/rust-learning-plan-chapter-1-notes/#example-for-a-project-named-hello_world","text":"cargo new hello_world Check that Rust program compiles cargo check Build a Rust program cargo build Run a Rust program cargo run Build a Rust program for production cargo build --release","title":"Example for a project named hello_world"},{"location":"public/programming/rust/rust/","text":"Rust-Language \u00b6 SourceCode(Rust-All-In-One) \u00b6 Research \u00b6 Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Rust-Lang Rust-Lang-Ecosystem Rust-lang-Hello-World","title":"Rust"},{"location":"public/programming/rust/rust/#rust-language","text":"","title":"Rust-Language"},{"location":"public/programming/rust/rust/#sourcecoderust-all-in-one","text":"","title":"SourceCode(Rust-All-In-One)"},{"location":"public/programming/rust/rust/#research","text":"Highlighted Deep Dive Into Polkadot/Substrate/Kusama/Rust-Lang Rust-Lang-Ecosystem Rust-lang-Hello-World","title":"Research"},{"location":"public/university/master/","tags":["cloud","container","caas","virtualization","devops","master","science","armanriazi","java","university","github"],"text":"Master Thesis--Arman Riazi \u00b6 Abstract \u00b6 Nowadays with the development of technology, we observe an increase in the number of users using Cloud Computing services. The process of increasing demand, the need for intelligent supply and demand cycle, better resource management, better utilization of resources is necessary. The results indicate competition from the cycle leads to a complex challenge for selecting and scheduling tasks to provide composite services in the Cloud. One of the most important issues in this field is Load Balancing. How to choose idle resources from a set of resources, overcoming compositional constraints, determines the importance of scheduling and resource allocation. These are NP-Hard issues. State-of-the-art architecture in the field of Cloud Computing for the implementation of Scientific Workflows that can be implemented in a distributed manner is becoming increasingly considered in other sciences related to Cloud Computing. The distinction and competition of Cloud Service Providers to publish services with more profit and better quality to customers are summarized in features such as \"Scalability, Stability, High availability, Fault tolerance.\" By providing new solutions and services for using specialists in other sciences, we can see the utilization of Cloud Computing Infrastructure and services in the fields of industry, commerce, health, and emergency applications. The possibility of conducting Scientific Workflows using Virtual Machines\" and Containers is a goal that has been addressed in the proposed architecture. The Load Balancing in the form of Containers at the level of Virtual Machines using the Ant Colony Optimization(ACO) algorithm is one of the important goals and issues that have been covered and solutions for utilization as much as possible has been explained. According to previous studies, there is no comprehensive or stable architecture that can balance Scientific Workflows using the algorithm ACO at the container virtualization level. By providing a simulator environment and testing several samples with different parameters then estimated the efficiency of the ACO and default algorithm of [[Cloudsim]], ie First-Come-First-Serve(FCFS). In the case of fifty, hundred Samples of Montage Scientific Workflow, which is considered as the average load rate, balancing the workload of the Containers on the Virtual Machine with the ACO has better results than the FCFS. If the value of the beta parameter of the ACO is assigned by zero, the algorithm will be trapped to the local optimal. In the case of a thousand sample, which is interpreted as a large amount of workload, if a Cybershake Workflow is used finally the results will be the same in all performance evaluation indicators. Keywords: [[Cloud]]Computing, #ContainerAllocation, [[Workflow]], #ACO Info Getting Project-OpenSource Experimental Research: CloudSim-Workflow-Function-Container-Plus (Toward ServerMix) ArmanRiazi(AramisIT)Modeling And Simulation Of running containers on the host without needing a virtual machine. Pros: Simulation of cost and performance Scalability: Container is very scalable than the virtual machines Elasticity: with separating logical code and data Decrease overhead Decrease the start time of tasks Fixed data dependency Resource management Workflow Engine management Resource Management Cons: Lack of clean code and more refactoring. exclude of design patterns, modular Not using Maven and Unit Test Concepts: Workflow: correspond with Function Composition on the simulation environment. Function as a Service(FaaS): Lambda or Cloud Function on the production environment. Cloudlet : the task of the client or job of workflow ACO Scheduler: Ant colony optimization Serverfull: include virtual machine/on-premises Serverless: no server, Event-driven, Provisioning, Scalability, FaaS ServerMix: The proposed model included both of them. In implementing simulation we did not use FaaS or Lambda functions but we have some situations and marks of the Serverless as a kind of theoretical because we implemented with the capability of elasticity that is one of the Serverless features. on the other hand, we are going to need event-driven and arrow functions in this java program. Target: Running Montage workflow base on the container. We have two repo for implementing: Container base on Vm: ( Cloudsim-Workflow-Function-Container ),( Cloudsim-Workflow-Function-Container-ACO ) Container base on host:( CloudSim-Workflow-Function-Container-Plus ), ( Cloudsim-Workflow-Function-Container-ACO ) Part of class diagram: ContainerCloudsim class diagram Sequential diagram of WFC architecture: Proposed Architecture: WFC has transparency and clarity on architecture and implemented java code. Prerequisites: Resolve project libraries include: commons-math3\u20133.2 | 3\u20136.1, flanagan, jdom-2.0.0, opencsv-2.3 (maybe) Results with montage Num.X: Season 6 Contact me: Let me know how can I help you with developing and researching. I am eager to your suggestion References \u00b6 [1] Malawski, M., Gajek, A., Zima, A., Balis, B., & Figiela, K. (2020). Serverless execution of scientific workflows: Experiments with hyperflow, aws lambda and google cloud functions. Future Generation Computer Systems, 110, 502-514. [2] Kavitha, Kadarla, and S. C. Sharma. \"Performance analysis of ACO\u2010based improved virtual machine allocation in cloud for IoT\u2010enabled healthcare.\" Concurrency and Computation: Practice and Experience 32, nov. 21 (2020): e5613. [3] Leitner, Philipp, Erik Wittern, Josef Spillner, and Waldemar Hummer. \"A mixed-method empirical study of Function-as-a-Service software development in industrial practice.\" Journal of Systems and Software 149 (2019): 340-359. [4] Shafiei, Hossein, Ahmad Khonsari, and Payam Mousavi. \"Serverless computing: A survey of opportunities, challenges and applications.\" arXiv preprint arXiv:1911.01296 (2019). [5] Garc\u00eda-L\u00f3pez, Pedro, Marc S\u00e1nchez-Artigas, Simon Shillaker, Peter Pietzuch, David Breitgand, Gil Vernik, Pierre Sutra, Tristan Tarrant, and Ana Juan Ferrer. \"Servermix: Tradeoffs and challenges of serverless data analytics.\" arXiv preprint arXiv:1907.11465 (2019). [6] P\u00e9rez A, Molt\u00f3 G, Caballer M, Calatrava A. Serverless computing for container-based architectures. Future Generation Computer Systems. 2018 Jun 1;83:50-9. [7] Spillner, Josef. \"Snafu: Function-as-a-service (faas) runtime design and implementation.\" arXiv preprint arXiv:1703.07562 (2017). [8] Jiang, Qingye, Young Choon Lee, and Albert Y. Zomaya. \"Serverless execution of scientific workflows.\" In International Conference on Service-Oriented Computing, pp. 706-721. Springer, Cham, 2017. [9] Chen, Weiwei, and Ewa Deelman. \"Workflowsim: A toolkit for simulating scientific workflows in distributed environments.\" In 2012 IEEE 8th international conference on E-science, pp. 1-8. IEEE, 2012. [10] Piraghaj, Sareh Fotuhi, Amir Vahid Dastjerdi, Rodrigo N. Calheiros, and Rajkumar Buyya. \"ContainerCloudSim: An environment for modeling and simulation of containers in cloud data centers.\" Software: Practice and Experience 47, no. 4 (2017): 505-521. [11] He, Zhenxiang, Jiankang Dong, Zhengjiang Li, and Wenjuan Guo. \"Research on Task Scheduling Strategy Optimization Based onACO in Cloud Computing Environment.\" In 2020 IEEE 5th Information Technology and Mechatronics Engineering Conference (ITOEC), pp. 1615-1619. IEEE, 2020. [12] Balis, Bartosz. \"HyperFlow: A model of computation, programming approach and enactment engine for complex distributed workflows.\" Future Generation Computer Systems 55 (2016): 147-162. [13] Kacsuk, Peter, J\u00f3zsef Kov\u00e1cs, and Zolt\u00e1n Farkas. \"The flowbster cloud-oriented workflow system to process large scientific data sets.\" Journal of Grid Computing 16, no. 1 (2018): 55-83. [14] Jonas, Eric, Johann Schleier-Smith, Vikram Sreekanti, Chia-Che Tsai, Anurag Khandelwal, Qifan Pu, Vaishaal Shankar et al. \"Cloud programming simplified: A berkeley view on serverless computing.\" arXiv preprint arXiv:1902.03383 (2019). [15] Wickremasinghe, B., Calheiros, R. N., & Buyya, R. (2010, April). Cloudanalyst: A cloudsim-based visual modeller for analysing cloud computing environments and applications. In 2010 24th IEEE international conference on advanced information networking and applications (pp. 446-452). IEEE. [16] Soltani, Boubaker, Afifa Ghenai, and Nadia Zeghib. \"Towards distributed containerized serverless architecture in multi cloud environment.\" Procedia computer science 134 (2018): 121-128. [17] Sturm, Rick, Carol Pollard, and Julie Craig. \"The NIST definition of cloud computing.\" In Proc. Appl. Perform. Manage.(APM) Digit. Enterprise, pp. 267-269. 2017. [18] Karmel, Anil, Ramaswamy Chandramouli, and Michaela Iorga. Nist definition of microservices, application containers and system virtual machines. No. NIST Special Publication (SP) 800-180 (Draft). National Institute of Standards and Technology, 2016. [19] Casalicchio, Emiliano. \"Autonomic Orchestration of Containers: Problem Definition and Research Challenges.\" In VALUETOOLS. 2016. [20] Cord\u00f3n Garc\u00eda, Oscar, Francisco Herrera Triguero, and Thomas St\u00fctzle. \"A review on the ant colony optimization metaheuristic: Basis, models and new trends.\" Mathware & soft computing. 2002 Vol. 9 N\u00fam. 2 [-3] (2002). [21] Choe, Tae-Young. \"Dynamic Task Scheduling Algorithm based on Ant Colony Scheme.\" (2015). [22] Fl\u00f3rez, Edson, Wilfredo G\u00f3mez, and Lola Bautista. \"An ant colony optimization algorithm for job shop scheduling problem.\" arXiv preprint arXiv:1309.5110 (2013). [23] Katiyar, Sapna, N. Ibraheem, and Abdul Quaiyum Ansari. \"Ant colony optimization: a tutorial review.\" In National Conference on Advances in Power and Control, pp. 99-110. 2015. [24] Lin, Miao, Jianqing Xi, Weihua Bai, and Jiayin Wu. \"Ant colony algorithm for multi-objective optimization of container-based microservice scheduling in cloud.\" IEEE Access 7 (2019): 83088-83100. [25] Rani, Rama, and Ritu Garg. \"Power and temperature-aware workflow scheduling considering deadline constraint in cloud.\" Arabian Journal for Science and Engineering 45, no. 12 (2020): 10775-10791. [26] Gutjahr, Walter J. \"ACO algorithms with guaranteed convergence to the optimal solution.\" Information processing letters 82, no. 3 (2002): 145-153.","title":"Master Thesis--Arman Riazi"},{"location":"public/university/master/#master-thesis-arman-riazi","text":"","title":"Master Thesis--Arman Riazi"},{"location":"public/university/master/#abstract","text":"Nowadays with the development of technology, we observe an increase in the number of users using Cloud Computing services. The process of increasing demand, the need for intelligent supply and demand cycle, better resource management, better utilization of resources is necessary. The results indicate competition from the cycle leads to a complex challenge for selecting and scheduling tasks to provide composite services in the Cloud. One of the most important issues in this field is Load Balancing. How to choose idle resources from a set of resources, overcoming compositional constraints, determines the importance of scheduling and resource allocation. These are NP-Hard issues. State-of-the-art architecture in the field of Cloud Computing for the implementation of Scientific Workflows that can be implemented in a distributed manner is becoming increasingly considered in other sciences related to Cloud Computing. The distinction and competition of Cloud Service Providers to publish services with more profit and better quality to customers are summarized in features such as \"Scalability, Stability, High availability, Fault tolerance.\" By providing new solutions and services for using specialists in other sciences, we can see the utilization of Cloud Computing Infrastructure and services in the fields of industry, commerce, health, and emergency applications. The possibility of conducting Scientific Workflows using Virtual Machines\" and Containers is a goal that has been addressed in the proposed architecture. The Load Balancing in the form of Containers at the level of Virtual Machines using the Ant Colony Optimization(ACO) algorithm is one of the important goals and issues that have been covered and solutions for utilization as much as possible has been explained. According to previous studies, there is no comprehensive or stable architecture that can balance Scientific Workflows using the algorithm ACO at the container virtualization level. By providing a simulator environment and testing several samples with different parameters then estimated the efficiency of the ACO and default algorithm of [[Cloudsim]], ie First-Come-First-Serve(FCFS). In the case of fifty, hundred Samples of Montage Scientific Workflow, which is considered as the average load rate, balancing the workload of the Containers on the Virtual Machine with the ACO has better results than the FCFS. If the value of the beta parameter of the ACO is assigned by zero, the algorithm will be trapped to the local optimal. In the case of a thousand sample, which is interpreted as a large amount of workload, if a Cybershake Workflow is used finally the results will be the same in all performance evaluation indicators. Keywords: [[Cloud]]Computing, #ContainerAllocation, [[Workflow]], #ACO Info Getting Project-OpenSource Experimental Research: CloudSim-Workflow-Function-Container-Plus (Toward ServerMix) ArmanRiazi(AramisIT)Modeling And Simulation Of running containers on the host without needing a virtual machine. Pros: Simulation of cost and performance Scalability: Container is very scalable than the virtual machines Elasticity: with separating logical code and data Decrease overhead Decrease the start time of tasks Fixed data dependency Resource management Workflow Engine management Resource Management Cons: Lack of clean code and more refactoring. exclude of design patterns, modular Not using Maven and Unit Test Concepts: Workflow: correspond with Function Composition on the simulation environment. Function as a Service(FaaS): Lambda or Cloud Function on the production environment. Cloudlet : the task of the client or job of workflow ACO Scheduler: Ant colony optimization Serverfull: include virtual machine/on-premises Serverless: no server, Event-driven, Provisioning, Scalability, FaaS ServerMix: The proposed model included both of them. In implementing simulation we did not use FaaS or Lambda functions but we have some situations and marks of the Serverless as a kind of theoretical because we implemented with the capability of elasticity that is one of the Serverless features. on the other hand, we are going to need event-driven and arrow functions in this java program. Target: Running Montage workflow base on the container. We have two repo for implementing: Container base on Vm: ( Cloudsim-Workflow-Function-Container ),( Cloudsim-Workflow-Function-Container-ACO ) Container base on host:( CloudSim-Workflow-Function-Container-Plus ), ( Cloudsim-Workflow-Function-Container-ACO ) Part of class diagram: ContainerCloudsim class diagram Sequential diagram of WFC architecture: Proposed Architecture: WFC has transparency and clarity on architecture and implemented java code. Prerequisites: Resolve project libraries include: commons-math3\u20133.2 | 3\u20136.1, flanagan, jdom-2.0.0, opencsv-2.3 (maybe) Results with montage Num.X: Season 6 Contact me: Let me know how can I help you with developing and researching. I am eager to your suggestion","title":"Abstract"},{"location":"public/university/master/#references","text":"[1] Malawski, M., Gajek, A., Zima, A., Balis, B., & Figiela, K. (2020). Serverless execution of scientific workflows: Experiments with hyperflow, aws lambda and google cloud functions. Future Generation Computer Systems, 110, 502-514. [2] Kavitha, Kadarla, and S. C. Sharma. \"Performance analysis of ACO\u2010based improved virtual machine allocation in cloud for IoT\u2010enabled healthcare.\" Concurrency and Computation: Practice and Experience 32, nov. 21 (2020): e5613. [3] Leitner, Philipp, Erik Wittern, Josef Spillner, and Waldemar Hummer. \"A mixed-method empirical study of Function-as-a-Service software development in industrial practice.\" Journal of Systems and Software 149 (2019): 340-359. [4] Shafiei, Hossein, Ahmad Khonsari, and Payam Mousavi. \"Serverless computing: A survey of opportunities, challenges and applications.\" arXiv preprint arXiv:1911.01296 (2019). [5] Garc\u00eda-L\u00f3pez, Pedro, Marc S\u00e1nchez-Artigas, Simon Shillaker, Peter Pietzuch, David Breitgand, Gil Vernik, Pierre Sutra, Tristan Tarrant, and Ana Juan Ferrer. \"Servermix: Tradeoffs and challenges of serverless data analytics.\" arXiv preprint arXiv:1907.11465 (2019). [6] P\u00e9rez A, Molt\u00f3 G, Caballer M, Calatrava A. Serverless computing for container-based architectures. Future Generation Computer Systems. 2018 Jun 1;83:50-9. [7] Spillner, Josef. \"Snafu: Function-as-a-service (faas) runtime design and implementation.\" arXiv preprint arXiv:1703.07562 (2017). [8] Jiang, Qingye, Young Choon Lee, and Albert Y. Zomaya. \"Serverless execution of scientific workflows.\" In International Conference on Service-Oriented Computing, pp. 706-721. Springer, Cham, 2017. [9] Chen, Weiwei, and Ewa Deelman. \"Workflowsim: A toolkit for simulating scientific workflows in distributed environments.\" In 2012 IEEE 8th international conference on E-science, pp. 1-8. IEEE, 2012. [10] Piraghaj, Sareh Fotuhi, Amir Vahid Dastjerdi, Rodrigo N. Calheiros, and Rajkumar Buyya. \"ContainerCloudSim: An environment for modeling and simulation of containers in cloud data centers.\" Software: Practice and Experience 47, no. 4 (2017): 505-521. [11] He, Zhenxiang, Jiankang Dong, Zhengjiang Li, and Wenjuan Guo. \"Research on Task Scheduling Strategy Optimization Based onACO in Cloud Computing Environment.\" In 2020 IEEE 5th Information Technology and Mechatronics Engineering Conference (ITOEC), pp. 1615-1619. IEEE, 2020. [12] Balis, Bartosz. \"HyperFlow: A model of computation, programming approach and enactment engine for complex distributed workflows.\" Future Generation Computer Systems 55 (2016): 147-162. [13] Kacsuk, Peter, J\u00f3zsef Kov\u00e1cs, and Zolt\u00e1n Farkas. \"The flowbster cloud-oriented workflow system to process large scientific data sets.\" Journal of Grid Computing 16, no. 1 (2018): 55-83. [14] Jonas, Eric, Johann Schleier-Smith, Vikram Sreekanti, Chia-Che Tsai, Anurag Khandelwal, Qifan Pu, Vaishaal Shankar et al. \"Cloud programming simplified: A berkeley view on serverless computing.\" arXiv preprint arXiv:1902.03383 (2019). [15] Wickremasinghe, B., Calheiros, R. N., & Buyya, R. (2010, April). Cloudanalyst: A cloudsim-based visual modeller for analysing cloud computing environments and applications. In 2010 24th IEEE international conference on advanced information networking and applications (pp. 446-452). IEEE. [16] Soltani, Boubaker, Afifa Ghenai, and Nadia Zeghib. \"Towards distributed containerized serverless architecture in multi cloud environment.\" Procedia computer science 134 (2018): 121-128. [17] Sturm, Rick, Carol Pollard, and Julie Craig. \"The NIST definition of cloud computing.\" In Proc. Appl. Perform. Manage.(APM) Digit. Enterprise, pp. 267-269. 2017. [18] Karmel, Anil, Ramaswamy Chandramouli, and Michaela Iorga. Nist definition of microservices, application containers and system virtual machines. No. NIST Special Publication (SP) 800-180 (Draft). National Institute of Standards and Technology, 2016. [19] Casalicchio, Emiliano. \"Autonomic Orchestration of Containers: Problem Definition and Research Challenges.\" In VALUETOOLS. 2016. [20] Cord\u00f3n Garc\u00eda, Oscar, Francisco Herrera Triguero, and Thomas St\u00fctzle. \"A review on the ant colony optimization metaheuristic: Basis, models and new trends.\" Mathware & soft computing. 2002 Vol. 9 N\u00fam. 2 [-3] (2002). [21] Choe, Tae-Young. \"Dynamic Task Scheduling Algorithm based on Ant Colony Scheme.\" (2015). [22] Fl\u00f3rez, Edson, Wilfredo G\u00f3mez, and Lola Bautista. \"An ant colony optimization algorithm for job shop scheduling problem.\" arXiv preprint arXiv:1309.5110 (2013). [23] Katiyar, Sapna, N. Ibraheem, and Abdul Quaiyum Ansari. \"Ant colony optimization: a tutorial review.\" In National Conference on Advances in Power and Control, pp. 99-110. 2015. [24] Lin, Miao, Jianqing Xi, Weihua Bai, and Jiayin Wu. \"Ant colony algorithm for multi-objective optimization of container-based microservice scheduling in cloud.\" IEEE Access 7 (2019): 83088-83100. [25] Rani, Rama, and Ritu Garg. \"Power and temperature-aware workflow scheduling considering deadline constraint in cloud.\" Arabian Journal for Science and Engineering 45, no. 12 (2020): 10775-10791. [26] Gutjahr, Walter J. \"ACO algorithms with guaranteed convergence to the optimal solution.\" Information processing letters 82, no. 3 (2002): 145-153.","title":"References"},{"location":"tags/","text":"Tags \u00b6 Following is a list of relevant tags: about \u00b6 About Me api \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api armanriazi \u00b6 About Me Master Thesis--Arman Riazi caas \u00b6 Rancher Master Thesis--Arman Riazi career \u00b6 About Me cicd \u00b6 CICD Kubernetes armanriazi-movies-reactjs armanriazi-vidly-api cloud \u00b6 Cloud Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi codebase \u00b6 Programming container \u00b6 Docker Rancher Master Thesis--Arman Riazi corda \u00b6 Corda-R3 couchdb \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api crowdloan \u00b6 Crowdloan research intro cryprocurrency \u00b6 Cryptocurrency Trading-Technical-Fundamental devops \u00b6 Hyperledger CICD Cloud DevOps Docker Elastic-Search Kubernetes Rancher Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi docker \u00b6 Docker elastic \u00b6 Elastic-Search esxi \u00b6 Virualization ethereum_ecosystem \u00b6 Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract ewasm \u00b6 ParaState WASM experience \u00b6 About Me expressjs \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api faucet \u00b6 Arman Riazi github \u00b6 Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api Programming Master Thesis--Arman Riazi hyperledger \u00b6 Hyperledger i \u00b6 About Me ibm \u00b6 Hyperledger armanriazi-movies-reactjs armanriazi-vidly-api iot \u00b6 Secondstate research intro java \u00b6 Corda-R3 Master Thesis--Arman Riazi kovan \u00b6 Arman Riazi kubernetes \u00b6 Kubernetes Rancher kusama \u00b6 Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro llvm \u00b6 Ewasm research intro master \u00b6 Master Thesis--Arman Riazi me \u00b6 About Me node \u00b6 Substrate setup research intro nodejs \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api parastate \u00b6 Parastate research intro polkadot \u00b6 Polka research intro Substrate framework research intro polkadot_ecosystem \u00b6 ParaState Polkadot Substrate Parastate research intro Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro pos \u00b6 Parastate research intro programming \u00b6 Programming project \u00b6 ParaState Polkadot Substrate rancher \u00b6 Rancher reactjs \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api recuit \u00b6 About Me research \u00b6 ParaState Polkadot restapi \u00b6 armanriazi-movies-reactjs armanriazi-vidly-api riazi \u00b6 About Me rpc \u00b6 Substrate setup research intro rust \u00b6 Substrate setup research intro Programming sample \u00b6 ParaState Polkadot Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api science \u00b6 Master Thesis--Arman Riazi search \u00b6 Elastic-Search secondstate \u00b6 Secondstate research intro simulation \u00b6 Corda-R3 skills \u00b6 About Me smartcontract \u00b6 Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract substrate \u00b6 ParaState Polkadot Substrate Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro trade \u00b6 Cryptocurrency Trading-Technical-Fundamental university \u00b6 Master Thesis--Arman Riazi virtualization \u00b6 Virualization Master Thesis--Arman Riazi vsphere \u00b6 Virualization wasm \u00b6 SecondState WASM Ewasm research intro webassembly \u00b6 Ewasm research intro whitepapaer \u00b6 Polka research intro If you want to get updated-graph image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ Graph) If you want to get updated-mind-mapping image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ MindMapping)","title":"Tags"},{"location":"tags/#tags","text":"Following is a list of relevant tags:","title":"Tags"},{"location":"tags/#about","text":"About Me","title":"about"},{"location":"tags/#api","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"api"},{"location":"tags/#armanriazi","text":"About Me Master Thesis--Arman Riazi","title":"armanriazi"},{"location":"tags/#caas","text":"Rancher Master Thesis--Arman Riazi","title":"caas"},{"location":"tags/#career","text":"About Me","title":"career"},{"location":"tags/#cicd","text":"CICD Kubernetes armanriazi-movies-reactjs armanriazi-vidly-api","title":"cicd"},{"location":"tags/#cloud","text":"Cloud Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi","title":"cloud"},{"location":"tags/#codebase","text":"Programming","title":"codebase"},{"location":"tags/#container","text":"Docker Rancher Master Thesis--Arman Riazi","title":"container"},{"location":"tags/#corda","text":"Corda-R3","title":"corda"},{"location":"tags/#couchdb","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"couchdb"},{"location":"tags/#crowdloan","text":"Crowdloan research intro","title":"crowdloan"},{"location":"tags/#cryprocurrency","text":"Cryptocurrency Trading-Technical-Fundamental","title":"cryprocurrency"},{"location":"tags/#devops","text":"Hyperledger CICD Cloud DevOps Docker Elastic-Search Kubernetes Rancher Virualization armanriazi-movies-reactjs armanriazi-vidly-api Master Thesis--Arman Riazi","title":"devops"},{"location":"tags/#docker","text":"Docker","title":"docker"},{"location":"tags/#elastic","text":"Elastic-Search","title":"elastic"},{"location":"tags/#esxi","text":"Virualization","title":"esxi"},{"location":"tags/#ethereum_ecosystem","text":"Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract","title":"ethereum_ecosystem"},{"location":"tags/#ewasm","text":"ParaState WASM","title":"ewasm"},{"location":"tags/#experience","text":"About Me","title":"experience"},{"location":"tags/#expressjs","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"expressjs"},{"location":"tags/#faucet","text":"Arman Riazi","title":"faucet"},{"location":"tags/#github","text":"Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api Programming Master Thesis--Arman Riazi","title":"github"},{"location":"tags/#hyperledger","text":"Hyperledger","title":"hyperledger"},{"location":"tags/#i","text":"About Me","title":"i"},{"location":"tags/#ibm","text":"Hyperledger armanriazi-movies-reactjs armanriazi-vidly-api","title":"ibm"},{"location":"tags/#iot","text":"Secondstate research intro","title":"iot"},{"location":"tags/#java","text":"Corda-R3 Master Thesis--Arman Riazi","title":"java"},{"location":"tags/#kovan","text":"Arman Riazi","title":"kovan"},{"location":"tags/#kubernetes","text":"Kubernetes Rancher","title":"kubernetes"},{"location":"tags/#kusama","text":"Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro","title":"kusama"},{"location":"tags/#llvm","text":"Ewasm research intro","title":"llvm"},{"location":"tags/#master","text":"Master Thesis--Arman Riazi","title":"master"},{"location":"tags/#me","text":"About Me","title":"me"},{"location":"tags/#node","text":"Substrate setup research intro","title":"node"},{"location":"tags/#nodejs","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"nodejs"},{"location":"tags/#parastate","text":"Parastate research intro","title":"parastate"},{"location":"tags/#polkadot","text":"Polka research intro Substrate framework research intro","title":"polkadot"},{"location":"tags/#polkadot_ecosystem","text":"ParaState Polkadot Substrate Parastate research intro Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro","title":"polkadot_ecosystem"},{"location":"tags/#pos","text":"Parastate research intro","title":"pos"},{"location":"tags/#programming","text":"Programming","title":"programming"},{"location":"tags/#project","text":"ParaState Polkadot Substrate","title":"project"},{"location":"tags/#rancher","text":"Rancher","title":"rancher"},{"location":"tags/#reactjs","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"reactjs"},{"location":"tags/#recuit","text":"About Me","title":"recuit"},{"location":"tags/#research","text":"ParaState Polkadot","title":"research"},{"location":"tags/#restapi","text":"armanriazi-movies-reactjs armanriazi-vidly-api","title":"restapi"},{"location":"tags/#riazi","text":"About Me","title":"riazi"},{"location":"tags/#rpc","text":"Substrate setup research intro","title":"rpc"},{"location":"tags/#rust","text":"Substrate setup research intro Programming","title":"rust"},{"location":"tags/#sample","text":"ParaState Polkadot Substrate Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract armanriazi-movies-reactjs armanriazi-vidly-api","title":"sample"},{"location":"tags/#science","text":"Master Thesis--Arman Riazi","title":"science"},{"location":"tags/#search","text":"Elastic-Search","title":"search"},{"location":"tags/#secondstate","text":"Secondstate research intro","title":"secondstate"},{"location":"tags/#simulation","text":"Corda-R3","title":"simulation"},{"location":"tags/#skills","text":"About Me","title":"skills"},{"location":"tags/#smartcontract","text":"Solidity Arman Riazi Arman Riazi Arman Riazi Arman Riazi SmartContract","title":"smartcontract"},{"location":"tags/#substrate","text":"ParaState Polkadot Substrate Polka research intro Substrate framework research intro Substrate setup research intro Crowdloan research intro Ewasm research intro","title":"substrate"},{"location":"tags/#trade","text":"Cryptocurrency Trading-Technical-Fundamental","title":"trade"},{"location":"tags/#university","text":"Master Thesis--Arman Riazi","title":"university"},{"location":"tags/#virtualization","text":"Virualization Master Thesis--Arman Riazi","title":"virtualization"},{"location":"tags/#vsphere","text":"Virualization","title":"vsphere"},{"location":"tags/#wasm","text":"SecondState WASM Ewasm research intro","title":"wasm"},{"location":"tags/#webassembly","text":"Ewasm research intro","title":"webassembly"},{"location":"tags/#whitepapaer","text":"Polka research intro If you want to get updated-graph image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ Graph) If you want to get updated-mind-mapping image, send me Email to armanriazi.blockchain@gmail.com (Title: armanriazi_github_io _ MindMapping)","title":"whitepapaer"}]}